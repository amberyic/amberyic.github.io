<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张浩在路上</title>
  
  <subtitle>张浩在路上</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://imzhanghao.com/"/>
  <updated>2020-11-05T16:00:00.000Z</updated>
  <id>https://imzhanghao.com/</id>
  
  <author>
    <name>ZhangHao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阿里CVR预估模型ESMM</title>
    <link href="https://imzhanghao.com/2020/11/06/alimama-cvr-esmm/"/>
    <id>https://imzhanghao.com/2020/11/06/alimama-cvr-esmm/</id>
    <published>2020-11-05T16:00:00.000Z</published>
    <updated>2020-11-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="cvr预估的场景"><a class="markdownIt-Anchor" href="#cvr预估的场景"></a> CVR预估的场景</h2><p>在诸如信息检索、推荐系统、在线广告投放系统等工业级的应用中准确预估转化率（post-click conversion rate，CVR）是至关重要的。</p><ul><li>对于DSP(Demand-Side Platform,需求方平台)中CPI(Cost Per Install，按每次安装付费)广告的投放，广告主只为他们推广应用每次的下载付费，所以对于DSP平台来说，让用户仅仅点击广告是不够的，还需要用户点击广告后去应用市场下载应用才能获得收益。DSP平台的<strong>利润=曝光量×点击率×转化率×转化收益-曝光量×单位曝光成本</strong>，这就导致DSP平台不仅仅需要预估用户对广告的点击率，还需要预估用户点击广告后的转化率。</li><li>对于SSP(Supply Side Platform, 供应方平台)中oCPC(Optimized Cost Per Click, 以目标转化为优化方式的点击出价)出价的场景中，需要使用pCVR调整每次点击的出价，从而实现平台和广告客户的双赢。</li><li>在推荐系统中，是希望能够借助推荐系统提升整站的GMV，<strong>GMV=流量×点击率×转化率×客单价</strong>,可见点击率和转化率是优化目标非常重要的两个因子，而这两个指标的共同优化，其实就是一个<a href="https://imzhanghao.com/2020/10/25/multi-task-learning/">多目标排序问题</a>.</li></ul><h2 id="cvr预估的挑战"><a class="markdownIt-Anchor" href="#cvr预估的挑战"></a> CVR预估的挑战</h2><p><strong>样本选择偏差（Sample Selection Bias，SSB）</strong><br /><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E6%A0%B7%E6%9C%AC%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE.png" alt="样本选择偏差" /><br />传统的CVR训练用的是点击数据，用户点击后未转化为负样本，点击后转化为正样本。但点击事件仅仅是整个曝光空间的一个子集，数据分布是不一致的，模型的泛化能力就会受到影响。</p><p><strong>数据稀疏问题（data sparsity Problem， DS）</strong><br />在实践中，点击率一般是比较低的，曝光数量远远大于点击数量，所以训练CVR模型的数据通常比CTR任务的少的多，训练数据的稀疏性使得CVR模型的拟合变得相当困难。</p><p><strong>延迟反馈（delayed feedback）</strong><br />用户发生点击后，可能需要较长时间才能发生转化，负样本可能是假性负样本，这给建模带来了很多困难。</p><h2 id="目前已有的解决方案"><a class="markdownIt-Anchor" href="#目前已有的解决方案"></a> 目前已有的解决方案</h2><p><strong>样本选择偏差</strong></p><ul><li><p>缺失值作为负样本（All Missing As Negative，AMAN）采用随机抽样策略把选择未点击的展示作为负示例，这在某种程度上可以减轻样本选择偏差的问题，但通常会会导致预测值偏低。</p></li><li><p>无偏采样（Unbias Sampling）通过蒙特·卡罗拒绝采样法（Rejection Sampling）来拟合观测值的真实基础分布，从而解决了CTR建模中的样本选择偏差问题。但是，通过拒绝概率的除法对样本加权时，可能会遇到数值不稳定性。</p></li></ul><p><strong>数据稀疏问题</strong></p><ul><li>建立了基于不同特征的分层估计器，并与逻辑回归模型相结合，但是，它依靠先验知识来构造层次结构，这很难在具有数千万用户和项目的推荐系统中应用。</li><li>过采样方法，复制了罕见分类的样本，这有助于减轻数据的稀疏性，但对采样率敏感。</li></ul><p><strong>延迟反馈</strong><br />这个问题的解决方案，推荐阅读:<a href="http://wnzhang.net/share/rtb-papers/delayed-feedback.pdf">Modeling delayed feedback in display advertising by Olivier Chapelle. KDD 2014</a>。主要思想就是对于还未观察到conversion的样本，不直接将其当做负样本，而是当前考虑click已发生的时间长短给模型不同大小的gradient.</p><blockquote><p>这不是本算法解决的重点问题，因为阿里推荐系统中转化反馈的延迟是可以接受的。</p></blockquote><p>总之，在CVR建模的情况下，SSB和DS问题都没有得到很好的解决，并且上述方法都没有利用动作的顺序信息。</p><h2 id="entire-space-multi-task-model"><a class="markdownIt-Anchor" href="#entire-space-multi-task-model"></a> Entire Space Multi-Task Model</h2><p>为了解决上述问题，阿里算法团队提出了关于CVR预估的新模型ESSM，<a href="https://arxiv.org/pdf/1804.07931.pdf">《Entire Space Multi-Task Model: An Eﬀective Approach for Estimating Post-Click Conversion Rate》</a>，发表在SIGIR’2018。</p><h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3><p>我们以电子商务网站推荐系统中的CVR建模为例，给定推荐的商品，用户可以点击感兴趣的商品，然后再购买其中一些。换句话说，用户操作遵循曝光（impression）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 点击（click）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 转换（conversion）的顺序模式。以此方式，<strong>CVR建模是指预估点击后转化率的任务</strong>，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>C</mi><mi>V</mi><mi>R</mi><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>k</mi><mo separator="true">,</mo><mi>i</mi><mi>m</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pCVR = p(conversion | click, impression)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord">∣</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><p>假设我们观察的数据空间是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">S</mi><mo>=</mo><msubsup><mrow><mrow><mo fence="true">{</mo><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>→</mo><msub><mi>z</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">}</mo></mrow><mo fence="true">∣</mo></mrow><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup></mrow><annotation encoding="application/x-tex">\mathcal{S}=\left.\left\{\left(\boldsymbol{x}_{i}, y_{i} \rightarrow z_{i}\right)\right\}\right|_{i=1} ^{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809309999999998em;vertical-align:-0.29969999999999997em;"></span><span class="minner"><span class="minner"><span class="mopen nulldelimiter"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span></span></span></span>，其中<em>N</em>代表总曝光数。</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold-italic">x</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span></span></span></span>代表曝光时能够观察到的特征向量，通常是具有多个字段的高维稀疏向量，例如用户相关的特征，商品相关的特征等，属于特征空间。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>是二进制标签，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>分别表示点击或转化事件发生，属于标签空间。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>→</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">y→z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>揭示了点击和转化标签的顺序相关性，即在发生转化事件时总会先有一个点击。</li><li>pCTR是点击率，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>C</mi><mi>T</mi><mi>R</mi><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pCTR=p(z=1 \mid \boldsymbol{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span></span></li><li>pCVR是转化率，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>C</mi><mi>V</mi><mi>R</mi><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pCVR=p(z=1 \mid y=1, \boldsymbol{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span></span></li><li>pCTCVR是点击转化率，即既点击又转化的概率，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>C</mi><mi>T</mi><mi>C</mi><mi>V</mi><mi>R</mi><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pCTCVR=p(y=1, z=1 \mid \boldsymbol{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span></span></li></ul><p>点击转化率（pCTCVR），点击率（pCTR）与转化率（pCVR）关系如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><munder><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>p</mi><mi>C</mi><mi>T</mi><mi>C</mi><mi>V</mi><mi>R</mi></mrow></munder><mo>=</mo><munder><munder><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>p</mi><mi>C</mi><mi>T</mi><mi>R</mi></mrow></munder><mo>×</mo><munder><munder><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>p</mi><mi>C</mi><mi>V</mi><mi>R</mi></mrow></munder></mrow><annotation encoding="application/x-tex">\underbrace{p(y=1, z=1 \mid \boldsymbol{x})}_{pCTCVR}=\underbrace{p(y=1 \mid \boldsymbol{x})}_{pCTR} \times \underbrace{p(z=1 \mid y=1, \boldsymbol{x})}_{pCVR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.462439em;vertical-align:-1.712439em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.4236689999999999em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.712439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.462439em;vertical-align:-1.712439em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.4236689999999999em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.712439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.462439em;vertical-align:-1.712439em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.4236689999999999em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.712439em;"><span></span></span></span></span></span></span></span></span></span></p><p>根据上式，可以看到三者的关系非常明确，那么也就意味着，我只要得到了三者中的二者就可以方便地估计剩下的一个参数了。</p><h3 id="预估cvr"><a class="markdownIt-Anchor" href="#预估cvr"></a> 预估CVR</h3><p>常规的CVR模型只用了点击以后的样本去预估pCVR，这个会有样本选择偏差的问题，好消息是pCTCVR和pCTR是可以在全量数据集上学习的，我们变换一下上面的公式，就可以根据pCTCVR和pCTR这两个在全量数据集上学习到的值计算出pCVR。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mo>∣</mo><mi mathvariant="bold-italic">x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">p(z=1 \mid y=1, \boldsymbol{x})=\frac{p(y=1, z=1 \mid \boldsymbol{x})}{p(y=1 \mid \boldsymbol{x})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>然而，实际上，pCTR很小，除以pCTR会引起数值不稳定，而且有可能是的pCVR超过1，这明显不合理。</p><p>ESMM通过乘法形式避免了这种情况，就是用全样本使用一个模型来同时学习pCTR以及pCVR，然后二者相乘拟合pCTCVR，pCTR预估以及pCTCVR预估是可以使用全样本训练的。</p><h3 id="网络结构"><a class="markdownIt-Anchor" href="#网络结构"></a> 网络结构</h3><p><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/ESMM%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84.png" alt="ESMM网络结构" /><br />ESMM是一个双塔模型，模型采用CTCVR和CTR来学习CVR，模型结构如上图。主要由两个子网组成：左侧所示的CVR网络和右侧所示的CTR网络，它们是共享底层Embedding的，只是上面的不一样，一个用来预测CVR，这个可以在全样本空间上进行训练，另一个是用来预测CTR，CTR是一个辅助任务。最后的pCTCVR可以在全样本空间中训练。</p><h3 id="损失函数"><a class="markdownIt-Anchor" href="#损失函数"></a> 损失函数</h3><p>ESMM的损失函数定义为以下公式。它由CTR和CTCVR任务的两个损失项组成，这些损失项是根据所有展示的样本计算得出的，而没有使用CVR任务的损失。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mrow><mo fence="true">(</mo><msub><mi>θ</mi><mrow><mi>c</mi><mi>v</mi><mi>r</mi></mrow></msub><mo separator="true">,</mo><msub><mi>θ</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>l</mi><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">;</mo><msub><mi>θ</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi></mrow></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>l</mi><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">&amp;</mi><msub><mi>z</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">;</mo><msub><mi>θ</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>×</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">;</mo><msub><mi>θ</mi><mrow><mi>c</mi><mi>v</mi><mi>r</mi></mrow></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L\left(\theta_{cvr}, \theta_{ctr}\right)=\sum_{i=1}^{N} l\left(y_{i}, f\left(x_{i} ; \theta_{ctr}\right)\right)+\sum_{i=1}^{N} l\left(y_{i} \&amp; z_{i}, f\left(x_{i} ; \theta_{ctr}\right) \times f\left(x_{i} ; \theta_{cvr}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">&amp;</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>其中， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\theta_{ctr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mrow><mi>c</mi><mi>v</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\theta_{cvr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别是CTR网络和CVR网络的参数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mo>∗</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(*)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord">∗</span><span class="mclose">)</span></span></span></span>是交叉熵损失函数。在CTR任务中，有点击行为的展现事件构成的样本标记为正样本，没有点击行为发生的展现事件标记为负样本；在CTCVR任务中，同时有点击和购买行为的展现事件标记为正样本，否则标记为负样本。</p><h3 id="创新点"><a class="markdownIt-Anchor" href="#创新点"></a> 创新点</h3><p><strong>共享Embedding层</strong></p><ul><li>CTR和CVR网络使用相同特征和特征embedding，即两者从Concatenate之后才学习各自部分独享的参数，这样能充分利用所有数据，缓解单独训练CVR的数据稀疏问题。</li></ul><p><strong>隐式学习pCVR</strong></p><ul><li>pCVR（粉色节点）仅是网络中的一个variable，没有显示的监督信号，因为我们也没办法显式的给出真实的CVR。</li><li>这个可以从模型的损失函数中看出来，loss只和pCTR与pCTCVR相关，而pCTCVR是pCVR与pCTR相乘得到的，模型拟合了pCTR和pCTCVR，那么pCVR相当于隐含地被训练了，并且pCVR这块输出使用sigmoid激活的保证了值域稳定。</li></ul><h3 id="解决常规cvr预估的问题"><a class="markdownIt-Anchor" href="#解决常规cvr预估的问题"></a> 解决常规CVR预估的问题</h3><p><strong>解决样本选择（BBS）问题</strong></p><ul><li>全空间建模： 和CTR一样，在全部展现样本上建模。pCTCVR、pCTR和pCVR都定义在全样本空间。通过分别估算单独训练的模型pCTR和pCTCVR并通过关系式可以获得pCVR，三个关联的任务共同训练分类器，能够利用数据的序列模式并相互传递信息，保障物理意义。</li></ul><p><strong>解决样本稀疏（DS）问题</strong></p><ul><li>迁移学习：在ESMM中，CVR网络的Embedding参数与CTR任务共享，遵循特征表示迁移学习范式。Embedding Layer 将大规模稀疏输入映射到低维稠密向量中，主导深度网络参数。CTR任务所有展现样本规模比CVR任务要丰富多个量级，该参数共享机制使ESMM中的CVR网络可以在未点击展现样本中进行学习。</li></ul><h2 id="实验"><a class="markdownIt-Anchor" href="#实验"></a> 实验</h2><p>由于ESMM模型创新性地利用了用户的序列行为做完模型的训练样本，因此并没有公开的数据集可供测试，阿里的技术同学从淘宝的日志中采样了一部分数据，作为<a href="https://tianchi.aliyun.com/datalab/dataSet.html?dataId=408">公开的测试集</a>。阿里妈妈的工程师们分别在公开的数据集和淘宝生产环境的数据集上做了测试，相对于其他几个主流的竞争模型，都取得了更好的性能。</p><h3 id="对比实验"><a class="markdownIt-Anchor" href="#对比实验"></a> 对比实验</h3><table><thead><tr><th>对照算法</th><th>描述</th></tr></thead><tbody><tr><td>BASE</td><td>单CVR任务作为baseline</td></tr><tr><td>AMAN</td><td>从未点击样本中随机抽样作为负例加入训练</td></tr><tr><td>OVERSAMPLING</td><td>对点击后的转化正样本过采样</td></tr><tr><td>UNBIAS</td><td>使用rejection sampling方式采样样本</td></tr><tr><td>DIVISION</td><td>训练CTR和CTCVR两个任务，除法运算得到pCVR</td></tr><tr><td>ESMM-NS</td><td>ESMM结构两个任务不共享Embedding</td></tr></tbody></table><h3 id="comparison-of-different-models-on-public-dataset"><a class="markdownIt-Anchor" href="#comparison-of-different-models-on-public-dataset"></a> Comparison of different models on Public Dataset</h3><p><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/ESMM%E5%AE%9E%E9%AA%8C%E6%95%88%E6%9E%9C%E6%95%B0%E6%8D%AE.png" alt="ESSM实验效果数据" /></p><p>与BASE模型相比，ESMM在CVR任务上实现了2.56％的AUC绝对值提升，这表明，即使对于有偏差的样本，它也具有良好的泛化性能。在具有完整样本的CTCVR任务上，它带来3.25％的AUC增益。这些结果验证了我们建模方法的有效性。</p><h3 id="comparison-of-different-models-wrt-different-sampling-rates-on-product-dataset"><a class="markdownIt-Anchor" href="#comparison-of-different-models-wrt-different-sampling-rates-on-product-dataset"></a> Comparison of different models w.r.t. different sampling rates on Product Dataset</h3><p><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/ESMM%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E6%95%88%E6%9E%9C.png" alt="" /><br />与BASE模型相比，ESMM在CVR任务上实现2.18％的绝对AUC提升，在CTCVR任务上实现2.32％的绝对AUC提升。 对于工业应用而言，这是一项重大改进，在这种应用中，AUC提升高达0.1％</p><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><ol><li>ESMM提出了一种新颖的CVR建模方案，充分利用了用户操作的顺序模式。</li><li>在CTR和CTCVR的两个辅助任务的帮助下，ESMM可以有效地解决实际实践中遇到的CVR建模的样本选择偏差和数据稀疏性的挑战。</li><li>ESMM是典型的share-bottom结构，即底层特征共享方式，在任务之间都比较相似或者相关性比较高的场景下能带来很好的效果。</li><li>ESMM可以看成一个MTL框架，其中子任务的网络结构可以替换，当中有很大的想象空间。</li></ol><p>最后，引用一下朱小强对ESMM的<a href="https://zhuanlan.zhihu.com/p/54822778">评价</a></p><blockquote><p><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%97%B6%E4%BB%A3MTL%E5%BB%BA%E6%A8%A1%E8%8C%83%E5%BC%8F.jpg" alt="深度学习时代MTL建模范式" /><br />关于ESMM模型多说两句，我们展示了对同态的CTR和CVR任务联合建模，帮助CVR子任务解决样本偏差与稀疏两个挑战。事实上这篇文章是我们总结DL时代Multi-Task Learning建模方法的一个具体示例。图中给出了更为一般的网络架构。据我所知这个工作在这个领域是最早的一批，但不唯一。今天很多团队都吸收了MTL的思路来进行建模优化，不过大部分都集中在传统的MTL体系，如研究怎么对参数进行共享、多个Loss之间怎么加权或者自动学习、哪些Task可以用来联合学习等等。ESMM模型的特别之处在于我们额外关注了任务的Label域信息，通过展现&gt;点击&gt;购买所构成的行为链，巧妙地构建了multi-target概率连乘通路。传统MTL中多个task大都是隐式地共享信息、任务本身独立建模，ESMM细腻地捕捉了契合领域问题的任务间显式关系，从feature到label全面利用起来。这个角度对互联网行为建模是一个比较有效的模式，后续我们还会有进一步的工作来推进。</p></blockquote><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><p>[1]<a href="https://arxiv.org/pdf/1804.07931.pdf">Entire Space Multi-Task Model: An Eﬀective Approach for Estimating Post-Click Conversion Rate</a><br />[2]<a href="https://zhuanlan.zhihu.com/p/37562283">CVR预估的新思路：完整空间多任务模型/杨旭东/知乎</a><br />[3]<a href="https://zhuanlan.zhihu.com/p/54822778">镶嵌在互联网技术上的明珠：漫谈深度学习时代点击率预估技术进展/朱小强/知乎</a><br />[4]<a href="https://blog.csdn.net/u013019431/article/details/100027405">ESMM-完整空间下的多任务学习/知天易or逆天难/CSDN</a><br />[5]<a href="https://blog.csdn.net/whgyxy/article/details/108565089">ESMM模型笔记/巴拉巴拉朵/CSDN</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;cvr预估的场景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#cvr预估的场景&quot;&gt;&lt;/a&gt; CVR预估的场景&lt;/h2&gt;
&lt;p&gt;在诸如信息检索、推荐系统、在线广告投放系统等工业级的应用中准确预估转化率（post-click conver
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://imzhanghao.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Multi-Task Learning" scheme="https://imzhanghao.com/tags/Multi-Task-Learning/"/>
    
      <category term="MTL" scheme="https://imzhanghao.com/tags/MTL/"/>
    
      <category term="ESMM" scheme="https://imzhanghao.com/tags/ESMM/"/>
    
      <category term="CVR" scheme="https://imzhanghao.com/tags/CVR/"/>
    
  </entry>
  
  <entry>
    <title>多任务学习(Multi-Task Learning)</title>
    <link href="https://imzhanghao.com/2020/10/25/multi-task-learning/"/>
    <id>https://imzhanghao.com/2020/10/25/multi-task-learning/</id>
    <published>2020-10-24T16:00:00.000Z</published>
    <updated>2020-10-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多目标优化背景"><a class="markdownIt-Anchor" href="#多目标优化背景"></a> 多目标优化背景</h2><p>推荐系统中，评价一个推荐系统的好坏，需要综合考虑推荐的用户满意度、预测准确度、覆盖率、多样性、新颖性、惊喜度、实时性、信任度以及健壮性等指标。在电商的场景中，我们希望提高用户对推荐结果的点击、停留时间、加入购物车、收藏、购买以及重复购买等指标；在信息流场景，我们希望提高用户点击率的基础上，提高用户关注，点赞、评论等行为，进而提高留存。</p><p>广告系统中，CPA广告不仅仅需要用户点击广告，还需要用户点击广告后，下载APP或者产生购买行为才行，所以需要同时优化点击率和点击转化率。如果仅仅优化点击率，那么可能都是一些创意很吸引人甚至三俗的广告被投放，真正优质的广告无法获得展示机会；如果仅仅优化曝光到转化，那么中间过程中的点击信息就没有利用起来，转化数据本身稀疏，训练难度很大，无法达到很好的模型效果。</p><p>搜索系统中，同样会遇到用户点击和用户转化行为之间的权衡，单目标的点击率优化比较高的点之后，很容易导致其他后续行为的下降，这说明仅仅是因为标题、创意上吸引了用户，内容并不是用户真正需要的。</p><p>在工业界真实的推荐/广告/搜索场景中，我们希望同时优化多个业务目标。</p><h2 id="多目标优化解决方案"><a class="markdownIt-Anchor" href="#多目标优化解决方案"></a> 多目标优化解决方案</h2><p>目前主要使用的策略包括：</p><ul><li>多模型融合</li><li>样本权重</li><li>排序学习</li><li>多任务学习</li></ul><h3 id="解决方案1多模型加权融合"><a class="markdownIt-Anchor" href="#解决方案1多模型加权融合"></a> 解决方案1:多模型加权融合</h3><p>多模型融合的思路是比较直接的，对于多个优化目标，分别对每一个目标建立一个模型，然后根据自身的业务特点，通过某种方式将这些模型的打分综合起来，计算一个总的分数在进行排序，综合分数的计算通常会根据不同的目标的重要性设定相应的权重来进行调节。</p><p><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/20201104144538.png" alt="多模型融合" /></p><p>最常见的融合方式就是加权求和： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><msub><mi>e</mi><mrow><mi>s</mi><mi>u</mi><mi>m</mi></mrow></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mi>i</mi></msub><mo>∗</mo><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">score_{sum} = \sum_{i=1}^{n} weight_i * score_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<br />不同的模型得到预测的score之后，通过一个函数将多个目标融合在一起。公式不一定是求和的形式，比如在广告排序中，可以是用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo>=</mo><mi>c</mi><mi>t</mi><msup><mi>r</mi><msub><mi>w</mi><mn>1</mn></msub></msup><mo>∗</mo><mi>c</mi><mi>v</mi><msup><mi>r</mi><msub><mi>w</mi><mn>2</mn></msub></msup><mo>∗</mo><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><msup><mi>e</mi><msub><mi>w</mi><mn>3</mn></msub></msup></mrow><annotation encoding="application/x-tex">score = ctr^{w_1} * cvr^{w_2} * price^{w_3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>调整以后相乘方式进行融合。</p><p><strong>优点</strong></p><ul><li>模型简单。更容易定义问题的正负样本，效果评估也更容易。</li><li>单一目标上效果更好。一个模型只需要对单一的目标进行建模，在样本充足的情况下，可以将单个目标的优化进行的更加彻底，获得更好的效果。</li></ul><p><strong>缺点</strong></p><ul><li>线上推理部分需要有额外的时间开销，通常我们采用并行的方式请求两个模型进行融合。</li><li>多个模型之间相互独立，不能互相利用各自训练的部分作为先验，容易过拟合。</li><li>部分目标数据稀疏，模型准确率低，比如点击转化率样本数据就很稀疏。</li><li>融合分数的超参难以学习。</li></ul><h3 id="解决方案2样本权重"><a class="markdownIt-Anchor" href="#解决方案2样本权重"></a> 解决方案2:样本权重</h3><p>因为分开训练模型的成本高，融合困难等等问题，很自然的会想到建模的时候把多个目标的样本放到一起训练。对于CPA广告，我们希望的是用户最终的转化，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mi>i</mi><mi>m</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>∗</mo><mi>c</mi><mi>t</mi><mi>r</mi><mo>∗</mo><mi>c</mi><mi>v</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">conversion=impression*ctr*cvr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，即在广告曝光（impression）的时候的时候预测用户是否会发生转化（conversion），那么我们定义正样本为曝光并且转化，负样本为曝光没有转化，如果直接这么建模，中间一个很重要的环节，点击就没有办法考虑进去，而真正的转化是很少的，等于我们会丢弃大量的信息。</p><p>调节样本权重就是想要把点击利用起来，我们定义曝光并且点击或者转化都为正样本，但是设置不同的样本权重，比如给曝光并且转化的样本设置权重为1，设置曝光并且点击的样本权重为0.2，这个权重可以参考真实的点击到转化比例进行设置。模型训练在计算梯更新参数时，梯度会乘以权重，对样本权重大的样本会给予更大的权重，模型会更加偏向于把样本权重大的样本分对，并且兼顾了两个目标，从而实现多目标的优化。样本权重并不是多目标的建模，而是将不同的目标折算成一个目标。</p><p>样本权重调节也有一种简单的变种方案，就是直接按照比例进行样本拷贝，实际效果差不多。</p><p><strong>优点</strong></p><ul><li>模型简单，仅仅需要在模型优化的过程中，梯度更新考虑样本权重即可实现。</li><li>兼容线上框架，离线处理即可，线上推理部分跟没有使用样本权重的模型一样。</li></ul><p><strong>缺点</strong></p><ul><li>样本权重确定困难，基本都是算法工程师根据业务情况，拍脑袋定的值，上线后需要不断的比例测试。</li><li>从原理上无法达到最优。</li></ul><h3 id="解决方案3排序学习"><a class="markdownIt-Anchor" href="#解决方案3排序学习"></a> 解决方案3:排序学习</h3><p>推荐/广告/搜索的场景中，我们使用每一次展示和隐式反馈对样本进行模型训练，其实并不需要真正的打分，根本目的是获得相对之间的顺序，因此我们可以使用排序学习来解决多目标问题。</p><p>排序学习来解决多目标问题，样本构造会非常的容易，一种常见的标注方法是对多目标产生的物品构建 Pair，比如用户对物品<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>产生的购买，对物品<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>产生了点击，假定我们觉得购买的目标比点击的目标更重要，就可以让<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>𝑖</mi><mo>&gt;</mo><mi>𝑗</mi></mrow><annotation encoding="application/x-tex">𝑖&gt;𝑗</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>，其他目标以此类推。有了顺序对后，我们便可以训练排序学习模型，这样一个模型便可以融合多个目标，而不用训练多个模型。</p><p><strong>优点</strong></p><ul><li>优化了目标排序，不需要设计复杂的超参数，能取得比排序好的效果。</li><li>本身就是单个模型有多个目标，线下好训练，线上服务压力小。</li></ul><p><strong>缺点</strong></p><ul><li>有些相对顺序不好构造，训练样本中没有的关系，在预测时可能存在。</li><li>样本数量增大，训练速度变慢，需要构造的情况多。</li><li>样本的不平衡性会被放大。举例：有的用户有十次点击，有的只有一次，在构造的时候十次的会构造更多的样本，一次的就吃亏。</li></ul><h3 id="解决方案4多任务学习"><a class="markdownIt-Anchor" href="#解决方案4多任务学习"></a> 解决方案4:多任务学习</h3><p>多任务学习是机器学习的一个子领域，旨在利用不同任务之间的相似性，同时解决多个不同任务。 这可以提高学习效率，还可以充当正则化器。</p><p>因为机器学习以及深度学习的成功主要归功于模型能更好的获取数据表达，能从数据中挖掘出需要的信息，而多任务表达学习能从数据中获取更加综合的、更加可变化的信息。单任务模型提取出的特征只针对该单任务有效，单个特征并不能很好地描述一个样本。当任务量较大，并且要求学习到的特征为每一个任务服务，即要求特征有一定的通用性时，多任务学习就更加合适。</p><p>多任务学习属于迁移学习的一种，通过共享参数，学习出多个分数，最后结合起来。我们将多任务学习视为一种归约迁移（inductive transfer）。归约迁移（inductive transfer）通过引入归约偏置（inductive bias）来改进模型，使得模型更倾向于某些假设。举例来说，常见的一种归约偏置（Inductive bias）是L1正则化，它使得模型更偏向于那些稀疏的解。在多任务学习场景中，归约偏置（Inductive bias）是由辅助任务来提供的，这会导致模型更倾向于那些可以同时解释多个任务的解。</p><h2 id="多任务学习"><a class="markdownIt-Anchor" href="#多任务学习"></a> 多任务学习</h2><p>现在大多数机器学习任务都是单任务学习。对于复杂的问题，也可以分解为简单且相互独立的子问题来单独解决，然后再合并结果，得到最初复杂问题的结果。这样做看似合理，其实是不正确的，因为现实世界中很多问题不能分解为一个一个独立的子问题，即使可以分解，各个子问题之间也是相互关联的，通过一些共享因素或共享表示（share representation）联系在一起。把现实问题当做一个个独立的单任务处理，忽略了问题之间所富含的丰富的关联信息。多任务学习就是为了解决这个问题而诞生的。把多个相关（related）的任务（task）放在一起学习。这样做真的有效吗？答案是肯定的。多个任务之间共享一些因素，它们可以在学习过程中，共享它们所学到的信息，这是单任务学习所具备的。相关联的多任务学习比单任务学习能去的更好的泛化（generalization）效果。</p><h3 id="多任务学习的定义"><a class="markdownIt-Anchor" href="#多任务学习的定义"></a> 多任务学习的定义</h3><p>如果有n个任务（传统的深度学习方法旨在使用一种特定模型仅解决一项任务），而这n个任务或它们的一个子集彼此相关但不完全相同，则称为多任务学习（MTL） 通过使用所有n个任务中包含的知识，将有助于改善特定模型的学习。</p><h3 id="单任务学习-vs-多任务学习"><a class="markdownIt-Anchor" href="#单任务学习-vs-多任务学习"></a> 单任务学习 VS 多任务学习</h3><p><strong>单任务学习</strong>：一次只学习一个任务（task），大部分的机器学习任务都属于单任务学习。<br /><strong>多任务学习</strong>：把多个相关（related）的任务放在一起学习，同时学习多个任务。</p><p>单任务与多任务对比如图所示：<br /><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E5%8D%95%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AF%B9%E6%AF%94.png" alt="单任务与多任务对比" /><br />从图中可以发现，单任务学习时，各个任务之间的模型空间（Trained Model）是相互独立的。多任务学习时，多个任务之间的模型空间（Trained Model）是共享的。</p><p>假设用含一个隐含层的神经网络来表示学习一个任务，单任务学习和多任务学习可以表示如图所示：<br /><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E5%9F%BA%E4%BA%8E%E5%8D%95%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E5%8D%95%E4%BB%BB%E5%8A%A1%E5%92%8C%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0%E5%AF%B9%E6%AF%94.png" alt="基于单层神经网络的单任务和多任务学习对比" /><br />从图中可以发现，单任务学习时，各个task任务的学习是相互独立的，多任务学习时，多个任务之间的浅层表示共享（shared representation）。</p><h3 id="多任务学习和其他学习算法的关系"><a class="markdownIt-Anchor" href="#多任务学习和其他学习算法的关系"></a> 多任务学习和其他学习算法的关系</h3><p><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/MTL%E5%92%8C%E5%85%B6%E4%BB%96%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="多任务学习和其他学习算法的关系" /></p><p><strong>transfer learning</strong>：定义一个源域一个目标域，从源域学习，然后把学习的知识信息迁移到目标域中，从而提升目标域的泛化效果。迁移学习一个非常经典的案例就是图像处理中的风格迁移。</p><p><strong>multi-task</strong>：训练模型的时候目标是多个相关目标共享一个表征，比如人的特征学习，一个人，既可以从年轻人和老人这方面分类，也可以从男人女人这方面分类，这两个目标联合起来学习人的特征模型，可以学习出来一个共同特征，适用于这两种分类结果，这就是多任务学习。</p><p><strong>multi-label</strong>：打多个标签，或者说进行多种分类，还是拿人举例啊，一个人，他可以被打上标签{青年，男性，画家}这些标签。如果还有一个人他也是青年男性，但不是画家，那就只能打上标签{青年，男性}。它和多任务学习不一样，它的目标不是学习出一个共同的表示，而是多标签。</p><p><strong>multi-class</strong>：多分类问题，可选类别有多个但是结果只能分到一类中，比如一个人他是孩子、少年、中年人还是老人。</p><h3 id="多任务学习的模式"><a class="markdownIt-Anchor" href="#多任务学习的模式"></a> 多任务学习的模式</h3><p><strong>隐层参数的硬共享机制</strong>：在所有任务之间共享隐藏层，同时保留几个特定任务的输出层来实现。降低了过拟合的风险。直观来讲，越多任务同时学习，我们的模型就能捕捉到越多任务的同一个表示，从而导致在我们原始任务上的过拟合风险越小。<br /><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E7%A1%AC%E5%85%B1%E4%BA%AB.png" alt="硬共享机制" /></p><p><strong>隐层参数的软共享机制</strong>：每个任务都有自己的模型，自己的参数。模型参数之间的距离是正则化的，以便鼓励参数相似化。<br /><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E8%BD%AF%E5%85%B1%E4%BA%AB.png" alt="软共享机制" /></p><h3 id="多任务学习的有效性"><a class="markdownIt-Anchor" href="#多任务学习的有效性"></a> 多任务学习的有效性</h3><p><strong>隐式数据增加机制</strong>：多任务学习有效的增加了训练实例的数目。由于所有任务都或多或少存在一些噪音，例如，当我们训练任务A上的模型时，我们的目标在于得到任务A的一个好的表示，而忽略了数据相关的噪音以及泛化性能。由于不同的任务有不同的噪音模式，同时学习到两个任务可以得到一个更为泛化的表示。如果只学习任务A要承担对任务A过拟合的风险，然而同时学习任务A与任务B对噪音模式进行平均，可以使得模型获得更好表示。</p><p><strong>注意力机制</strong>：如果一个任务非常嘈杂或数据量有限并且高维，模型可能难以区分相关与不相关的特征。MTL可以帮助模型将注意力集中在重要的特征上，因为其它任务将为这些特征的相关性或不相关性提供额外的证据。</p><p><strong>窃听（eavesdroping）或者提示（hint）</strong>:某特征G很容易被任务B学习，但是难以被另一个任务A学习。这可能是因为A以更复杂的方式与特征进行交互，或者因为其它特征阻碍了模型学习G的能力。通过MTL，我们可以允许模型 “窃听”，即通过任务B学习G。最简单的方法是通过 “提示”，即直接训练模型来预测最重要的特征。</p><p><strong>表征偏置</strong>：MTL任务偏好其它任务也偏好的表征，这造成模型偏差。这将有助于模型在将来泛化到新任务，因为在足够数量的训练任务上表现很好的假设空间也将很好地用于学习具有相同环境的新任务。</p><p><strong>正则化</strong>：MTL通过引入归纳偏置作为正则化项。因此，它降低了过拟合的风险以及模型的 Rademacher 复杂度（即适合随机噪声的能力）。</p><h3 id="多任务学习的工程实现范式"><a class="markdownIt-Anchor" href="#多任务学习的工程实现范式"></a> 多任务学习的工程实现范式</h3><p><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E5%AE%9E%E7%8E%B0%E8%8C%83%E5%BC%8F.png" alt="工程实现范式" /></p><p><strong>Shared-Bottom model</strong>：多任务的学习的本质在于共享表示层，并使得任务之间相互影响，在预测的目标之间的相关性比较高的情况下（比如：猫分类和狗分类，他们通常会有比较接近的底层特征，比如皮毛、颜色等等），这样参数共享层不会带来太大的损失，参数共享层能够加强参数共享，多个目标的模型可以联合训练，减小模型的参数规模，防止模型过拟合。<br /><strong>Multi-gate MoE model</strong>：底层特征共享方式的一大特点是在任务之间都比较相似或者相关性比较大的场景下能带来很好的效果，归纳偏置的作用也能够很好的发挥出来，而对于任务间差异比较大的场景，这种共享结构就有点捉襟见肘了。MMoE为每一个模型目标设置一个gate，所有的目标共享多个expert，每个expert通常是数层规模比较小的全连接层。gate用来选择每个expert的信号占比。每个expert都有其擅长的预测方向，最后共同作用于上面的多个目标。</p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><p>[1]<a href="https://zhuanlan.zhihu.com/p/96796043">推荐系统中如何做多目标优化/SunSuc/知乎</a><br />[2]<a href="https://lumingdong.cn/multi-task-learning-in-recommendation-system.html">推荐系统中的多任务学习/卢明冬/Blog</a><br />[3]<a href="https://zhuanlan.zhihu.com/p/27421983">模型汇总-14 多任务学习-Multitask Learning概述/深度学习于NLP/知乎</a><br />[4]<a href="https://www.kdd.org/kdd2018/accepted-papers/view/modeling-task-relationships-in-multi-task-learning-with-multi-gate-mixture-">Modeling Task Relationships in Multi-task Learning with Multi-gate Mixture-of-Experts<br /></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;多目标优化背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#多目标优化背景&quot;&gt;&lt;/a&gt; 多目标优化背景&lt;/h2&gt;
&lt;p&gt;推荐系统中，评价一个推荐系统的好坏，需要综合考虑推荐的用户满意度、预测准确度、覆盖率、多样性、新颖性、惊喜度、实时
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://imzhanghao.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="多目标学习" scheme="https://imzhanghao.com/tags/%E5%A4%9A%E7%9B%AE%E6%A0%87%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="多任务学习" scheme="https://imzhanghao.com/tags/%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Multi-Task Learning" scheme="https://imzhanghao.com/tags/Multi-Task-Learning/"/>
    
      <category term="MTL" scheme="https://imzhanghao.com/tags/MTL/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|8.场景数据利用 -- 原生广告</title>
    <link href="https://imzhanghao.com/2020/08/12/computing-advertising-8-native-ads/"/>
    <id>https://imzhanghao.com/2020/08/12/computing-advertising-8-native-ads/</id>
    <published>2020-08-11T16:00:00.000Z</published>
    <updated>2020-08-11T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="场景数据利用-原生广告"><a class="markdownIt-Anchor" href="#场景数据利用-原生广告"></a> 场景数据利用 – 原生广告</h1><h2 id="原生不是新问题原生广告初级形态"><a class="markdownIt-Anchor" href="#原生不是新问题原生广告初级形态"></a> 原生不是新问题：原生广告初级形态</h2><h3 id="搜索广告的原生性"><a class="markdownIt-Anchor" href="#搜索广告的原生性"></a> 搜索广告的原生性</h3><p>表现形式</p><ul><li>广告结果和自然结果非常接近</li></ul><p>触发原则</p><ul><li>同样根据关键词出发，与自然结果也保持一致</li></ul><h3 id="信息流广告"><a class="markdownIt-Anchor" href="#信息流广告"></a> 信息流广告</h3><p>表现形式</p><ul><li>广告结果和自然结果基本一致</li></ul><p>触发原则</p><ul><li>在社交类媒体中，用户往往无明确意图，因此根据投放条件触发</li></ul><h3 id="软文"><a class="markdownIt-Anchor" href="#软文"></a> 软文</h3><p>表现形式</p><ul><li>与自然结果非常一致地呈现</li></ul><p>触发原则</p><ul><li>内容本身即按广告主需求生产</li></ul><p>规模化比较困难</p><h3 id="cpscpa联盟affilicate"><a class="markdownIt-Anchor" href="#cpscpa联盟affilicate"></a> CPS/CPA联盟（Affilicate）</h3><p>表现形式</p><ul><li>渠道可以灵活决定，比较容易适配环境</li></ul><p>触发原则</p><ul><li>可以完全融入到垂直内容当中</li></ul><p>平台不易控制作弊</p><blockquote><p>思考：信息流中的显示广告和普通横幅相比，有什么本质区别？</p></blockquote><h2 id="与pc有何不同移动广告机遇与挑战"><a class="markdownIt-Anchor" href="#与pc有何不同移动广告机遇与挑战"></a> 与PC有何不同：移动广告机遇与挑战</h2><h3 id="移动广告的特点"><a class="markdownIt-Anchor" href="#移动广告的特点"></a> 移动广告的特点</h3><p>情景广告的可能性：</p><ul><li>移动设备与PC最大的不同，是可以对用户进行模式进行全天候的检测和分析。</li><li>从地理位置、生活状态、需求意图等各方面都可能对用户有深入的理解。</li></ul><p>大量的潜在O2O广告主</p><ul><li>GPS、蜂窝、wifi等多种精确定位和手段，是的基于精确地理位置的O2O广告变的可行</li></ul><p>移动广告的创意形式</p><ul><li>条幅（Banner），全屏，应用推荐、积分墙</li></ul><h3 id="移动广告的挑战"><a class="markdownIt-Anchor" href="#移动广告的挑战"></a> 移动广告的挑战</h3><ul><li>应用生态造成的行为数据割裂</li><li>许多PC时代广告主移动化程度还不够，无法充分消化广告带来的流量</li><li>移动广告的产品形态需要一次革命</li></ul><h3 id="应用下载归因attribution"><a class="markdownIt-Anchor" href="#应用下载归因attribution"></a> 应用下载归因（Attribution）</h3><p>归因于最后一次点击，一般1～3天内有效</p><p>应用下载归因原理</p><ul><li>iOS：点击时向检测商发送iDFA</li><li>Android：利用Google Play的refer机制</li><li>WAP：根据点击和转化的fingerprint进行匹配</li></ul><p>主要技术提供商</p><ul><li>全球：Appsflyer，Adjust 点击、转化都收费</li><li>国内：TalkingData 只有转化收费</li></ul><blockquote><p>思考： CPI/CPA广告在移动盛行的原因是什么？</p></blockquote><h2 id="移动场景定向"><a class="markdownIt-Anchor" href="#移动场景定向"></a> 移动场景定向</h2><h3 id="什么时场景"><a class="markdownIt-Anchor" href="#什么时场景"></a> 什么时场景</h3><p>用户当前所处的场合和状态</p><ul><li>例如：地铁上、上厕所、开会中、运动中。。。</li></ul><p>丰富的场景是移动设备所特有的：</p><ul><li>台式机：位置固定、只有极简单的场景</li><li>笔记本：可以移动，但是只有工作和娱乐类场景</li><li>移动设备：人体器官，具有人们所有可能的场景</li></ul><p>场景是不是上下文</p><ul><li>不是，场景是用户的状态，而非媒体的特征</li></ul><h3 id="如何检测场景"><a class="markdownIt-Anchor" href="#如何检测场景"></a> 如何检测场景？</h3><p>根据移动多种信息来源和传感器进行检测</p><p>例：检测用户是否处于工作状态</p><ul><li>每天上午十点，对用户地理位置采样，如果大多数采样在同一位置，则该位置为用户上班地点</li><li>如果采样没有明显的位置规律，则用户为销售等无固定地点工作者</li><li>检测到用户处于上班地点，则认为其处于工作状态</li></ul><p>注意：场景检测不需要逻辑上完全正确</p><blockquote><p>思考：如果检测用户早晨上班前需要吃早点的场景？</p></blockquote><h2 id="打造植入式体验原生广告产品未来"><a class="markdownIt-Anchor" href="#打造植入式体验原生广告产品未来"></a> 打造植入式体验：原生广告产品未来</h2><h3 id="原生广告平台应该是什么样的"><a class="markdownIt-Anchor" href="#原生广告平台应该是什么样的"></a> 原生广告平台应该是什么样的？</h3><p>媒体控制广告展示形式：</p><ul><li>原生广告的最重要的产品原则，是即内容和广告的展示形式要尽可能一致，而没有媒体的参与是不可能的。</li></ul><p>媒体明确提供广告需求：</p><ul><li>搜索广告的效果好，因为其投放是按照内容结果的展示原则进行的。</li></ul><p>广告平台提供结构化付费内容：</p><ul><li>核心的定向条件检索 + eCPM排序功能仍然没变</li></ul><h3 id="植入式原生广告"><a class="markdownIt-Anchor" href="#植入式原生广告"></a> 植入式原生广告</h3><ul><li>拉萨游记 推 拉萨酒店的广告</li><li>创意由媒体决定</li></ul><h3 id="表现原生"><a class="markdownIt-Anchor" href="#表现原生"></a> 表现原生</h3><p>情形一：广告自然地显示在媒体内容中</p><ul><li>例：信息流、瀑布流</li></ul><p>情形二：独立广告位风格与媒体靠近</p><ul><li>例：原生化插屏</li></ul><h3 id="场景原生"><a class="markdownIt-Anchor" href="#场景原生"></a> 场景原生</h3><p>情形一：根据App的需求提供付费内容</p><ul><li>例：电商比价</li></ul><p>情景二：根据数据来判断用户场景，进而提供相应的付费内容</p><h3 id="原生广告方向与挑战"><a class="markdownIt-Anchor" href="#原生广告方向与挑战"></a> 原生广告方向与挑战</h3><p>方向：</p><ul><li>让媒体深入参与广告交易，而不是像传统广告系统那样只在平台和需求方之间交易。</li><li>将数据驱动的受众定向展示广告，变成以媒体内容为导向的，不触及用户隐私的精准广告</li><li>让高相关的付费内容代替广告成为媒体变现主要形式</li></ul><p>挑战：</p><ul><li>媒体参与让广告多了个自由度，运营难度增大</li><li>大量分行业、结构化广告信息的建立需要时间</li></ul><blockquote><p>思考：电影植入广告如何利用在线广告模式？</p></blockquote><h3 id="如何对付多变的原生广告位置"><a class="markdownIt-Anchor" href="#如何对付多变的原生广告位置"></a> 如何对付多变的原生广告位置？</h3><h3 id="facebook信息流广告"><a class="markdownIt-Anchor" href="#facebook信息流广告"></a> facebook信息流广告</h3><ul><li>向媒体返回元素进行动态拼装</li><li>大图、图标、标题、描述</li></ul><h3 id="vungle原生激励视频"><a class="markdownIt-Anchor" href="#vungle原生激励视频"></a> Vungle原生激励视频</h3><ul><li>对用户无打扰</li></ul><h3 id="outbrain内容发现平台"><a class="markdownIt-Anchor" href="#outbrain内容发现平台"></a> Outbrain内容发现平台</h3><ul><li>网站将内容以RSS feed方式提供给Outbrain并给出点击单价，OutBrain将这些付费内容在其他网站上推荐给读者</li><li>推荐和广告的边界模糊化</li><li>将内容也按照eCPM最化的方式排序，这一思路也可以被站内的推荐系统，即流量塑形。</li></ul><h2 id="从传播到交互创意的优化与发展"><a class="markdownIt-Anchor" href="#从传播到交互创意的优化与发展"></a> 从传播到交互：创意的优化与发展</h2><h3 id="创意优化"><a class="markdownIt-Anchor" href="#创意优化"></a> 创意优化</h3><ul><li>品牌性创意与效果性创意</li><li>在相近的广告诉求下，通过创意内容优化效果</li></ul><h3 id="创意优化主要思路"><a class="markdownIt-Anchor" href="#创意优化主要思路"></a> 创意优化主要思路</h3><p>程序化创意</p><ul><li>网站重定向广告加入广告主logo</li><li>搜索重定向广告加入搜索框</li><li>地域定向明示地点或本地电话</li></ul><p>充分利用点击热点图</p><ul><li>是否创意中的关键诉求确实吸引了用户的注意？</li></ul><h3 id="交互化的创意发展方向"><a class="markdownIt-Anchor" href="#交互化的创意发展方向"></a> 交互化的创意发展方向</h3><ul><li>越来越动态、越来越多的交互</li></ul><h3 id="applovin"><a class="markdownIt-Anchor" href="#applovin"></a> APPLOVIN</h3><p>核心业务：</p><ul><li>移动广告网络，向APP同时提供变现和推广服务</li><li>主要营收来源于游戏内激励视频广告</li><li>程序化业务并不发达</li></ul><p>其他点评</p><ul><li>2016.9以14亿美金价格被中国基金收购</li><li>Casino游戏收入占比很高，原因不详</li></ul><h3 id="crossinstall"><a class="markdownIt-Anchor" href="#crossinstall"></a> CROSSINSTALL</h3><p>核心业务：</p><ul><li>H5 Playable Ads + DSP</li><li>以游戏类CPA广告主为主</li><li>关键能力是通过A/B测试调整和H5创意中的参数</li></ul><p>其他点评</p><ul><li>为数不多的成功投放移动CPA广告的DSP</li></ul><blockquote><p>思考：未来创意中哪些环节会被机器代替?</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;场景数据利用-原生广告&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#场景数据利用-原生广告&quot;&gt;&lt;/a&gt; 场景数据利用 – 原生广告&lt;/h1&gt;
&lt;h2 id=&quot;原生不是新问题原生广告初级形态&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
      <category term="原生广告" scheme="https://imzhanghao.com/tags/%E5%8E%9F%E7%94%9F%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|7.永无止境的博弈 -- 流量保护和反作弊</title>
    <link href="https://imzhanghao.com/2020/07/03/computing-advertising-7-fraud-detection/"/>
    <id>https://imzhanghao.com/2020/07/03/computing-advertising-7-fraud-detection/</id>
    <published>2020-07-02T16:00:00.000Z</published>
    <updated>2020-07-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="永无止境的博弈流量保护和反作弊"><a class="markdownIt-Anchor" href="#永无止境的博弈流量保护和反作弊"></a> 永无止境的博弈：流量保护和反作弊</h1><h3 id="作弊的分类"><a class="markdownIt-Anchor" href="#作弊的分类"></a> 作弊的分类</h3><ul><li>CPM/CPC作弊 【媒体网站】 &lt;–结算方式–&gt; CPA/CPS作弊【客户网站】</li><li>虚假流量（NHT，Non-Human Traffic）【机器刷量】 &lt;–流量属性–&gt; 流量归因 【从别人那边抢过来的流量】</li><li>机器作弊 &lt;–主体–&gt; 人工作弊</li></ul><h3 id="cpmcpc广告监测"><a class="markdownIt-Anchor" href="#cpmcpc广告监测"></a> CPM/CPC广告监测</h3><ul><li>1.广告主与媒体签订广告合同，约定结算方式。</li><li>2.第三方监测在广告展示环节添加检测代码/SDK，随着广告一起到达用户端。</li><li>3.媒体展示广告，用户看到广告创意</li><li>4.用户产生广告交互行为的被发送到第三方，第三方进行统计。</li><li>5.第三方将统计数据交给广告主，广告主据此与媒体结算。</li></ul><h3 id="广告监测代码"><a class="markdownIt-Anchor" href="#广告监测代码"></a> 广告监测代码</h3><p>参数</p><ul><li>OS：客户端操作系统的种类，0-Android，1-iOS，2-WP，3-Others</li><li>IMEI：15位，适用于Android，需要MD5加密</li><li>MAC：用户终端硬件地址，适用于Android和iOS，字母转换成大写后MD5加密</li><li>AndoridID：适用于Android，需要MD5加密</li><li>IDFA：适用于iOS，保留原始值</li><li>openUDID：适用于iOS，保留原始值</li></ul><h3 id="cpacps广告归因"><a class="markdownIt-Anchor" href="#cpacps广告归因"></a> CPA/CPS广告归因</h3><ul><li>1.用户ID碰撞归因</li><li>2.直接访问归因：为每一个渠道分配一个渠道ID，放在落地页URL参数中，当用户在到达落地页以后的统一个session中完成转化行为，就记到该渠道上。（中国的安卓应用下载，采用的也是直接访问归因法，给每个渠道打不通的apk包，分别记录下载量）</li></ul><h3 id="刷监测代码作弊"><a class="markdownIt-Anchor" href="#刷监测代码作弊"></a> 刷监测代码作弊</h3><ul><li>直接刷代码</li><li>服务器刷代码</li><li>客户端刷代码</li></ul><h3 id="iframe虚假展示作弊"><a class="markdownIt-Anchor" href="#iframe虚假展示作弊"></a> iFrame虚假展示作弊</h3><ul><li>把iframe的尺寸变成1*1的，用户看不见。</li></ul><h3 id="诱骗用户点击"><a class="markdownIt-Anchor" href="#诱骗用户点击"></a> 诱骗用户点击</h3><ul><li>软件下载网站</li></ul><h3 id="点击热力图检查作弊"><a class="markdownIt-Anchor" href="#点击热力图检查作弊"></a> 点击热力图检查作弊</h3><ul><li>正常点击热力图</li><li>作弊点击热力图</li></ul><h3 id="作弊中如何处理用户id"><a class="markdownIt-Anchor" href="#作弊中如何处理用户id"></a> 作弊中如何处理用户ID</h3><ul><li>频繁更换用户ID</li><li>Cloaking<ul><li>伪装，定向屏蔽</li></ul></li></ul><h3 id="运营商弹窗"><a class="markdownIt-Anchor" href="#运营商弹窗"></a> 运营商弹窗</h3><h3 id="cps作弊手段"><a class="markdownIt-Anchor" href="#cps作弊手段"></a> CPS作弊手段</h3><p>运营商落地页劫持</p><ul><li><a href="http://www.jd.com">http://www.jd.com</a> --&gt; <a href="http://www.jd.com?utm_source=ABC">http://www.jd.com?utm_source=ABC</a></li></ul><p>Cookie Stuffing</p><ul><li>在CPS联盟机制下，只要给用户打上标签标识媒体来源的Cookie，该用户的购买行为就会到该媒体</li><li>基本原理是在浏览器上悄悄对推广链接发器HTTP请求，在用户不点击广告的情况下打上媒体的Cookie。</li></ul><h3 id="cpi常见作弊手段"><a class="markdownIt-Anchor" href="#cpi常见作弊手段"></a> CPI常见作弊手段</h3><ul><li>Click Spam（帮用户点击，转化率低，后续效果好）</li><li>Click injection（国外 安卓）</li><li>Ad stacking（蕾丝Click Spam）</li><li>刷机（群控，转化率高，后续效果差）</li></ul><h3 id="常见人工作弊"><a class="markdownIt-Anchor" href="#常见人工作弊"></a> 常见人工作弊</h3><ul><li>淘宝代销（不寄真实商品）</li><li>羊毛党（P2P理财）</li><li>买栗子（汽车行业，销售线索，宝马）</li></ul><blockquote><p>思考: 移动广告反作弊与PC相比有什么难易？</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;永无止境的博弈流量保护和反作弊&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#永无止境的博弈流量保护和反作弊&quot;&gt;&lt;/a&gt; 永无止境的博弈：流量保护和反作弊&lt;/h1&gt;
&lt;h3 id=&quot;作弊的分类&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
      <category term="流量保护" scheme="https://imzhanghao.com/tags/%E6%B5%81%E9%87%8F%E4%BF%9D%E6%8A%A4/"/>
    
      <category term="反作弊" scheme="https://imzhanghao.com/tags/%E5%8F%8D%E4%BD%9C%E5%BC%8A/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|6.多方数据变现-程序化交易</title>
    <link href="https://imzhanghao.com/2020/06/22/computing-advertising-6-programmatic-direct-buying/"/>
    <id>https://imzhanghao.com/2020/06/22/computing-advertising-6-programmatic-direct-buying/</id>
    <published>2020-06-21T16:00:00.000Z</published>
    <updated>2020-06-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多方数据变现-程序化交易"><a class="markdownIt-Anchor" href="#多方数据变现-程序化交易"></a> 多方数据变现 – 程序化交易</h1><h2 id="与证券类似的交易程序化交易若干模式"><a class="markdownIt-Anchor" href="#与证券类似的交易程序化交易若干模式"></a> 与证券类似的交易：程序化交易若干模式</h2><h3 id="p5iab总结的程序化相关交易方式"><a class="markdownIt-Anchor" href="#p5iab总结的程序化相关交易方式"></a> P5.IAB总结的程序化相关交易方式</h3><h3 id="p5实时竞价过程示意"><a class="markdownIt-Anchor" href="#p5实时竞价过程示意"></a> P5.实时竞价过程示意</h3><h3 id="p5实时竞价特点"><a class="markdownIt-Anchor" href="#p5实时竞价特点"></a> P5.实时竞价特点</h3><ul><li><p>每次展示都有Ad Exchange服务器与多个DSP服务器的参与，这时的服务器与带宽成本大大增加。</p></li><li><p>在询价过程中，Ad Exchange要等待一个约定的时间片（一般情况为100ms），这使得用户看到的广告延迟增加，对CTR有负面影响。</p></li><li><p>原理上DSP可以以极低的出价参与竞价，这样虽不能获得流量，却可以低成本得到在媒体网站上的行为数据，这里存在着潜在的信息泄漏风险。</p></li></ul><ul><li>Programmatic</li><li>RealTime</li></ul><h3 id="p5优选preferred-deal"><a class="markdownIt-Anchor" href="#p5优选preferred-deal"></a> P5.优选（Preferred Deal）</h3><h3 id="p5私有市场pmp"><a class="markdownIt-Anchor" href="#p5私有市场pmp"></a> P5.私有市场（PMP）</h3><p>媒体位了保证广告主的质量，希望将竞拍限制在一些被邀请需求方的小范围内。这种程序化交易，叫做私有市场。（Private Marketplace，PMP）</p><p>坚固了优选和实时竞价的好处</p><ul><li>广告主的质量可以由少量被邀请需求方很好地控制，这有利于确保媒体的价值不受伤害。</li><li>在需求方之间保留了竞价关系，有利于提高媒体的变现能力</li></ul><p>交易接口的形式与一般RTB一致</p><h3 id="p5程序化直投pdb"><a class="markdownIt-Anchor" href="#p5程序化直投pdb"></a> P5.程序化直投（PDB）</h3><p>DSP可根据广告主需求，进行媒介采买，并且将采买的广告资源二次分配给广告主的不同子品牌或产品，这叫程序化直投（Programmatic Direct Buy，PDB）</p><p>本质上是一种GD或Network的投放方式</p><ul><li>如果子品牌有保量需求，是GD市场</li><li>如果子品牌没有保量需求，可以用竞价广告网络的方式运营</li></ul><p>产品形式和前述的RTB/PMP完全不同，需要独立的广告投放系统，或者是自建一个专门的ADX，用DSP接入。</p><blockquote><p>思考：对媒体和广告主而言，什么情况下需要程序化交易？</p></blockquote><a id="more"></a><h2 id="证劵交易所广告交易平台"><a class="markdownIt-Anchor" href="#证劵交易所广告交易平台"></a> “证劵交易所”：广告交易平台</h2><h3 id="广告交易平台adx"><a class="markdownIt-Anchor" href="#广告交易平台adx"></a> 广告交易平台（ADX）</h3><p>关键特征</p><ul><li>用实时竞价（RTB）方式连接广告和（上下文，用户）</li><li>按照展示上的竞价收取广告主费用</li></ul><p>类比</p><ul><li>实时竞价 &lt;==&gt; 股票实时交易</li><li>广告交易市场 &lt;==&gt; 证券交易所</li><li>需求方平台 &lt;==&gt; 券商</li></ul><h3 id="广告交易平台特点"><a class="markdownIt-Anchor" href="#广告交易平台特点"></a> 广告交易平台特点</h3><p>优化目标：取出价最高的报价展示</p><p>关键特点</p><ul><li>竞价方式不向广告主做量的约定，而是根据变现能力，即eCPM，来决定每次展示分配给哪个广告主。</li><li>按人群售卖，淡化媒体和广告位的概念</li><li>无需再满足广告主品牌独立的要求</li><li>采用分成结算，运营方的现金流状况大为改善</li></ul><h3 id="adx系统架构"><a class="markdownIt-Anchor" href="#adx系统架构"></a> ADX系统架构</h3><h3 id="adx主要技术点"><a class="markdownIt-Anchor" href="#adx主要技术点"></a> ADX主要技术点</h3><ul><li>由于实时竞价的功能需求，广告交易市场解决供给方和需求方用户身份对应的问题，在web的广告环境下，这需要用到cookie-mapping的技术。</li><li>实践中当考虑到带宽和服务成本带来的约束时，希望用更少的询价请求完成尽可能高效的变现，在这种问题的情况下，公式的优化问题会有所变化，这一问题成为询价优化。</li></ul><h3 id="两域名cookie-mapping例媒体与dmp"><a class="markdownIt-Anchor" href="#两域名cookie-mapping例媒体与dmp"></a> 两域名Cookie Mapping（例：媒体与DMP）</h3><ul><li>1.用户到达媒体页面</li><li>2.向媒体的服务器请求cookie mapping js代码</li><li>3.媒体的cookie mapping服务返回该段JS代码</li><li>4.JS代码判断需要mapping的话（最近已经做过则可以不做），向DMP发起cookie mapping请求，并传送媒体的标识（mid）及媒体方的cookie（mck）；</li><li>DMP返回一个1*1的beacon，并记录下媒体方cookie（mck）与己方cookie(dck)的对应关系。</li></ul><h3 id="三域名cookie-mapping例adx与dsp"><a class="markdownIt-Anchor" href="#三域名cookie-mapping例adx与dsp"></a> 三域名Cookie Mapping（例：ADX与DSP）</h3><ul><li>1.用户访问广告主页面</li><li>2.选择性家在一个DSP域名下的iframe</li><li>3.DSP判断需要mapping的话，返回包括多个beacon的动态html，此处多个beacon的目的是为了同时与多个ADX交换cookie</li><li>4.通过其中的某个beacon，向对应的ADX发送cookie-mapping请求，并带有ADX标识</li><li>5.ADX通过302重定向向DSP返回ADX标识（xid）以及其域名下的cookie（xck）</li><li>6.DSP返回beacon，并记录下ADX cookie（xid）与己方cookie（dck）对应关系</li></ul><h3 id="询价优化call-out-optimization"><a class="markdownIt-Anchor" href="#询价优化call-out-optimization"></a> 询价优化（Call Out Optimization）</h3><p>问题:在带宽和服务成本的约束下，获得更高的eCPM</p><p>在线分配框架</p><h2 id="券商下单系统需求方平台"><a class="markdownIt-Anchor" href="#券商下单系统需求方平台"></a> “券商下单系统”：需求方平台</h2><h3 id="定制化用户标签"><a class="markdownIt-Anchor" href="#定制化用户标签"></a> 定制化用户标签</h3><p>定制化标签</p><ul><li>根据广告主需求加工的标签体系</li><li>往往要排到第一方数据</li></ul><p>定制化标签经典方式：</p><ul><li>网站重定向 -&gt; 个性化重定向</li><li>搜索重定向</li><li>新客推荐（Look-alike）</li></ul><h3 id="重定向retargeting原理"><a class="markdownIt-Anchor" href="#重定向retargeting原理"></a> 重定向（Retargeting）原理</h3><h3 id="重定向分类"><a class="markdownIt-Anchor" href="#重定向分类"></a> 重定向分类</h3><p>网站重定向（Site retargeting）</p><ul><li>根据用户在广告主网站上的行为进行重定向<br />搜索重定向（Search retargeting）</li><li>根据用户与广告主相关的搜索行为进行重定向<br />个性化重定向（Personalizied retargeting）</li><li>根据用户在广告主网站上关注的具体产品和购买阶段，推送商品粒度的广告，可以视为一个站外推荐引擎</li></ul><h3 id="新客推荐look-alike"><a class="markdownIt-Anchor" href="#新客推荐look-alike"></a> 新客推荐（Look-alike）</h3><p>问题：</p><ul><li>对于中小电商，仅对老用户重定向营销远远不够</li><li>对于某些类型的广告商，大多数用户无法通过重定向渠道捕捉，例如银行</li></ul><p>新客推荐：</p><ul><li>由广告商提供一部分种子用户，DSP通过网络行为的相似性为其找到潜在用户</li><li>是一种广告商自定义标签，可视为拓展重定向</li><li>在同样reach水平下，效果应好与通用标签</li></ul><h3 id="dsp产品策略"><a class="markdownIt-Anchor" href="#dsp产品策略"></a> DSP产品策略</h3><p>DSP展示决策过程：</p><p>关键产品策略：</p><ul><li>点击价值预估、出价策略</li></ul><h3 id="invitemedia"><a class="markdownIt-Anchor" href="#invitemedia"></a> invitemedia</h3><p>核心业务：</p><ul><li>传统业务是提供比较透明的Adx采买功能，并收取固定比例的佣金。</li><li>正在提供越来越深入的采买ROI优化服务</li></ul><p>其他点评：</p><ul><li>与DFA，Adx已整合，客减少ck mappiing带来的损失</li><li>改称doubleclick bid manager，并提供更多的优化功能</li></ul><h3 id="dsp产品特点"><a class="markdownIt-Anchor" href="#dsp产品特点"></a> DSP产品特点</h3><p>优化目标</p><p>关键特点：</p><ul><li>需要支持定制化的用户划分能力</li><li>由于DSP是完全面向广告主的产品，需要在量的约束下投放，着产生了对于出价策略的需求。</li><li>在按CPS等效果结算的DSP中，需要同时估计点击率点击价值。并且由于出价的要求，估计要尽可能准确。</li></ul><h3 id="dsp系统架构"><a class="markdownIt-Anchor" href="#dsp系统架构"></a> DSP系统架构</h3><h3 id="look-alike问题建模"><a class="markdownIt-Anchor" href="#look-alike问题建模"></a> Look-alike问题建模</h3><p>问题：p(y=1|x(a,u))</p><ul><li>y不再是点击行为，而是表示用户能否成为广告主用户的二元变量</li><li>模型评估的是用户属性，因此与上下文c无关</li></ul><p>训练集构建：</p><ul><li>方法一：根据广告主提供的种子用户集，凡是出现在该种子用户集中的u，其对应的y标为1，否则标为0.</li><li>方法二：根据广告投放的记录，将惦记过该广告主广告一定次数（一般设为1）以上的用户，其对应的y标为1，否则标为0.</li></ul><h3 id="点击价值估计"><a class="markdownIt-Anchor" href="#点击价值估计"></a> 点击价值估计</h3><p>点击价值分解：</p><p>到达率：</p><ul><li>主要与媒体匹配程度、广告主页面加载速度相关</li></ul><p>转化率：</p><ul><li>行为稀疏、定义与广告主类型密切相关</li></ul><h3 id="从电商角度看推荐"><a class="markdownIt-Anchor" href="#从电商角度看推荐"></a> 从电商角度看推荐</h3><ul><li>站内推荐、站外推荐、新客推荐</li></ul><h3 id="dsp出价策略"><a class="markdownIt-Anchor" href="#dsp出价策略"></a> DSP出价策略</h3><ul><li>估计没有预算的限制：只要按照eCPM水平出价，就可以保证在第二高价的情况下每次展示都有利润。</li><li>在有预算约束的情况下，我们需要估计eCPM以及当前展示的市场价格，并在尽可能将出价集中在那些利润率较高的展示上。</li></ul><h3 id="criteo"><a class="markdownIt-Anchor" href="#criteo"></a> Criteo</h3><p>核心功能：</p><ul><li>基于站外推荐的个性化重定向系统</li><li>动态创意技术</li><li>与广告主商品库的准实时Feed接口</li></ul><p>其他点评：</p><ul><li>兼容RTB和优选方式购买流量</li><li>在广告主端完全采用CPC结算方式</li><li>不会将cross-site数据用于推荐</li></ul><h2 id="多渠道库存管理供给方平台"><a class="markdownIt-Anchor" href="#多渠道库存管理供给方平台"></a> 多渠道库存管理：供给方平台</h2><p>###网络优化（Network Optimization）与SSP<br />网络优化问题</p><ul><li>接入多个AdNetWork，动态决定某次展示分配给谁</li><li>相当于DSP不主动出击的交易平台</li></ul><p>供给方平台（Supply Side Platform，SSP）</p><ul><li>综合利用各种需求方预算，在不伤害媒体品牌属性的前台下优化收入</li><li>也会提供通过RTB对接DSP的接口</li><li>与Ad Exchange的边界越来越模糊</li></ul><h3 id="移动广告mediation"><a class="markdownIt-Anchor" href="#移动广告mediation"></a> 移动广告Mediation</h3><p>网络优化问题</p><ul><li>接入多个Ad Network，动态决定某次展示分配给谁</li><li>相当于DSP不主动出价的交易平台</li></ul><p>供给方平台（Supply Side Platform，SSP）</p><ul><li>综合利用各种需求方预算，在不伤害媒体品牌属性的前提下优化收入</li><li>也会提供功过RTB对接DSP的接口</li><li>与Ad Exchange的边界越来越模糊</li></ul><h3 id="ssp产品策略"><a class="markdownIt-Anchor" href="#ssp产品策略"></a> SSP产品策略</h3><ul><li>SSP展示决策过程–动态分配（Dynamic Allocation）</li></ul><h3 id="p5header-bidding"><a class="markdownIt-Anchor" href="#p5header-bidding"></a> P5.Header Bidding</h3><p>什么是Header Bidding</p><ul><li>媒体绕开Google、Mopub等ADX，通过客户端聚合JS代码或SDK的方式，直接向其他ADN或者ADX发起询价。</li></ul><p>商业本质</p><ul><li>打破Google、Mopub对于市场的垄断</li><li>媒体欢迎的原因主要是更低的费率、更公平的竞价</li></ul><p>产品问题</p><ul><li>聚合多家JS或者SDK带来巨大的延时</li><li>不如Server端RTB方式灵活、但避免了cookie mapping的损失。</li></ul><h3 id="p5header-bidding决策过程"><a class="markdownIt-Anchor" href="#p5header-bidding决策过程"></a> P5.Header Bidding决策过程</h3><h3 id="admeld"><a class="markdownIt-Anchor" href="#admeld"></a> Admeld</h3><p>核心功能：</p><ul><li>Yield Optimizer，统一优化Premium sales，netwrok和RTB流量</li><li>以优化媒体利益为目标</li></ul><p>其他点评</p><ul><li>起重要做的部分除RTB，还有多network接入时eCPM的估计和选择。</li><li>会从DMP购买标签数据用于优化广告效果</li><li>主要进行广告位和时间维度上eCPM估计和流量切分</li></ul><h3 id="mopub"><a class="markdownIt-Anchor" href="#mopub"></a> mopub</h3><p>核心功能</p><ul><li>领先的移动Mediation平台，通过SDK对接媒体，需求方聚合FAN，Admob等多家的SDK</li><li>有自己的Marketplace即RTB市场</li><li>提供媒体上传自己签约的广告合同功能</li></ul><p>其他点评：</p><ul><li>收取30%～40%的费用，成为媒体直接对接其他需求方的动力</li><li>Network Optimization功能不太重要</li></ul><h2 id="数据资产金融化数据管理产品"><a class="markdownIt-Anchor" href="#数据资产金融化数据管理产品"></a> 数据资产金融化：数据管理产品</h2><h3 id="三方数据的概念"><a class="markdownIt-Anchor" href="#三方数据的概念"></a> 三方数据的概念</h3><ul><li>第一方数据：广告主的数据</li><li>第二方数据：广告平台数据</li><li>第三方数据：其他来源数据</li></ul><h3 id="第三方dmp"><a class="markdownIt-Anchor" href="#第三方dmp"></a> 第三方DMP</h3><p>目的</p><ul><li>聚合多种原始行为数据，加工成统一标签后，在公开市场上售卖</li><li>聚合多种加工后标签数据，在公开市场上售卖</li></ul><p>主要特征</p><ul><li>主要负责第三方数据的收集、加工和流转，不一定直接从事广告交易</li><li>对于广告交易平台、SSP等合作进行数据变现</li></ul><h3 id="第三方dmp商业模式"><a class="markdownIt-Anchor" href="#第三方dmp商业模式"></a> 第三方DMP商业模式</h3><ul><li>DMP从多个DP那里收集原始数据，按照自己的逻辑加工成用户标签，并向DSP出售标签数据收入。</li><li>DMP获得的收入按照一定的比例分给DP</li></ul><h3 id="第一方dmp"><a class="markdownIt-Anchor" href="#第一方dmp"></a> 第一方DMP</h3><p>目的：</p><ul><li>为网站提供第一方数据加工和应用能力</li><li>结合公开市场第三方数据，加工跨媒体用户标签，支持网站业务运营和广告投放</li></ul><p>主要特征：</p><ul><li>第一方用户定制化标签</li><li>统一的对外数据接口</li></ul><h3 id="第一方dmp的商业模式"><a class="markdownIt-Anchor" href="#第一方dmp的商业模式"></a> 第一方DMP的商业模式</h3><ul><li>DMP应数据源（Data Provider，DP）的要求，收集第一方数据，并加工成第一方需要的用户标签。</li><li>DP可以根据这些用户标签进行站内的运营，也可以用来指导DSP进行广告投放。</li><li>DMP会向DP收取费用，但是绝对不会把数据二次变现。</li></ul><h3 id="audience-science"><a class="markdownIt-Anchor" href="#audience-science"></a> Audience Science</h3><p>核心业务</p><ul><li>主要提供面向publisher的数据加工服务</li><li>直接运营ad network进行数据变现</li></ul><p>其他点评</p><ul><li>较早提出受众定向（audience targeting）的概念</li><li>数据标签不像bluekai那样在市场上公开出售</li><li>使用标签创造的营收按照一定比例跟publisher分成</li></ul><h3 id="为什么数据不能共享"><a class="markdownIt-Anchor" href="#为什么数据不能共享"></a> 为什么数据不能共享</h3><p>疑问：数据交换似乎在发生啊？</p><ul><li>那往往是因为有更高层次的交换，即投资关系</li></ul><p>为什么大公司不能把数据共享出来</p><ul><li>你见过大公司把钱共享出来么？</li><li>短时的贴补性共享时可行的</li></ul><p>政府数据时可以共享的，这本质上是转移支付</p><h3 id="数据交易该怎么做"><a class="markdownIt-Anchor" href="#数据交易该怎么做"></a> 数据交易该怎么做？</h3><ul><li>数据传输附着在实时竞价过程中，无额外开销</li><li>需求方可以自由的选择需要的部分人群数据，并且按照实际的广告展示付费</li></ul><h3 id="如何给数据定价"><a class="markdownIt-Anchor" href="#如何给数据定价"></a> 如何给数据定价</h3><p>市场化的竞价方式是唯一的选择<br />目前数据的价值是被低估的</p><ul><li>上页的交易方式并未限制数据供给次数</li><li>这间接地抬高了流量价格，而低估了数据价格</li></ul><p>能否采用竞价的交易方式？</p><ul><li>不限量供应的商品，是无法竞价的</li><li>数据的限量供应应该怎么做？</li></ul><h2 id="对抗数据的黑客隐私保护和数据安全"><a class="markdownIt-Anchor" href="#对抗数据的黑客隐私保护和数据安全"></a> 对抗数据的黑客：隐私保护和数据安全</h2><h3 id="数据隐私的初步认识"><a class="markdownIt-Anchor" href="#数据隐私的初步认识"></a> 数据隐私的初步认识</h3><p>隐私安全基本原则</p><ul><li>A29:欧盟负责隐私保护条例制定的委员会</li><li>A29原则：<ul><li>Personal Identifiable Information（PII）不能使用</li><li>用户可以要求系统停止记录和使用自己的行为数据</li><li>不能长期保存和使用用户的行为数据</li></ul></li><li>Quasi-identifier 与K-anonymity<ul><li>Quasi-identifier：朝阳区，35岁，在360上班</li><li>K-anonymity:北京市，30～40岁，互联网行业</li></ul></li></ul><h3 id="互联网行为数据隐私问题"><a class="markdownIt-Anchor" href="#互联网行为数据隐私问题"></a> 互联网行为数据隐私问题</h3><p>细数行为数据的挑战</p><ul><li>从一个人的观影购物记录，能否反推他是谁？</li><li>实际案例：Netflix推荐大赛，有人从数据集里面发现了自己的同事是同性恋</li><li>理论研究：Robust De-anonymization of Large Sparse Datasets</li></ul><p>深度个性化系统也有隐私安全风险</p><ul><li>相关研究课题是差分隐私（Differential Privacy）</li></ul><p>隐私是大数据头上的达摩克利斯之剑</p><h3 id="差分隐私differential-privacy"><a class="markdownIt-Anchor" href="#差分隐私differential-privacy"></a> 差分隐私（Differential Privacy）</h3><p>差分隐私的问题</p><ul><li>最大化个性化系统准确率的同时，最小化隐私泄漏风险</li><li>需要对原始数据做一定的随机化处理</li></ul><p>部分成果已经使用在iOS 10当中</p><h3 id="需求方数据安全问题"><a class="markdownIt-Anchor" href="#需求方数据安全问题"></a> 需求方数据安全问题</h3><p>英孚访客和华尔街访客在广告投放中混用受众</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;多方数据变现-程序化交易&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#多方数据变现-程序化交易&quot;&gt;&lt;/a&gt; 多方数据变现 – 程序化交易&lt;/h1&gt;
&lt;h2 id=&quot;与证券类似的交易程序化交易若干模式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#与证券类似的交易程序化交易若干模式&quot;&gt;&lt;/a&gt; 与证券类似的交易：程序化交易若干模式&lt;/h2&gt;
&lt;h3 id=&quot;p5iab总结的程序化相关交易方式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p5iab总结的程序化相关交易方式&quot;&gt;&lt;/a&gt; P5.IAB总结的程序化相关交易方式&lt;/h3&gt;
&lt;h3 id=&quot;p5实时竞价过程示意&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p5实时竞价过程示意&quot;&gt;&lt;/a&gt; P5.实时竞价过程示意&lt;/h3&gt;
&lt;h3 id=&quot;p5实时竞价特点&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p5实时竞价特点&quot;&gt;&lt;/a&gt; P5.实时竞价特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;每次展示都有Ad Exchange服务器与多个DSP服务器的参与，这时的服务器与带宽成本大大增加。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在询价过程中，Ad Exchange要等待一个约定的时间片（一般情况为100ms），这使得用户看到的广告延迟增加，对CTR有负面影响。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原理上DSP可以以极低的出价参与竞价，这样虽不能获得流量，却可以低成本得到在媒体网站上的行为数据，这里存在着潜在的信息泄漏风险。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Programmatic&lt;/li&gt;
&lt;li&gt;RealTime&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;p5优选preferred-deal&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p5优选preferred-deal&quot;&gt;&lt;/a&gt; P5.优选（Preferred Deal）&lt;/h3&gt;
&lt;h3 id=&quot;p5私有市场pmp&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p5私有市场pmp&quot;&gt;&lt;/a&gt; P5.私有市场（PMP）&lt;/h3&gt;
&lt;p&gt;媒体位了保证广告主的质量，希望将竞拍限制在一些被邀请需求方的小范围内。这种程序化交易，叫做私有市场。（Private Marketplace，PMP）&lt;/p&gt;
&lt;p&gt;坚固了优选和实时竞价的好处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;广告主的质量可以由少量被邀请需求方很好地控制，这有利于确保媒体的价值不受伤害。&lt;/li&gt;
&lt;li&gt;在需求方之间保留了竞价关系，有利于提高媒体的变现能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交易接口的形式与一般RTB一致&lt;/p&gt;
&lt;h3 id=&quot;p5程序化直投pdb&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p5程序化直投pdb&quot;&gt;&lt;/a&gt; P5.程序化直投（PDB）&lt;/h3&gt;
&lt;p&gt;DSP可根据广告主需求，进行媒介采买，并且将采买的广告资源二次分配给广告主的不同子品牌或产品，这叫程序化直投（Programmatic Direct Buy，PDB）&lt;/p&gt;
&lt;p&gt;本质上是一种GD或Network的投放方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果子品牌有保量需求，是GD市场&lt;/li&gt;
&lt;li&gt;如果子品牌没有保量需求，可以用竞价广告网络的方式运营&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;产品形式和前述的RTB/PMP完全不同，需要独立的广告投放系统，或者是自建一个专门的ADX，用DSP接入。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;思考：对媒体和广告主而言，什么情况下需要程序化交易？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
      <category term="程序化交易" scheme="https://imzhanghao.com/tags/%E7%A8%8B%E5%BA%8F%E5%8C%96%E4%BA%A4%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|5.竞价广告-精细数据变现</title>
    <link href="https://imzhanghao.com/2020/06/18/computing-advertising-5-lean-data-monetization/"/>
    <id>https://imzhanghao.com/2020/06/18/computing-advertising-5-lean-data-monetization/</id>
    <published>2020-06-17T16:00:00.000Z</published>
    <updated>2020-06-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="竞价广告-精细数据变现"><a class="markdownIt-Anchor" href="#竞价广告-精细数据变现"></a> 竞价广告 - 精细数据变现</h1><h2 id="市场经济的规则机制设计问题"><a class="markdownIt-Anchor" href="#市场经济的规则机制设计问题"></a> 市场经济的规则：机制设计问题</h2><h3 id="竞价交易问题"><a class="markdownIt-Anchor" href="#竞价交易问题"></a> 竞价交易问题</h3><ul><li>将对象a={1,2,…,A}排放到位置s={1,2,…,S}</li><li>对象a的出价（bid）为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">b_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,而其对位置s的计价为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mrow><mi>a</mi><mi>s</mi></mrow></msub><mo>=</mo><msub><mi>u</mi><mi>s</mi></msub><msub><mi>v</mi><mi>a</mi></msub><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo>&gt;</mo><msub><mi>u</mi><mn>2</mn></msub><mo>&gt;</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>&gt;</mo><msub><mi>u</mi><mi>S</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_{as}=u_{s}v_{a}(u_1&gt;u_2&gt;...&gt;u_S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">v_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为点击价值,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">u_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>视为点击率</li><li>对称纳什均衡（Symmetric Nash equilibrium）<ul><li>(vs-ps)xt &gt;= (vs-pt)xt,其中pt=bs+1</li><li>寻找收入最大化且稳定的纳什均衡状态是竞价系统设计的关键</li></ul></li></ul><h3 id="p2广义第二高价和vcg"><a class="markdownIt-Anchor" href="#p2广义第二高价和vcg"></a> P2.广义第二高价和VCG</h3><p>广义第二高价（Generalized Second Pricing）</p><ul><li>与VCG机制相比，会收取广告主更多的费用</li><li>整体市场不是truth-telling的</li><li>简单易行，为在线广告系统广泛采用</li><li>CPM情形下：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>s</mi></msub><mo>=</mo><msub><mi>b</mi><mrow><mi>s</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">q_s = b_{s+1}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>CPC情形下：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>s</mi></msub><mo>=</mo><msub><mi>r</mi><mrow><mi>s</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">/</mi><msub><mi>u</mi><mo>+</mo></msub><mn>1</mn><mo>=</mo><msub><mi>u</mi><mrow><mi>s</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>b</mi><mrow><mi>s</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>s</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">q_s = r_{s+1}/u_+1=u_{s+1}b_{s+1}/u_s+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li></ul><p>VCG(Vickrey-Clarke-Groves)机制</p><ul><li>某对象的收费等于给他人带来的价值损害</li><li>整体市场是truth-telling的</li></ul><a id="more"></a><h3 id="p2市场保留价和价格挤压"><a class="markdownIt-Anchor" href="#p2市场保留价和价格挤压"></a> P2.市场保留价和价格挤压</h3><p>市场保留价（Market Reserve Price，MRP）</p><ul><li>即“底价”，出价高于MRP才能参与竞价</li><li>收费如果小于底价，按底价计费</li><li>可以根据不同的竞价标的设置不同的底价</li></ul><p>价格挤压</p><ul><li>r = u * v -&gt; r =u^k * v [r为eCPM，u为点击率，v为单价]</li><li>k为正数：当其充分大时，指根据点击率排序；当其接近0时，指根据点击单价排序</li></ul><h3 id="p2整体计价过程"><a class="markdownIt-Anchor" href="#p2整体计价过程"></a> P2.整体计价过程</h3><ul><li>见《计算广告》书中代码</li></ul><h3 id="p2gsp广告竞价示例货币单位元mrp025"><a class="markdownIt-Anchor" href="#p2gsp广告竞价示例货币单位元mrp025"></a> P2.GSP广告竞价示例（货币单位：元，MRP=0.25）</h3><blockquote><p>思考：如果竞价广告采用明拍，有什么优势。</p></blockquote><h2 id="最赚钱的广告产品搜索广告"><a class="markdownIt-Anchor" href="#最赚钱的广告产品搜索广告"></a> 最赚钱的广告产品：搜索广告</h2><h3 id="搜索广告基本产品形式"><a class="markdownIt-Anchor" href="#搜索广告基本产品形式"></a> 搜索广告基本产品形式</h3><ul><li>分为北（North）、东（East）、南（South）三个区域</li><li>广告一般带有底色</li><li>位置次序：North1，North2，…，East1，East2，East3…</li><li>南区或重复北区、或重复东区</li></ul><h3 id="搜索广告产品新形式"><a class="markdownIt-Anchor" href="#搜索广告产品新形式"></a> 搜索广告产品新形式</h3><ul><li>原生广告探索：1.结构化的搜索结果，搜索结果页直接可以操作。2.将网站频道直接显示</li><li>弱相关广告形式：东区，1.放弱相关的广告。2.相关推荐词</li></ul><h3 id="移动搜索广告"><a class="markdownIt-Anchor" href="#移动搜索广告"></a> 移动搜索广告</h3><ul><li>wap网页，没有东区</li><li>淘宝：搜索结果页直接插入广告</li><li>大众点评：搜索结果中间插入广告</li></ul><h3 id="搜索广告产品策略"><a class="markdownIt-Anchor" href="#搜索广告产品策略"></a> 搜索广告产品策略</h3><p>搜索广告产品策略</p><ul><li>1.查询扩展-&gt;检索-&gt;排序-&gt;放置-&gt;定价</li></ul><p>关键产品策略：</p><ul><li>查询扩展、广告排序、广告放置</li></ul><h3 id="搜索广告计算概貌"><a class="markdownIt-Anchor" href="#搜索广告计算概貌"></a> 搜索广告计算概貌</h3><p>优化目标：max u(a,c)*bid_cpc(a)</p><p>关键特点：</p><ul><li>搜索广告的变现能力，即eCPM高于一般现实广告</li><li>搜索广告的手中定向标签，即是上下文的搜索查询</li><li>搜索广告样式与自然结果的展示形式非常接近，有原生广告的意味。</li><li>从搜索广告展现起来的竞价交易模式，已经逐渐发展成互联网广告最主流的交易模式。</li></ul><h3 id="搜索广告系统架构"><a class="markdownIt-Anchor" href="#搜索广告系统架构"></a> 搜索广告系统架构</h3><h3 id="查询扩展主要模式"><a class="markdownIt-Anchor" href="#查询扩展主要模式"></a> 查询扩展主要模式</h3><p>精确匹配</p><ul><li>英语培训 -&gt; {英语培训，培训英语}</li></ul><p>短语匹配</p><ul><li>英语培训 -&gt; {英语培训暑假班，哪个英语培训机构好，英语的培训，英语相关培训，培训英语，英文培训，…}等</li></ul><p>广泛匹配</p><ul><li>英语培训 -&gt; {外语培训班，四级证书，…}</li></ul><p>否定匹配</p><h3 id="查询扩展主要方法"><a class="markdownIt-Anchor" href="#查询扩展主要方法"></a> 查询扩展主要方法</h3><p>基于推荐的方法</p><ul><li>在{Session,query}矩阵上通过推荐技术来产生相关的关键词</li><li>利用的是搜索的日志数据</li></ul><p>基于主题模型的方法</p><ul><li>根据文档主题模型，对某个查询扩展出主题相似的其他查询</li><li>利用的是一般的文档数据</li></ul><p>基于历史效果的方法</p><ul><li>记录某些对特定广告主eCPM较高的关键词</li><li>利用广告本身的历史eCPM数据。</li></ul><h3 id="广告位智能放置"><a class="markdownIt-Anchor" href="#广告位智能放置"></a> 广告位智能放置</h3><p>广告放置（Ad Placement）问题</p><ul><li>广告候选完成排序以后，需要分别确定北区和东区广告条数</li></ul><p>用户体验指标</p><ul><li>北区广告的平均条数，即North Foot Print（NFP）或Average Serving Number（ASN）</li></ul><p>广告放置策略优化</p><blockquote><p>思考<br />1.搜索广告与展示广告最根本的技术区别是什么？<br />2.社交信息流的广告放置问题应该如何建模？</p></blockquote><h3 id="google-adwords"><a class="markdownIt-Anchor" href="#google-adwords"></a> Google AdWords</h3><p>产品概况</p><ul><li>Google推出的关键词竞价广告产品</li></ul><p>其他点评：</p><ul><li>最早按CPM售卖，销售不理想</li><li>后来采用Overture的CPC售卖，并创造性的引入点击率概念表达广告相关性，取得了非常高的营收</li><li>2013年营收374亿美元。</li></ul><h3 id="淘宝直通车"><a class="markdownIt-Anchor" href="#淘宝直通车"></a> 淘宝直通车</h3><p>产品概况：</p><ul><li>淘宝专门服务于卖家的广告产品，在搜索结果等页面展示竞价广告</li></ul><p>其他点评：</p><ul><li>按CPC售卖，同样是按照eCPM排名</li><li>广告主集中在电商行业，同时用户意图比通用搜索引擎更强烈</li><li>与广告主是共生关系</li></ul><h2 id="剩余流量变现产品竞价广告网络"><a class="markdownIt-Anchor" href="#剩余流量变现产品竞价广告网络"></a> 剩余流量变现产品：竞价广告网络</h2><h3 id="竞价广告网络产品原理"><a class="markdownIt-Anchor" href="#竞价广告网络产品原理"></a> 竞价广告网络产品原理</h3><h3 id="广告网络产品示例"><a class="markdownIt-Anchor" href="#广告网络产品示例"></a> 广告网络产品示例</h3><p>体验差/跟内容不相关</p><h3 id="广告网络产品策略"><a class="markdownIt-Anchor" href="#广告网络产品策略"></a> 广告网络产品策略</h3><p>广告网络展示决策过程</p><ul><li>检索(根据受众标签)-&gt;排序-&gt;定价</li></ul><p>关键策略：</p><ul><li>广告检索、排序</li></ul><h3 id="广告网络计算概貌"><a class="markdownIt-Anchor" href="#广告网络计算概貌"></a> 广告网络计算概貌</h3><p>优化目标： max u(a,u,c)*bid_cpc(a)</p><p>关键特点：</p><ul><li>竞价方式不向广告主做量的约定，而是根据变现能力，即eCPM，来决定每次展示分配给那个广告主。</li><li>按人群售卖，淡化媒体和广告位的概念</li><li>无需再满足广告主品牌独占的要求</li><li>采用分成结算，运营方和现金流状况大为改善。【预充值】</li></ul><h3 id="广告网络系统架构"><a class="markdownIt-Anchor" href="#广告网络系统架构"></a> 广告网络系统架构</h3><blockquote><p>思考<br />1.广告网络适合品牌广告主么？为什么？<br />2.广告网络和网盟有什么区别？</p></blockquote><h3 id="facebook-audience-networdk"><a class="markdownIt-Anchor" href="#facebook-audience-networdk"></a> facebook audience networdk</h3><ul><li>移动应用首选的变现方式</li><li>对无FB张浩的用户不出广告oCPM/CPA的售卖方式</li><li>目前供给和需求端都没有程序化接口</li></ul><h2 id="与搜索技术不同广告检索技术"><a class="markdownIt-Anchor" href="#与搜索技术不同广告检索技术"></a> 与搜索技术不同：广告检索技术</h2><h3 id="lucene"><a class="markdownIt-Anchor" href="#lucene"></a> Lucene</h3><p>开源的全文检索引擎</p><ul><li>包括Index和Retrieval模块</li><li>提供了简单易用的API，可以快速实现大量文档的检索</li><li>采用分块索引提升Index响应速度</li><li>实现了布尔查询、模糊查询等</li><li>不支持相关性检索</li></ul><p>其他产品选择：Elastic Search</p><h3 id="s3布尔表达式检索"><a class="markdownIt-Anchor" href="#s3布尔表达式检索"></a> S3.布尔表达式检索</h3><p>广告投放条件的过滤可以视为布尔表达式检索问题</p><p>布尔表达式检索的一些概念</p><ul><li>Doc DNF：{age IN {3} ^ state IN {NY}) V ({state IN {CA} ^ gender NOT_IN {M})</li><li>Conjunction: age IN {3} &amp; state IN {NY}, state IN {CA} ^ gender NOT_IN {M}。同一属性在某Conjunction里只出现一次</li><li>Assignment：age IN {3}, state IN {NY}, state IN {CA}…</li><li>sizeof[Conjuncion]: conjunction包含非的Assignment的个数</li></ul><p>基本思想</p><ul><li>某查询满足conjunction，也就满足包括此conjunction的doc</li><li>维护两层倒排关系：Conjunction-&gt;DocID,Assignment-&gt;ConjuncionID</li><li>如果sizeof（Conjunction）大于sizeof（query），则无需考虑</li></ul><h3 id="s3布尔表达式检索-index示例"><a class="markdownIt-Anchor" href="#s3布尔表达式检索-index示例"></a> S3.布尔表达式检索 - index示例</h3><h3 id="s3相关性检索"><a class="markdownIt-Anchor" href="#s3相关性检索"></a> S3.相关性检索</h3><p>根据（u，c）检索广告时</p><ul><li>query有可能比较长，且子term都是should</li><li>搜索引擎方案：Term之间取或关系，然后计算相关性并找到Top-N，在长Query和大文档集时查询速度被巨大的计算量缩限制。</li></ul><p>相关性检索</p><ul><li>在查找候选过程中做近似的评估，切掉那些理论上不需要再考虑的文档，只对进候选的文档进行相关性计算，比Top-N最小堆最小值大的插入</li><li>当相关性函数为线性时，存在有效的剪枝算法。</li></ul><h3 id="s3weight-andwand检索算法"><a class="markdownIt-Anchor" href="#s3weight-andwand检索算法"></a> S3.Weight-And(WAND)检索算法</h3><p>关键点</p><ul><li>根据term贡献上界u_t，文档相关性上界U_a去掉无法胜出的候选</li></ul><p>算法概要</p><ul><li>step-1：按doclist最前面的DocID对terms排序</li><li>step-2:迭代terms，并累加UB知道大于堆顶，设此时到达第n-1个term，如果terms[0].doc和terms[n-1].doc一样，逼出一个doc至最小堆；如果不一样，再前n个term挑选一个skip到terms[n-1].doc,跳转至step-1.</li></ul><h3 id="s3最近邻检索"><a class="markdownIt-Anchor" href="#s3最近邻检索"></a> S3.最近邻检索</h3><ul><li>当把广告与用户向量化后，检索这个向量空间里最相关的K篇文档等价于计算向量距离并取K近邻的问题</li><li>局部敏感哈希（LSH）</li><li>层次K均值数（HKM）</li></ul><ul><li>数据相关的局部敏感哈希</li></ul><h3 id="s3语义检索-word2vec"><a class="markdownIt-Anchor" href="#s3语义检索-word2vec"></a> S3.语义检索 - word2vec</h3><blockquote><p>思考: 倒排索引再广告系统中是必须的么？</p></blockquote><h2 id="让系统更快的学习短时数据统计与反馈"><a class="markdownIt-Anchor" href="#让系统更快的学习短时数据统计与反馈"></a> 让系统更快的学习：短时数据统计与反馈</h2><h3 id="短时用户行为反馈"><a class="markdownIt-Anchor" href="#短时用户行为反馈"></a> 短时用户行为反馈</h3><p>短时用户行为</p><ul><li>狭义：用户在一个session内的行为</li><li>广义：用户在短时间（一般为一两天）内的行为</li></ul><p>短时用户行为的反馈</p><ul><li>短时受众定向：根据短时用户行为为用户打上标签</li><li>短时点击反馈：根据短时广告交互计算的动态特征</li></ul><p>短时用户行为计算</p><ul><li>需要准实时（分钟级）对用户行为进行加工，不适合在Hadoop上进行</li><li>可以利用流式计算（stream computing）平台，如S4，Storm，Spark Streaming等。</li></ul><h3 id="流式计算平台-storm"><a class="markdownIt-Anchor" href="#流式计算平台-storm"></a> 流式计算平台 - Storm</h3><ul><li>大规模实时数据处理框架，自动完成数据分发和可靠性管理，开发者只需要关注处理逻辑。数据流基本在网络和内存进行。</li><li>计算逻辑类似Map/Reduce，区别在调度数据而非调度计算。</li></ul><h3 id="s6-kafka-by-linkedin"><a class="markdownIt-Anchor" href="#s6-kafka-by-linkedin"></a> S6. kafka by Linkedin</h3><ul><li>分布式消息系统，数据消费方式支持pull模式</li><li>O（1）复杂度的吃酒化和很高的吞吐率</li><li>用Zookeeper来管理brokers</li></ul><h3 id="s6apache-storm-by-twitter"><a class="markdownIt-Anchor" href="#s6apache-storm-by-twitter"></a> S6.Apache Storm By twitter</h3><ul><li>大规模实时处理框架，自动完成数据分发和可靠性管理，开发者只需要关注处理逻辑</li><li>Storm on YARN 可以与Hadoop共享计算资源</li></ul><h2 id="用算法优化收入点击率预测"><a class="markdownIt-Anchor" href="#用算法优化收入点击率预测"></a> 用算法优化收入：点击率预测</h2><h3 id="a2点击率预测问题"><a class="markdownIt-Anchor" href="#a2点击率预测问题"></a> A2.点击率预测问题</h3><p>点击率预测，在（a，u，c）组合与点击间建立关系： u(a,u,c) = p(h=1|a,u,c)</p><p>Regression 比 Ranking合适一些</p><ul><li>广告的实际排序是根据eCPM，因此需要尽可能准确的估计CTR，而不仅仅是各候选的CTR排序正确。</li></ul><p>问题关键</p><ul><li>新广告的cold-start</li><li>捕获点击率的动态特性</li></ul><h3 id="a2逻辑回归logistic-regression"><a class="markdownIt-Anchor" href="#a2逻辑回归logistic-regression"></a> A2.逻辑回归（Logistic Regression）</h3><p>逻辑回归问题</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>h</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mo separator="true">,</mo><mi>u</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>2</mn><mi>h</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>u</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(h|a, u, c) = sigmod((2h-1)w^Tx(a,u,c)) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>实际带有正则化的优化问题</p><p>可视为最大熵模型的特例，因此IIS方法适用</p><h3 id="a2动态特征-多层次点击反馈"><a class="markdownIt-Anchor" href="#a2动态特征-多层次点击反馈"></a> A2.动态特征 - 多层次点击反馈</h3><p>在标签组合维度上聚合点击反馈统计作为CTR预测的特征</p><p>优势</p><ul><li>工程架构扩展性强（与在线学习相比）</li><li>对新（a,u,c）组合有将强的back-off能力</li></ul><p>缺点</p><ul><li>在线特征存储量大，更新要求高</li></ul><p>组合维度举例</p><ul><li>cookie（u）and creative（a）</li><li>gender（u）and topic（c）</li><li>category（a）and category（u）</li><li>creative（a）and gender（u）</li></ul><h3 id="a2归一化点击率-coec"><a class="markdownIt-Anchor" href="#a2归一化点击率-coec"></a> A2.归一化点击率 - COEC</h3><p>有效展示</p><ul><li>可以通过Eye tracking测算</li><li>工程上可以使用Expected Click（EC）来近似有效展示</li></ul><p>EC的计算</p><ul><li>实测法：实际随机流量测算</li><li>Bias模型法：只使用与广告决策无关的bias特征训练模型的CTR模型：EC=P_{bias}(a,u,c)</li></ul><p>归一化点击率：COEC = sum click / sum EC</p><h3 id="a2在线广告常见bias特征"><a class="markdownIt-Anchor" href="#a2在线广告常见bias特征"></a> A2.在线广告常见bias特征</h3><ul><li>广告位位置<ul><li>搜索广告：North1，North2，…，East1,East2,…</li><li>显示广告：相对页面的(x,y)</li></ul></li><li>广告位尺寸</li><li>广告位类型<ul><li>门户首页，频道首页，内容页，客户端…</li></ul></li><li>操作系统和浏览器</li><li>广告投放延迟</li><li>日期和时间</li></ul><h3 id="a2消除偏差的点击率模型训练过程"><a class="markdownIt-Anchor" href="#a2消除偏差的点击率模型训练过程"></a> A2.消除偏差的点击率模型训练过程</h3><h3 id="a2点击反馈的平滑"><a class="markdownIt-Anchor" href="#a2点击反馈的平滑"></a> A2.点击反馈的平滑</h3><p>问题： 在数据稀疏的情况下较稳健的估计CTR或者COEC</p><p>经验贝叶斯方案</p><ul><li>点击产生概率模型：p(x|u)=U<sup>{x}(1-u)</sup>{1-x}</li><li>视u为随机变量，采用Beta分布共轭先验进行正则化</li></ul><h3 id="a2点击率模型的校准"><a class="markdownIt-Anchor" href="#a2点击率模型的校准"></a> A2.点击率模型的校准</h3><ul><li>正负样本不均衡带来的估计误差</li><li>误差对一些广义线性模型都存在，包括LR</li><li>可以通过数据计算并校准</li></ul><h3 id="a2fm点击率模型"><a class="markdownIt-Anchor" href="#a2fm点击率模型"></a> A2.FM点击率模型</h3><p>LR:所有组合特征需要用特征工程解决</p><p>因子分解剂（Factorization Machines，FM）</p><ul><li>计算复杂度与LR相同</li><li>优化方法：随级梯度下降、交替最小二乘</li></ul><h3 id="a2深度学习点击模型"><a class="markdownIt-Anchor" href="#a2深度学习点击模型"></a> A2.深度学习点击模型</h3><h3 id="a2评测指标-pr曲线和roc曲线"><a class="markdownIt-Anchor" href="#a2评测指标-pr曲线和roc曲线"></a> A2.评测指标- PR曲线和ROC曲线</h3><blockquote><p>思考：事件中点击率预估最有用的是哪类特征？</p></blockquote><h2 id="未知领域的冷启动探索与利用"><a class="markdownIt-Anchor" href="#未知领域的冷启动探索与利用"></a> 未知领域的冷启动：探索与利用</h2><h3 id="a5-探索与利用ee问题与思路"><a class="markdownIt-Anchor" href="#a5-探索与利用ee问题与思路"></a> A5. 探索与利用（E&amp;E）问题与思路</h3><p>问题</p><ul><li>为长尾的（a，u，c）创造展示机会以积累统计量，从而更准确预估CTR</li><li>提升整体的广告收入，即需要严格控制探索的量和有效性</li></ul><p>方法思路</p><ul><li>通常描述为Multi-arm Bandit（MAB）问题</li><li>有限个arms（或者收益提供者）a，每个有确定有限的期望收益E（r_{i,a}）</li><li>在每个时刻t，我们必须从arms中选择一个，最终目标是优化整体收益</li><li>基本方法为e-greedy；将e比例的小部分流量用于随机探索</li></ul><p>广告问题的主要挑战</p><ul><li>海量的组合空间需要被探索</li><li>各个arm的期望收益是被动变化的</li></ul><h2 id="如何利用竞价市场竞价广告需求方产品"><a class="markdownIt-Anchor" href="#如何利用竞价市场竞价广告需求方产品"></a> 如何利用竞价市场：竞价广告需求方产品</h2><h3 id="搜索引擎营销sem"><a class="markdownIt-Anchor" href="#搜索引擎营销sem"></a> 搜索引擎营销（SEM）</h3><p>产品目标</p><ul><li>帮助搜索广告主管理预算，优化商业目标</li><li>主要商业目标：花费、ROI</li></ul><p>主要功能</p><ul><li>基础功能：管理campaign和关键词，实现便捷操作</li><li>高级功能：拓词、自动价格优化</li></ul><h3 id="广告购买平台trading-desk"><a class="markdownIt-Anchor" href="#广告购买平台trading-desk"></a> 广告购买平台（Trading Desk）</h3><p>产品目标：</p><ul><li>帮助广告主按人群进行跨媒体和广告网络采买</li></ul><p>关键特征：</p><ul><li>连接到不同广告网络和DSP，提供统一市场</li><li>非实时竞价投放的ROI优化能力</li><li>广告代理功能大多有此概念型产品</li></ul><h3 id="非rtb流量的roi优化"><a class="markdownIt-Anchor" href="#非rtb流量的roi优化"></a> 非RTB流量的ROI优化</h3><p>目标</p><ul><li>给定总预算，在多广告网络中采买并优化ROI</li></ul><p>关键问题</p><ul><li>在合适的流量segment上投放广告</li><li>SEM中选词，显示广告网络中的标签组合选择</li><li>在每个投放上合理的出价以优化ROI</li><li>与RTB不同，采买方无法控制每次展示的出价</li><li>u,c的取值未知，需要在流量分割上估计其分布并合理出价</li></ul><blockquote><p>思考：在非RTB流量的ROI优化过程中，最重要的操作原则是什么？</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;竞价广告-精细数据变现&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#竞价广告-精细数据变现&quot;&gt;&lt;/a&gt; 竞价广告 - 精细数据变现&lt;/h1&gt;
&lt;h2 id=&quot;市场经济的规则机制设计问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#市场经济的规则机制设计问题&quot;&gt;&lt;/a&gt; 市场经济的规则：机制设计问题&lt;/h2&gt;
&lt;h3 id=&quot;竞价交易问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#竞价交易问题&quot;&gt;&lt;/a&gt; 竞价交易问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;将对象a={1,2,…,A}排放到位置s={1,2,…,S}&lt;/li&gt;
&lt;li&gt;对象a的出价（bid）为&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;b_a&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,而其对位置s的计价为&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r_{as}=u_{s}v_{a}(u_1&amp;gt;u_2&amp;gt;...&amp;gt;u_S)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6891em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.5782em;vertical-align:-0.0391em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;v_a&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;为点击价值,&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;u_s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;视为点击率&lt;/li&gt;
&lt;li&gt;对称纳什均衡（Symmetric Nash equilibrium）
&lt;ul&gt;
&lt;li&gt;(vs-ps)xt &amp;gt;= (vs-pt)xt,其中pt=bs+1&lt;/li&gt;
&lt;li&gt;寻找收入最大化且稳定的纳什均衡状态是竞价系统设计的关键&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;p2广义第二高价和vcg&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#p2广义第二高价和vcg&quot;&gt;&lt;/a&gt; P2.广义第二高价和VCG&lt;/h3&gt;
&lt;p&gt;广义第二高价（Generalized Second Pricing）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与VCG机制相比，会收取广告主更多的费用&lt;/li&gt;
&lt;li&gt;整体市场不是truth-telling的&lt;/li&gt;
&lt;li&gt;简单易行，为在线广告系统广泛采用&lt;/li&gt;
&lt;li&gt;CPM情形下：&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;q&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;q_s = b_{s+1}+1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.625em;vertical-align:-0.19444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.902771em;vertical-align:-0.208331em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.301108em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.208331em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;CPC情形下：&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;q&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msub&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;q_s = r_{s+1}/u_+1=u_{s+1}b_{s+1}/u_s+1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.625em;vertical-align:-0.19444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.301108em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.208331em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.25833100000000003em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.208331em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.301108em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.208331em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.301108em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.208331em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VCG(Vickrey-Clarke-Groves)机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;某对象的收费等于给他人带来的价值损害&lt;/li&gt;
&lt;li&gt;整体市场是truth-telling的&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
      <category term="竞价广告" scheme="https://imzhanghao.com/tags/%E7%AB%9E%E4%BB%B7%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|4.合约广告</title>
    <link href="https://imzhanghao.com/2020/06/15/computing-advertising-4-agreement-based-advertising/"/>
    <id>https://imzhanghao.com/2020/06/15/computing-advertising-4-agreement-based-advertising/</id>
    <published>2020-06-14T16:00:00.000Z</published>
    <updated>2020-06-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="合约广告"><a class="markdownIt-Anchor" href="#合约广告"></a> 合约广告</h1><h2 id="广告位和展示量合约"><a class="markdownIt-Anchor" href="#广告位和展示量合约"></a> 广告位和展示量合约</h2><h3 id="广告位cpt合约"><a class="markdownIt-Anchor" href="#广告位cpt合约"></a> 广告位（CPT）合约</h3><p>与线下广告交易类似的传统模式</p><p>供给方产品：产品排期系统</p><ul><li>帮助媒体自动执行多个合同的排期</li><li>广告没有复杂的动态决策，因此可以将素材直接插入页面</li></ul><p>流量选择的维度</p><ul><li>时间段、地域、轮播</li></ul><p>典型场景</p><ul><li>高曝光广告位，开屏广告，应用市场头部位置，导航网址</li></ul><h3 id="展示量合约与担保式投送"><a class="markdownIt-Anchor" href="#展示量合约与担保式投送"></a> 展示量合约与担保式投送</h3><p>展示量合约</p><ul><li>基于合约的广告机制，有时未完成约定量要向广告商补偿</li><li>多采用千次展示付费（Cost per Mille，CPM）方式结算</li></ul><p>担保式投送（Guaranteed Delivery，GD）引擎</p><ul><li>CPM方式要求广告投送由服务器端完成决策</li><li>三大技术基础：受众定向、流量预测、在线分配</li></ul><p>典型场景</p><ul><li>视频广告、富媒体广告、品牌横幅广告</li></ul><h3 id="广告位合约-vs-展示量合约"><a class="markdownIt-Anchor" href="#广告位合约-vs-展示量合约"></a> 广告位合约 vs 展示量合约</h3><p>广告位合约</p><ul><li>开辟了多个广告位</li><li>分时段卖给不同的广告主。</li></ul><p>展示量合约</p><ul><li>仅需要开辟较少的广告位</li><li>将用户流量卖给不同的广告主</li></ul><p>展示量合约更先进，前提是需要支持受众定向</p><h3 id="s1如何高效混合静态与动态广告"><a class="markdownIt-Anchor" href="#s1如何高效混合静态与动态广告"></a> S1.如何高效混合静态与动态广告？</h3><p>前端代码先去CDN上取一个默认广告，然后再去请求广告服务器。</p><ul><li>前段代码先去CDN上获取默认广告。</li><li>判断是否CPT广告，如果是，<strong>展示CDN广告</strong>，如果不是，请求广告服务器。</li><li>判断广告服务器是否成功返回，如果是，<strong>展示服务器返回的广告</strong>；如果不是，<strong>展示CDN默认广告</strong>。</li></ul><blockquote><p>思考：什么样的人群适合于在CPM广告中售卖？</p></blockquote><a id="more"></a><h2 id="多个合约如何满足在线分配问题"><a class="markdownIt-Anchor" href="#多个合约如何满足在线分配问题"></a> 多个合约如何满足：在线分配问题</h2><h3 id="a4展示量合约流量分配模型"><a class="markdownIt-Anchor" href="#a4展示量合约流量分配模型"></a> A4.展示量合约流量分配模型</h3><h3 id="流量预测统计"><a class="markdownIt-Anchor" href="#流量预测统计"></a> 流量预测–统计</h3><p>可视为query为a，对流量进行检索的反向查询问题。</p><p>预测过程</p><ul><li>给定a，首先通过u的索引找到所有符合条件的c的集合</li><li>对每个u估计r(a，u)，并根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>u</mi></msub><mo stretchy="false">(</mo><mi>e</mi><mi>C</mi><mi>P</mi><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_u(eCPM)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span>得到a在u上胜出的百分比<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(a,u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mclose">)</span></span></span></span>，并将a的流量累加<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>I</mi><mi>m</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>N</mi><mi>u</mi><msub><mi>m</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">p(a,u)*ImpressionNum_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><h3 id="a4在线分配问题框架"><a class="markdownIt-Anchor" href="#a4在线分配问题框架"></a> A4.在线分配问题框架</h3><ul><li>r是收益，q是惩罚</li><li>惩罚和奖励是一回事</li></ul><h3 id="a4在线分配典型问题"><a class="markdownIt-Anchor" href="#a4在线分配典型问题"></a> A4.在线分配典型问题</h3><p>Adwords～考虑预算，没有提升。</p><p>预算在竞价广告中是一个软约束，投完广告主会继续投。</p><h3 id="a4基于归偶算法的紧凑分配方案"><a class="markdownIt-Anchor" href="#a4基于归偶算法的紧凑分配方案"></a> A4.基于归偶算法的紧凑分配方案</h3><p>紧凑分配方案(Compact Allocation plan)</p><ul><li>变量数正比于|A|，而非|E|或|I|</li><li>分配策略最好的是无状态的，这样可以避免服务器之间的同步</li></ul><p>由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>恢复<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>和分配变量x：公式略</p><p>由历史数据求解上述问题规模太大，需要对数据做一些采样以便更高效地得到分配方案。</p><h3 id="a4启发式的high-water-mark算法"><a class="markdownIt-Anchor" href="#a4启发式的high-water-mark算法"></a> A4.启发式的High Water Mark算法</h3><p>离线规划</p><ul><li>令每个供给节点i的剩余supply等于预留量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>←</mo><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i\leftarrow s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>将每个a按照<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Gamma(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span>中所有供给流量做升序排列，确定分配优先级</li><li>按照分配优先级对每个a解下式的到其投放率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mi>α</mi></msub><mo>:</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></msub><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><msub><mi>r</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>s</mi><mi>i</mi></msub><msub><mi>β</mi><mi>α</mi></msub><mo fence="true">}</mo></mrow><mo>=</mo><msub><mi>d</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">\beta _{\alpha } : \sum_{i\in \Gamma (a)}min  \left \{r_i,s_i\beta _\alpha  \right \}=d_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.22471em;vertical-align:-0.47471em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">∈</span><span class="mord mtight">Γ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Gamma (a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span>中的每个i，令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>←</mo><msub><mi>r</mi><mi>i</mi></msub><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><msub><mi>r</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>s</mi><mi>i</mi></msub><msub><mi>β</mi><mi>α</mi></msub><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">r_i\leftarrow r_i - min \left \{r_i,s_i\beta _\alpha  \right \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span></li></ul><p>在线分配</p><ul><li>对某次展示，{a1,……,aj}为按照分配优先级排序的所有满足要求的广告</li><li>将上面的广告按照投放率随机分配其展示机会</li></ul><h3 id="yahoo展示广告市场"><a class="markdownIt-Anchor" href="#yahoo展示广告市场"></a> yahoo！展示广告市场</h3><p>核心业务</p><ul><li>GD，无法分配的流量转接到NGD（non-guaranteed delivery，即Rightmedia exchange）进行变现</li><li>GD市场广告主数量为几千，年收入为Billion量级。</li></ul><p>其他点评</p><ul><li>采用compact allocation plan 完成线上决策</li><li>提供地域、人口属性、行为定向（常用的仅有几十个标签）</li><li>合约式销售中，品牌广告主对曝光有独占要求</li></ul><h2 id="高并发的广告系统在线投放引擎"><a class="markdownIt-Anchor" href="#高并发的广告系统在线投放引擎"></a> 高并发的广告系统：在线投放引擎</h2><h3 id="s2在线投放引擎"><a class="markdownIt-Anchor" href="#s2在线投放引擎"></a> S2.在线投放引擎</h3><h3 id="s2nginx"><a class="markdownIt-Anchor" href="#s2nginx"></a> S2.Nginx</h3><p>轻量级Web服务器/反向代理服务器</p><ul><li>专为性能优化二开发，可支持数万并发</li><li>内存和CPU占用较少</li></ul><p>Nginx + FastCGI</p><ul><li>将主要业务逻辑在FastCGI中用C语言实现</li></ul><p>其他产品选择:Apache</p><h3 id="s2zookeeper-by-yahoo"><a class="markdownIt-Anchor" href="#s2zookeeper-by-yahoo"></a> S2.Zookeeper by Yahoo!</h3><p>解决分布式应用中的一些数据管理问题</p><ul><li>集群管理、分布式应用配置项的管理等</li><li>理论基础是著名的Paxos算法</li></ul><p>集群管理</p><ul><li>将宕机、网络断链、新机器加入等迅速通知每台Server并重新分配流量</li><li>用Zookeeper的Watch机制很容易实现</li></ul><h3 id="s2频次控制"><a class="markdownIt-Anchor" href="#s2频次控制"></a> S2.频次控制</h3><p>问题定义</p><ul><li>限制各（a,u）组合在一定时间周期内的展示量</li></ul><p>问题特性</p><ul><li>频次存储的规模是有上界的。（a,u）组合总数不会超过时间周期内的展示总数。</li><li>生成用（a,u）对应的key时，不需要处理冲突，因此不需要哈希结构。</li><li>专用的、轻量级的内存表比大多数No-SQL存储方案更加实用。</li></ul><h3 id="s2实验框架experimentation-framework"><a class="markdownIt-Anchor" href="#s2实验框架experimentation-framework"></a> S2.实验框架（Experimentation Framework）</h3><p>那些场景需要线上A/B测试？</p><ul><li>广告系统的升级</li><li>广告算法的改进</li><li>创意或定向策略的优化</li></ul><p>实验框架的设计原则</p><ul><li>任何一组对比实验，其他的条件应该相同</li><li>线上流量容纳尽可能多的实验</li></ul><h3 id="s2分层实验框架"><a class="markdownIt-Anchor" href="#s2分层实验框架"></a> S2.分层实验框架</h3><p>发布层： 发布层1，发布层2</p><p>实验层： 非重叠测试区域，UI层、广告检索层、算法排序层。</p><h2 id="用户画像及其他受众定向基本概念"><a class="markdownIt-Anchor" href="#用户画像及其他受众定向基本概念"></a> 用户画像及其他：受众定向基本概念</h2><h3 id="p4受众定向方法分类"><a class="markdownIt-Anchor" href="#p4受众定向方法分类"></a> P4.受众定向方法分类</h3><p>受众定向即为（a，u，c）打标签的过程</p><ul><li>上下文标签可以认为是即时受众标签</li></ul><p>标签的两大主要作用</p><ul><li>建立面向广告主的流量售卖体系</li><li>为各估计模块（如CTR预测）提供特征</li></ul><h3 id="p4常见受众定向方式"><a class="markdownIt-Anchor" href="#p4常见受众定向方式"></a> P4.常见受众定向方式</h3><ul><li>地域定向（Geo-targeting） 【刚需】</li><li>人口属性定向（Demographical targeting）<ul><li>年龄、性别、教育程度、收入水平</li><li>可监测，难获得，对效果意义有限</li></ul></li><li>频道定向（Channel targeting）</li><li>精确位置定向（Hyper-local Targeting）<ul><li>利用蜂窝信息或者GPS获得精准位置，适用于O2O广告主</li></ul></li><li>上下文定向、行为定向</li><li>重定向（Retargetiing）<ul><li>针对广告主老用户或者相关用户进行再营销，属于定制化用户标签</li><li>主要利用第一方数据</li></ul></li><li>新客推荐（Look-alike）<ul><li>根据对广告主提供的种子用户，为其找到相关的新客</li><li>同时利用第一方数据和第二方数据</li></ul></li><li>动态定价（Dynamic pricing）<ul><li>并不是一种广告定向技术、但对价格敏感人群有筛选作用</li></ul></li></ul><h3 id="p4受众定向标签体系"><a class="markdownIt-Anchor" href="#p4受众定向标签体系"></a> P4.受众定向标签体系</h3><p>结构化标签体系</p><ul><li>按照某分类法（Taxonomy）制定一个层次标签体系，父节点与子节点在人群覆盖上是包含关系</li><li>主要用于面向品牌广告的手中定向，特别常用于GD系统中</li></ul><p>非结构化标签体系</p><ul><li>根据某类定向需求设置标签，标签并不能为同一个分类体系中所描述</li><li>适合于多种目标、特别是效果目标并存的广告主的精准流量选择要求</li></ul><p>关键词</p><ul><li>按照搜索或浏览内容的关键词划分人群</li><li>非结构化，容易理解，但操作和优化不容易</li></ul><h3 id="标签体系一般设计思路"><a class="markdownIt-Anchor" href="#标签体系一般设计思路"></a> 标签体系一般设计思路</h3><p>分行业制定标签体系</p><ul><li>掌握各行业用户决策逻辑，依此制定标签体系</li><li>不必拘泥于完备的分类法（Ontology）</li></ul><p>行业化标签体系距离</p><ul><li>汽车行业：价格 车型 品牌</li><li>电商行业：单品、单品、单品</li><li>游戏行业：对每款游戏扩展竞品</li><li>母婴行业：孩子的年龄</li></ul><h3 id="受众定向与用户画像"><a class="markdownIt-Anchor" href="#受众定向与用户画像"></a> 受众定向与用户画像</h3><p>受众定向</p><ul><li>强调根据需求找到相应的用户</li><li>重点是可优化而非可验证</li><li>例：某运动鞋的目标受众、某游戏的高付费人群</li></ul><p>用户画像</p><ul><li>强调获得用户固有的可解释属性</li><li>在一定程度上可验证，例如，人口属性、生活方式、职业特征、收入状况</li></ul><h2 id="用内容解读任务上下文定向"><a class="markdownIt-Anchor" href="#用内容解读任务上下文定向"></a> 用内容解读任务：上下文定向</h2><h3 id="p4上下文定向原理"><a class="markdownIt-Anchor" href="#p4上下文定向原理"></a> P4.上下文定向原理</h3><p>根据用户正在浏览的页面和其他信息投送广告</p><h3 id="p4上下文定向主要方式"><a class="markdownIt-Anchor" href="#p4上下文定向主要方式"></a> P4.上下文定向主要方式</h3><p>举例</p><ul><li>地域定向、频道/URL定向，页面内容定向</li></ul><p>常用方法</p><ul><li>用规则将页面归类到一些频道或者主题分类</li><li>抓取页面中的关键词</li><li>提取页面入链锚文本中的关键词</li><li>提取页面流量来源中的搜索关键词</li><li>用主题模型将页面内容映射到语义空间的一组主题上</li></ul><h3 id="a1-半在线near-line抓取系统"><a class="markdownIt-Anchor" href="#a1-半在线near-line抓取系统"></a> A1. 半在线（Near-line）抓取系统</h3><ul><li>用在线cache系统存储url -&gt; 特征表以提供实时访问</li><li>不预先加载任何cache内容，对cache中不存在的url，立刻返回空特征，同时触发相应的页面爬虫和特征提取</li><li>设置cache系统合适的失效时间已完成特征自动更新</li></ul><blockquote><p>思考：上下文定向目前并非主流的定向方式，这反映了什么问题？</p></blockquote><h2 id="将内容变成概念文本主题模型"><a class="markdownIt-Anchor" href="#将内容变成概念文本主题模型"></a> 将内容变成概念：文本主题模型</h2><h3 id="文本主题模型概要"><a class="markdownIt-Anchor" href="#文本主题模型概要"></a> 文本主题模型概要</h3><p>问题</p><ul><li>发现一组文档中抽象的主题（topics）</li></ul><p>输入</p><ul><li>一组文档$\left {d_1,d_2,…,d_N \right } $</li><li>文档dN的BoW表示：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><msub><mi>X</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>X</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mrow><mi>n</mi><mi>M</mi></mrow></msub><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left \{X_{n1},X_{n2},...,X_{nM}\right \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span></li><li>文档矩阵：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow><mo fence="true">{</mo><msub><mi>X</mi><mrow><mi>n</mi><mi>m</mi></mrow></msub><mo fence="true">}</mo></mrow><mrow><mi>N</mi><mo>∗</mo><mi>M</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\left \{X_{nm} \right \}_{N*M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.29969999999999997em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17863099999999998em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p>输出</p><ul><li>各文档得T个主题上的强度:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><msub><mi>z</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>z</mi><mrow><mi>n</mi><mi>T</mi></mrow></msub><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left \{ z_{n1}, z_{n2},...,z_{nT} \right \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span></li></ul><h3 id="常用文本主题模型"><a class="markdownIt-Anchor" href="#常用文本主题模型"></a> 常用文本主题模型</h3><p>LSA（Latent Semantic Analysis）</p><ul><li>文档矩阵的奇异值分解</li><li>选中前K个奇异值进行近似</li></ul><p>PLSI（Probabilistic Latent Semantic Indexing）</p><ul><li>将LSA变成了一个概率化的版本</li></ul><p>LDA（Latent Dirichlet Allocation）</p><ul><li>PLSI的贝叶斯版本</li><li>优化目标函数</li><li>可用变分法或Gibbs sampling方法求解</li></ul><p>词嵌入模型</p><ul><li>考虑了词的先后顺序关系</li></ul><h2 id="用数据理解用户行为定向"><a class="markdownIt-Anchor" href="#用数据理解用户行为定向"></a> 用数据理解用户：行为定向</h2><h3 id="p4行为定向behavioral-targeting"><a class="markdownIt-Anchor" href="#p4行为定向behavioral-targeting"></a> P4.行为定向（Behavioral targeting）</h3><ul><li>根据用户历史上网记录和其他数据计算出用户兴趣，根据此投放广告</li></ul><h3 id="p4行为定向数据来源"><a class="markdownIt-Anchor" href="#p4行为定向数据来源"></a> P4.行为定向数据来源</h3><p>决策行为</p><ul><li>转化（Conversion），预转化（Pre-conversion）</li><li>对应着非常明确的用户兴趣，价值最高</li></ul><p>主动行为</p><ul><li>搜索（Search）、广告点击（Ad click）、搜索点击（Search click）</li><li>在明确意图支配下主动产生的行为，价值也很高</li></ul><p>半主动行为</p><ul><li>分享（Share）、网页浏览（Page View）</li><li>量最大，用户意图最弱，也有一定价值</li></ul><p>被动行为</p><ul><li>广告浏览（Ad View）</li><li>负面的加权因素</li></ul><p>用户ID</p><ul><li>最重要的数据，一串0前面的那个1</li><li>稳定、精准的用户ID能大幅提高行为数据使用效率</li></ul><p>社交关系</p><ul><li>可以用于用户兴趣的平滑：当某个人的行为不足，无法进行精准的行为定向时，可以考虑借鉴其社交网络朋友的行为和兴趣。</li></ul><h3 id="p4各类行为的标签化方法"><a class="markdownIt-Anchor" href="#p4各类行为的标签化方法"></a> P4.各类行为的标签化方法</h3><h3 id="a1行为定向建模"><a class="markdownIt-Anchor" href="#a1行为定向建模"></a> A1.行为定向建模</h3><h3 id="a1行为定向特征选择过程"><a class="markdownIt-Anchor" href="#a1行为定向特征选择过程"></a> A1.行为定向特征选择过程</h3><h3 id="a1行为定向数据组织"><a class="markdownIt-Anchor" href="#a1行为定向数据组织"></a> A1.行为定向数据组织</h3><p>Session log</p><ul><li>将各种行为日志整理成以用户ID为key的形式，作为各数据处理模块的输入源，可以将targeting变成局部计算</li></ul><p>行为定向两种长期特征累积方式</p><ul><li>滑动窗方式</li><li>时间衰减方式</li></ul><h3 id="a1受众定向评测-reachctr曲线"><a class="markdownIt-Anchor" href="#a1受众定向评测-reachctr曲线"></a> A1.受众定向评测 - Reach/CTR曲线</h3><ul><li>Reach - target圈出来的人/总人数</li><li>右下角代表平均值</li><li>左边越高，受众定向效果越好</li></ul><h3 id="a1人口属性定向"><a class="markdownIt-Anchor" href="#a1人口属性定向"></a> A1.人口属性定向</h3><p>人口属性</p><ul><li>由于监测的原因，实践中主要使用的是性别、年龄</li><li>在传统广告中为人群选择的主要语言</li></ul><p>人口属性定向</p><ul><li>以性别定向为例，为二分类问题</li><li>需要有一定数量的标注样本，特征则来自用户行为</li></ul><blockquote><p>思考：行为定向为什么没有采用深度学习这类复杂的算法？</p></blockquote><h2 id="分布式计算平台"><a class="markdownIt-Anchor" href="#分布式计算平台"></a> 分布式计算平台</h2><h3 id="s5离线大数据平台"><a class="markdownIt-Anchor" href="#s5离线大数据平台"></a> S5.离线大数据平台</h3><h3 id="s5flume-by-cloudera"><a class="markdownIt-Anchor" href="#s5flume-by-cloudera"></a> S5.flume by cloudera</h3><p>高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统</p><ul><li>数据源：console、text、Thrift-RPC、tail、syslog</li><li>数据目的：console，dfs、Thrift-RPC</li><li>syslog TCP</li></ul><p>其他产品选择</p><ul><li>Scribe、Chukwa、KafKa</li></ul><h3 id="s5redis-by-wmware"><a class="markdownIt-Anchor" href="#s5redis-by-wmware"></a> S5.Redis by wmware</h3><p>一个KV存储系统</p><ul><li>Value可以支持string、list、set、zset、Hash</li><li>支持push/pop、add/remove等操作</li><li>高性能、使用简单，提供多种语言API</li></ul><p>注意事项</p><ul><li>避免让批量写影响在线服务的读性能</li><li>尽量用自更新的方式减少数据输入</li></ul><p>类似产品选择：Memcached</p><h2 id="如何利用合约市场合约广告需求方产品"><a class="markdownIt-Anchor" href="#如何利用合约市场合约广告需求方产品"></a> 如何利用合约市场：合约广告需求方产品</h2><h3 id="合约市场的优缺点"><a class="markdownIt-Anchor" href="#合约市场的优缺点"></a> 合约市场的优缺点</h3><p>优点</p><ul><li>有投放量的保证，确保人群触达</li><li>有时可以有竞品排他服务</li><li>活动类营销可以利用CPT位置获得冲击式曝光</li></ul><p>缺点</p><ul><li>很难利用精细的用户数据</li><li>溢价相对较高，媒体作弊相对容易</li></ul><h3 id="合约市场的利用与选择"><a class="markdownIt-Anchor" href="#合约市场的利用与选择"></a> 合约市场的利用与选择</h3><p>主要的合约广告产品</p><ul><li>综合或垂直门户的首页广告位</li><li>视频网站贴片港澳</li><li>移动应用开屏港澳</li></ul><p>应该如何选择</p><ul><li>宣传活动的品牌广告，可以选择高曝光的CPT广告</li><li>日常品牌触达广告，可以结合受众购买CPM广告</li></ul><h3 id="广告监播"><a class="markdownIt-Anchor" href="#广告监播"></a> 广告监播</h3><p>产品目的</p><ul><li>广告主委托第三方公司，对实际发生的展示或点击数目进行核对（AdMaster、秒针）</li><li>主要适用于按CPM结算的合约广告</li><li>按CPC、CPA结算的效果广告对此需求不大</li></ul><p>难点</p><ul><li>人口属性、地域等的监测</li><li>样本和总体之间的校正</li></ul><h3 id="广告安全"><a class="markdownIt-Anchor" href="#广告安全"></a> 广告安全</h3><p>广告投放验证（Ad verification）</p><ul><li>确认品牌的安全性，防止广告出现在对品牌有伤害的页面上。（例：优衣库出现在钓鱼岛新闻上）</li><li>页面内容不符合品牌诉求，则展示与品牌无关的创意</li><li>与广告监播不同，重点在于阻止不恰当展示的发生</li><li>可以Pre-bid进行</li></ul><p>可视性（Viewability）验证</p><ul><li>验证广告展示的曝光程度</li><li>判断浏览器是否对广告创意发生了渲染过程</li></ul><blockquote><p>思考：品牌广告的钱是不是比较好挣？</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;合约广告&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#合约广告&quot;&gt;&lt;/a&gt; 合约广告&lt;/h1&gt;
&lt;h2 id=&quot;广告位和展示量合约&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#广告位和展示量合约&quot;&gt;&lt;/a&gt; 广告位和展示量合约&lt;/h2&gt;
&lt;h3 id=&quot;广告位cpt合约&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#广告位cpt合约&quot;&gt;&lt;/a&gt; 广告位（CPT）合约&lt;/h3&gt;
&lt;p&gt;与线下广告交易类似的传统模式&lt;/p&gt;
&lt;p&gt;供给方产品：产品排期系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;帮助媒体自动执行多个合同的排期&lt;/li&gt;
&lt;li&gt;广告没有复杂的动态决策，因此可以将素材直接插入页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;流量选择的维度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间段、地域、轮播&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型场景&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高曝光广告位，开屏广告，应用市场头部位置，导航网址&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;展示量合约与担保式投送&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#展示量合约与担保式投送&quot;&gt;&lt;/a&gt; 展示量合约与担保式投送&lt;/h3&gt;
&lt;p&gt;展示量合约&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于合约的广告机制，有时未完成约定量要向广告商补偿&lt;/li&gt;
&lt;li&gt;多采用千次展示付费（Cost per Mille，CPM）方式结算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;担保式投送（Guaranteed Delivery，GD）引擎&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPM方式要求广告投送由服务器端完成决策&lt;/li&gt;
&lt;li&gt;三大技术基础：受众定向、流量预测、在线分配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型场景&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;视频广告、富媒体广告、品牌横幅广告&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;广告位合约-vs-展示量合约&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#广告位合约-vs-展示量合约&quot;&gt;&lt;/a&gt; 广告位合约 vs 展示量合约&lt;/h3&gt;
&lt;p&gt;广告位合约&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开辟了多个广告位&lt;/li&gt;
&lt;li&gt;分时段卖给不同的广告主。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;展示量合约&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅需要开辟较少的广告位&lt;/li&gt;
&lt;li&gt;将用户流量卖给不同的广告主&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;展示量合约更先进，前提是需要支持受众定向&lt;/p&gt;
&lt;h3 id=&quot;s1如何高效混合静态与动态广告&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#s1如何高效混合静态与动态广告&quot;&gt;&lt;/a&gt; S1.如何高效混合静态与动态广告？&lt;/h3&gt;
&lt;p&gt;前端代码先去CDN上取一个默认广告，然后再去请求广告服务器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前段代码先去CDN上获取默认广告。&lt;/li&gt;
&lt;li&gt;判断是否CPT广告，如果是，&lt;strong&gt;展示CDN广告&lt;/strong&gt;，如果不是，请求广告服务器。&lt;/li&gt;
&lt;li&gt;判断广告服务器是否成功返回，如果是，&lt;strong&gt;展示服务器返回的广告&lt;/strong&gt;；如果不是，&lt;strong&gt;展示CDN默认广告&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;思考：什么样的人群适合于在CPM广告中售卖？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
      <category term="合约广告" scheme="https://imzhanghao.com/tags/%E5%90%88%E7%BA%A6%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|3.相关方法</title>
    <link href="https://imzhanghao.com/2020/06/12/computing-advertising-3-related-knowledge/"/>
    <id>https://imzhanghao.com/2020/06/12/computing-advertising-3-related-knowledge/</id>
    <published>2020-06-11T16:00:00.000Z</published>
    <updated>2020-06-11T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算广告相关知识"><a class="markdownIt-Anchor" href="#计算广告相关知识"></a> 计算广告相关知识</h1><h2 id="最优化optimization"><a class="markdownIt-Anchor" href="#最优化optimization"></a> 最优化Optimization</h2><h3 id="什么是最优化问题"><a class="markdownIt-Anchor" href="#什么是最优化问题"></a> 什么是最优化问题</h3><p>无约束最优化问题：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">minf(x) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><p>带约束最优化问题：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mtext mathvariant="bold">g</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⩽</mo><mn>0</mn><mo separator="true">,</mo><mtext mathvariant="bold">h</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}min f(x)  \\s.t. \textbf{g}(x)\leqslant 0,\textbf{h}(x)=0\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord text"><span class="mord textbf">g</span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord textbf">h</span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="无约束优化问题一般思路"><a class="markdownIt-Anchor" href="#无约束优化问题一般思路"></a> 无约束优化问题一般思路</h3><p>目标函数不可/不易求导</p><ul><li>下降单纯形法（Ameoba变形虫法）</li></ul><p>目标函数易求导</p><ul><li>梯度下降法</li><li>批处理模式：训练集上的梯度分解为各个样本梯度的和，可以并行实现。</li><li>串行模式：随机梯度下降法（Stochastic Gradient Descent，SGD）【好用】</li></ul><h3 id="批处理梯度法的问题与拟牛顿法"><a class="markdownIt-Anchor" href="#批处理梯度法的问题与拟牛顿法"></a> 批处理梯度法的问题与拟牛顿法</h3><p>梯度法zigzag更新过程</p><ul><li>等高线和梯度垂直，因为等高线的形状是压扁的形状，所以会来回的跳，性能不好。</li></ul><p>牛顿法</p><ul><li>不仅考虑一阶导，还考虑二阶导。但是Hession阵可能不正定。</li></ul><p>拟牛顿法</p><ul><li>用近似但正定的Hession阵确保稳定求解</li></ul><a id="more"></a><h3 id="bfgs和l-bfgs方法"><a class="markdownIt-Anchor" href="#bfgs和l-bfgs方法"></a> BFGS和L-BFGS方法</h3><p>BFGS（Broyden，Fletcher，Oldfarb，and Shanno）</p><ul><li>拟牛顿法是一种，用函数值和特征的变化量来近似Hession矩阵，以保证正定性，并减少计算量。</li><li>Hession集合公式（空间复杂度为N方）</li></ul><p>L（Limited memory）- BFGS</p><ul><li>将Hession逆用{n*k}*{k*k}*{k*n}的方式近似【矩阵分解】</li><li>空间复杂度为n*k</li></ul><h3 id="trust-region方法"><a class="markdownIt-Anchor" href="#trust-region方法"></a> Trust-Region方法</h3><p>方法思想</p><ul><li>不近似Hession阵，但每次迭代将自变量限制在临域内</li><li>先步长，后方向</li></ul><p>上述子问题虽非凸优化，但是满足KKT条件</p><p>对于LR模型收敛速度经常好于L-BFGS</p><h3 id="带约束优化拉格朗日法"><a class="markdownIt-Anchor" href="#带约束优化拉格朗日法"></a> 带约束优化：拉格朗日法</h3><p>原问题（Primary Problem）==&gt; 拉格朗日对偶函数(Lagrangian dual function) ==&gt; 对偶问题(Dual problem)</p><h2 id="信息检索information-retrieval"><a class="markdownIt-Anchor" href="#信息检索information-retrieval"></a> 信息检索Information Retrieval</h2><h3 id="文档的表示与相似度量"><a class="markdownIt-Anchor" href="#文档的表示与相似度量"></a> 文档的表示与相似度量</h3><p>词袋（Bag of Words，BoW）表示</p><ul><li>用关键词TFIDF组成的矢量来表示文档。</li></ul><p>TF-IDF</p><ul><li>TF（term frequency）： 某文档中词出现的次数</li><li>IDF（inverse document frequency）：总文档数/某个词出现的文档数，然后取log</li></ul><p>向量空间模型</p><ul><li>用余弦距离来衡量两个文档的相似度</li></ul><h3 id="倒排索引"><a class="markdownIt-Anchor" href="#倒排索引"></a> 倒排索引</h3><p>文档集</p><ul><li>D1=“谷歌地图之父跳槽Facebook”</li><li>D2=“谷歌地图创始人拉斯离开谷歌加盟Facebook”</li><li>D3=“谷歌地图创始人跳槽Facebook与Wave项目取消有关”</li><li>D4=“谷歌地图创始人拉斯加盟社交网络Facebook”</li></ul><p>关键词（Term）</p><ul><li>{谷歌，地图，之父，跳槽，Facebook，……}</li></ul><p>倒排链</p><ul><li>谷歌-&gt;{D1，D2，D3，D4}，地图-&gt;{D1,D2,D3,D4},之父-&gt;{D1,D3,D4},跳槽-&gt;{D1,D3},Facebook-&gt;{D1,D2,D3,D4},……</li></ul><h2 id="统计机器学习statistical-machine-learning"><a class="markdownIt-Anchor" href="#统计机器学习statistical-machine-learning"></a> 统计机器学习Statistical Machine Learning</h2><h3 id="贝叶斯学习"><a class="markdownIt-Anchor" href="#贝叶斯学习"></a> 贝叶斯学习</h3><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Θ</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(\Theta | X ) = \frac{P(X | \Theta)P(\Theta)}{P(X)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">Θ</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord">Θ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">Θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>贝叶斯公式</p><ul><li>统计机器学习最核心的概念和公式。</li><li>频率学派 VS 贝叶斯学派</li><li>X是观测的变量，Theta是要估计的参数。</li><li>$P(\Theta | X ) $ 是后验概率Posterior，所有的分类都是追求后验概率最大的原则。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X | \Theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord">Θ</span><span class="mclose">)</span></span></span></span>是likelihood(已知是黑人，黑人拥有黑色皮肤的概率)，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(\Theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">Θ</span><span class="mclose">)</span></span></span></span>是prior（黑人在中国出现的概率）.</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span> 是evidence</li><li>贝叶斯的核心是认为所有参数都是不确定的。</li></ul><p>若干模型估计方法</p><h3 id="指数族分布"><a class="markdownIt-Anchor" href="#指数族分布"></a> 指数族分布</h3><p>归一化形式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mi>e</mi><mi>x</mi><mi>p</mi><mrow><mo fence="true">{</mo><msup><mi mathvariant="normal">Θ</mi><mi>T</mi></msup><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">P(x|\Theta)=h(x)g(\Theta)exp\left \{ \Theta^Tu(x) \right \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord">Θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">Θ</span><span class="mclose">)</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></p><p>若干重要指数族分布</p><h3 id="指数族贝叶斯学习"><a class="markdownIt-Anchor" href="#指数族贝叶斯学习"></a> 指数族贝叶斯学习</h3><p>共轭先验：使先验分布与后验分布形式一致的先验分布</p><p>指数族分布共轭先验，一般形式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Θ</mi><mi mathvariant="normal">∣</mi><mi>η</mi><mo stretchy="false">)</mo><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mrow><mo fence="true">{</mo><msup><mi>χ</mi><mi>T</mi></msup><mi mathvariant="normal">Θ</mi><mo>−</mo><mi>v</mi><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>−</mo><mi>b</mi><mo stretchy="false">(</mo><mi>χ</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">p(\Theta|\eta)=exp\left \{ \chi ^{T} \Theta-vg(\Theta)-b(\chi ,v))) \right \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">Θ</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2413409999999998em;vertical-align:-0.35001em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mord mathdefault">χ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord">Θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">Θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">χ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mo>=</mo><mrow><mo fence="true">{</mo><mi>χ</mi><mo separator="true">,</mo><mi>v</mi><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\eta=\left \{ \chi, v \right \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault">χ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>为超参数（hyperperameter）</p><p>指数族后验部分的超参数：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>χ</mi><mo>~</mo></mover><mo>=</mo><mi>χ</mi><mo>+</mo><munderover><mo>∑</mo><mi>N</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></munderover><mi>u</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{\chi} = \chi + \sum_{N}^{i=1}u(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8622999999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">χ</span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">~</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">χ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.294336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8116690000000002em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>v</mi><mo>~</mo></mover><mo>=</mo><mi>v</mi><mo>+</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\tilde{v} = v + N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6678599999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">~</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span></p><h3 id="指数族分布二"><a class="markdownIt-Anchor" href="#指数族分布二"></a> 指数族分布（二）</h3><p>最大似然估计：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi mathvariant="normal">▽</mi><mi>l</mi><mi>n</mi><mtext mathvariant="bold">g</mtext><mo stretchy="false">(</mo><msub><mi>θ</mi><mrow><mi>M</mi><mi>L</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mi>u</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">-\triangledown ln \textbf{g}(\theta_{ML} )=\frac{1}{N}\sum_{i=1}^{N}u(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord amsrm">▽</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mord text"><span class="mord textbf">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.326231em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>混合模型：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>ω</mi><mo separator="true">,</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mi>w</mi><mi>k</mi></msub><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mi mathvariant="normal">Θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>e</mi><mi>x</mi><mi>p</mi><mrow><mo fence="true">{</mo><msubsup><mi mathvariant="normal">Θ</mi><mi>k</mi><mi>T</mi></msubsup><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">P(x|\omega , \Theta)=\sum_{k=1}^{K}w_kh(x)g(\Theta_k)exp\left \{ \Theta_{k}^{T}u(x) \right \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.331241em;vertical-align:-0.35001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></p><ul><li>EM算法</li></ul><h2 id="深度学习deep-learning"><a class="markdownIt-Anchor" href="#深度学习deep-learning"></a> 深度学习Deep Learning</h2><h3 id="深度学习是什么"><a class="markdownIt-Anchor" href="#深度学习是什么"></a> 深度学习是什么？</h3><p>基于规则的系统</p><ul><li>img of 8 --&gt; 人工设计程序 --&gt; num of 8</li></ul><p>传统机器学习</p><ul><li>img of 8 --&gt; 人工设计特征 --&gt; 将特征映射到结果 --&gt; num of 8</li></ul><p>深度学习(表示学习)</p><ul><li>img of 8 --&gt; 自动提取特征 --&gt; 将特征映射到结果 --&gt; num of 8</li><li>img of 8 --&gt; 原始特征 --&gt; 额外的层和抽象特征 --&gt; 将特征映射到结果 --&gt; num of 8</li></ul><h3 id="全连接多层感知机multi-layer-perceptron-mlp"><a class="markdownIt-Anchor" href="#全连接多层感知机multi-layer-perceptron-mlp"></a> 全连接多层感知机（Multi-layer Perceptron, MLP）</h3><h3 id="深度学习的工程本质"><a class="markdownIt-Anchor" href="#深度学习的工程本质"></a> 深度学习的工程本质</h3><p>浅层模型与深度模型</p><ul><li>深度模型比浅层模型表示能力更强</li></ul><p>优化方法是关键</p><ul><li>找到了GPU这条优化方法</li></ul><p>数据的作用</p><ul><li>深度学习和大数据关系非常紧密</li></ul><h3 id="几种重要的神经网络结构"><a class="markdownIt-Anchor" href="#几种重要的神经网络结构"></a> 几种重要的神经网络结构</h3><p>CNN（Convolutional Neural Networks, 卷积神经网络）</p><ul><li>采样层-&gt;卷积层-&gt;采样层-&gt;全连接层MLP</li><li>参数共享</li><li>图像领域</li></ul><p>RNN（Recurrent Neural Networks，递归神经网络）</p><ul><li>用递归的方式设计网络结构</li><li>sequence到sequence的学习</li><li>语言领域</li><li>LSTM（Long-Short Term Memory，长短期记忆）是一种时间递归神经网络(RNN)</li></ul><p>GAN（Generative Adversarial Network，生成对抗网络）</p><h3 id="深度学习优化基础设施"><a class="markdownIt-Anchor" href="#深度学习优化基础设施"></a> 深度学习优化基础设施</h3><p>GPU方案</p><ul><li>并行渲染屏幕上每个像素点，与并行计算各神经元很相似</li><li>与CPU方案相比，可以加速数倍乃至十数倍</li></ul><p>并行计算方法</p><ul><li>SGD过程可以分解到多台机器上进行，分别更新参数</li><li>可以采用parameter server的计算框架，水平扩展性强</li></ul><p>开源框架</p><ul><li>Tensorflow，Caffe，Mxnet，可以一定程度上忽略硬件</li></ul><h2 id="数据运营三板斧-用户增长"><a class="markdownIt-Anchor" href="#数据运营三板斧-用户增长"></a> 数据运营三板斧 – 用户增长</h2><h3 id="用户增长的基础用户转化漏斗"><a class="markdownIt-Anchor" href="#用户增长的基础用户转化漏斗"></a> 用户增长的基础：用户转化漏斗</h3><p>用户转化漏斗示例</p><ul><li>移动用户获取：下载-&gt;激活-&gt;留存-&gt;时长</li><li>电商用户转化：到达商品页-&gt;加入购物车-&gt;完成订单-&gt;交易确认</li></ul><p>漏斗的设计原则与作用</p><ul><li>原则：整个漏斗过程用于优化一个唯一的目标</li><li>作用：将该目标分解为若干比率的乘积，便于发现问题并优化</li><li>示例：总用户时长 = 下载量 X 激活率 X 留存率 X 平均用户时长</li></ul><p>转化漏斗相关常见度量</p><ul><li>转化率 - 激活数与点击数的比</li><li>「次日/七日/月」留存率 - 某日激活的用户中，「次日/七日/月」后活跃的用户占比</li><li>「日/月」活跃用户（DAU，MAU）- 每「日/月」活跃的独立用户数</li><li>用户时长 - 每个活跃用户平均消耗的时间</li></ul><h3 id="找到增长的障碍多维度报表分析"><a class="markdownIt-Anchor" href="#找到增长的障碍多维度报表分析"></a> 找到增长的障碍：多维度报表分析</h3><p>通过漏斗发现问题</p><ul><li>某页游用户转化漏斗：</li><li>到达（5130）–19.1%–&gt;注册（980）–14.0%–&gt; 参与（431）–83.0%–&gt; 充值</li><li>注册率偏低，应该进一步分析？</li></ul><p>在多维度报表中找到症结</p><ul><li>注册率19.1%  – IE(25.1%),Chrome(3.5%),FireFox(22.7%)</li></ul><p>数据魔方（Data Cube）</p><ul><li>什么是数据魔方？ 1）用户可以较灵活选择维度组合，得到定制化报表。2）为人工决策提供便利</li><li>技术方案：OLAP数据库</li><li>开源方案：Saiku+MySQL</li></ul><h3 id="驱动新产品特征利用ab测试"><a class="markdownIt-Anchor" href="#驱动新产品特征利用ab测试"></a> 驱动新产品特征：利用A/B测试</h3><p>为什么需要A/B测试？</p><ul><li>多维情况下，魔方里大部分区域数据非常稀疏。极端情形：对于新Feature，需要主动分配测试流量</li><li>某维度上的两个选项（例如两个不同的模型），数据并不是完全可比</li><li>因此，我们需要一个主动的A/B测试框架，以便：1）主动分配流量给新的产品特征；2）保证对比实验的各组在数据上完全可比；3）尽可能在同样的流量规模上容纳更多的实验。</li></ul><p>A/B测试并不是万能的</p><ul><li>用户产品过于依赖数据会丧失对关键创新的把握。- 汽车无法从“跑得更快的马”进化而来</li><li>多数情况下，需要测试的可行组合太多，必须先经过人的筛选，或更复杂的E&amp;E策略。- 每天数十万的新闻，那些有可能最受用户欢迎？</li><li>博弈性场景无法通过A/B测试获得可靠性结论</li><li>A/B测试最适合的场景：理性产品、被动反应场景</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;计算广告相关知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算广告相关知识&quot;&gt;&lt;/a&gt; 计算广告相关知识&lt;/h1&gt;
&lt;h2 id=&quot;最优化optimization&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#最优化optimization&quot;&gt;&lt;/a&gt; 最优化Optimization&lt;/h2&gt;
&lt;h3 id=&quot;什么是最优化问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是最优化问题&quot;&gt;&lt;/a&gt; 什么是最优化问题&lt;/h3&gt;
&lt;p&gt;无约束最优化问题：&lt;/p&gt;
&lt;p class=&#39;katex-block&#39;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;minf(x) 
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;带约束最优化问题：&lt;/p&gt;
&lt;p class=&#39;katex-block&#39;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mtable rowspacing=&quot;0.24999999999999992em&quot; columnalign=&quot;right&quot; columnspacing=&quot;&quot;&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;true&quot;&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;true&quot;&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mtext mathvariant=&quot;bold&quot;&gt;g&lt;/mtext&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;⩽&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mtext mathvariant=&quot;bold&quot;&gt;h&lt;/mtext&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;/mtable&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\begin{aligned}
min f(x)  \\
s.t. \textbf{g}(x)\leqslant 0,\textbf{h}(x)=0
\end{aligned}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:3.0000000000000004em;vertical-align:-1.2500000000000002em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mtable&quot;&gt;&lt;span class=&quot;col-align-r&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.7500000000000002em;&quot;&gt;&lt;span style=&quot;top:-3.91em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.41em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord textbf&quot;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel amsrm&quot;&gt;⩽&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord textbf&quot;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.2500000000000002em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;无约束优化问题一般思路&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#无约束优化问题一般思路&quot;&gt;&lt;/a&gt; 无约束优化问题一般思路&lt;/h3&gt;
&lt;p&gt;目标函数不可/不易求导&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下降单纯形法（Ameoba变形虫法）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目标函数易求导&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;梯度下降法&lt;/li&gt;
&lt;li&gt;批处理模式：训练集上的梯度分解为各个样本梯度的和，可以并行实现。&lt;/li&gt;
&lt;li&gt;串行模式：随机梯度下降法（Stochastic Gradient Descent，SGD）【好用】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;批处理梯度法的问题与拟牛顿法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#批处理梯度法的问题与拟牛顿法&quot;&gt;&lt;/a&gt; 批处理梯度法的问题与拟牛顿法&lt;/h3&gt;
&lt;p&gt;梯度法zigzag更新过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;等高线和梯度垂直，因为等高线的形状是压扁的形状，所以会来回的跳，性能不好。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;牛顿法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不仅考虑一阶导，还考虑二阶导。但是Hession阵可能不正定。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拟牛顿法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用近似但正定的Hession阵确保稳定求解&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|2.认识商业体系</title>
    <link href="https://imzhanghao.com/2020/06/11/computing-advertising-2-business-system/"/>
    <id>https://imzhanghao.com/2020/06/11/computing-advertising-2-business-system/</id>
    <published>2020-06-10T16:00:00.000Z</published>
    <updated>2020-06-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认识商业化体系"><a class="markdownIt-Anchor" href="#认识商业化体系"></a> 认识商业化体系</h1><h2 id="计算广告逻辑与挑战六大算法问题"><a class="markdownIt-Anchor" href="#计算广告逻辑与挑战六大算法问题"></a> 计算广告逻辑与挑战：六大算法问题</h2><h3 id="商业化体系大闭环"><a class="markdownIt-Anchor" href="#商业化体系大闭环"></a> 商业化体系大闭环</h3><p>广告点击以后，就从媒体网站到了广告主的网站上。<br /><img src="https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E5%95%86%E4%B8%9A%E5%8C%96%E4%BD%93%E7%B3%BB%E5%A4%A7%E9%97%AD%E7%8E%AF.png" alt="商业化体系大闭环" /></p><h3 id="计算广告的核心挑战"><a class="markdownIt-Anchor" href="#计算广告的核心挑战"></a> 计算广告的核心挑战</h3><p>计算广告的核心问题，是为一系列用户与环境的组合，找到最合适的广告投放策略以优化整体广告活动的利润。</p><p>优化问题描述：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>T</mi></mrow></munder><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mrow><mi>r</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>q</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>d</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>⩽</mo><msub><mi>D</mi><mi>k</mi></msub><mo separator="true">,</mo><mi mathvariant="normal">∀</mi><mi>k</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\max \limits_{a_{1},...,T}\sum_{i=1}^{T}{r(a_{i},u_{i},c_{i}) - q(a_{i},u_{i},c_{i})} \\s.t.\sum_{i=1}^{T}d(a_{i},u_{i},c_{i},k) \leqslant D_{k},\forall k\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.812010000000001em;vertical-align:-3.1560050000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6560050000000004em;"><span style="top:-5.656005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.0556690000000004em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">.</span><span class="mord mtight">.</span><span class="mord mtight">.</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.880439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⩽</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1560050000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>决策对象：一组广告展示，a：广告，u：用户，c：上下文，r：收入(eCPM)，q：成本</li><li>这个公式是一个普适性的公式，适合于广告主、媒体、ADX等等～</li><li>优化的是一组广告的投放，后面预算的约束。</li></ul><h3 id="广告业务的转化漏斗和目标"><a class="markdownIt-Anchor" href="#广告业务的转化漏斗和目标"></a> 广告业务的转化漏斗和目标</h3><p>展示页–点击–&gt;落地页–转化–&gt;转化页</p><ul><li>从媒体网站到广告主网站</li><li>广告排序的唯一指标：u代表点击率，v代表转化率</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mi>C</mi><mi>P</mi><mi>M</mi><mo>=</mo><mi>r</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>u</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>u</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>u</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>v</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">eCPM=r(a,u,c)=u(a,u,c)*v(a,u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mclose">)</span></span></span></span></span></p><p>如果标识一个用户？</p><ul><li>PC Web/Mobile Web环境 – Cookie:存续行差，跨域时需要映射。</li><li>iOS应用 – IDFA：存续性好于cookie，但iOS10有更严格的政策。</li><li>Android应用 – Android ID：存续性好于IDFA；IMEI：在中国有部分使用。</li><li>无以上ID场景 – FingerPrint（IP+User Agent）：存在http头中，可作缺省标识。</li></ul><a id="more"></a><p>商业化体系六大算法问题</p><ul><li>A1.特征提取：受众定向</li><li>A2.微观优化：eCPM估计</li><li>A3.宏观优化：机制设计</li><li>A4.受限优化：在线分配</li><li>A5.强化学习：探索与利用</li><li>A6.重定向：个性化推荐</li></ul><p>用户决策的转化漏斗模型</p><ul><li>【选择】曝光（exposure）1.1主要取决于广告位的天然属性。</li><li>【选择】关注（attention）2.1不要干扰或者打断用户的任务；2.2明确揭示推荐的原因；2.3符合用户兴趣或者需求。</li><li>【解释】理解（comprehension）3.1广告在用户能理解的兴趣范围；3.2与关注程度相匹配的理解门槛。</li><li>【解释】信息接收（message acceptance）4.1广告商／广告认可度；4.2广告位认可度</li><li>【态度】保持（retention）5.1艺术性带来的记忆效果</li><li>【态度】购买（purchase）6.1在用户的价格敏感接收范围内</li></ul><h3 id="在线广告主要结算方式详解"><a class="markdownIt-Anchor" href="#在线广告主要结算方式详解"></a> 在线广告主要结算方式详解</h3><table><thead><tr><th>结算方式</th><th>点击率估计／点击价值估计</th><th>优缺点</th><th>使用场景</th></tr></thead><tbody><tr><td>CPT</td><td>需求方</td><td>1.可以充分发挥橱窗效应。<br>2.无法利用受众定向技术</td><td>高曝光的品牌广告</td></tr><tr><td>CPM</td><td>需求方</td><td>1.可以利用受众定向选择目标人群。<br>2.合约售卖下，受众划分不能过细。</td><td>1.有受众选择需求的品牌广告<br>2.实时竞价广告交易</td></tr><tr><td>CPC</td><td>供给方／需求方</td><td>1.可以非常精细地划分受众人群。<br>2.比较合理的供给方和需求方分工.</td><td>竞价广告网络</td></tr><tr><td>CPS</td><td>供给方</td><td>1.需求方无任何风险。<br>2.供给方运营难度加大.</td><td>1.效果类广告联盟<br>2.效果类DSP</td></tr></tbody></table><h3 id="cpacps的问题与合理场景"><a class="markdownIt-Anchor" href="#cpacps的问题与合理场景"></a> CPA/CPS的问题与合理场景</h3><p>存在的问题</p><ul><li>由供给方同时负责优化点击和转化率，并非普适的合理模式<br></li><li>存在劫持、代销等多种相应的灰色手段<br></li><li>用于优化的数据对于单个广告主来说严重不足<br></li></ul><p>适用的场景</p><ul><li>转化过程一致且规范的广告市场<br></li><li>例：淘宝客（转化流程为淘宝统一提供）、APP下载（转化流程在Apple Store或Google Play）<br></li><li>在大多数场景下，CPC可能更合理<br></li></ul><h2 id="商业化产品体系概览六大产品问题"><a class="markdownIt-Anchor" href="#商业化产品体系概览六大产品问题"></a> 商业化产品体系概览：六大产品问题</h2><p>商业产品设计运营原则</p><ul><li>商业产品，即面向产品客户而非一般用户的产品，其中最典型的代表就是广告产品。</li><li>相对于产品功能，要特别关注产品中的策略部分。</li><li>要特别关注数据，让运营和产品优化形成闭环。所有产品特征和策略的成功与否，要严格根据数据的反馈来判断。</li><li>优化的是确定的商业目标，而非使用便捷性。</li></ul><p>商业化体系六大产品问题</p><ul><li>P1.供需接口</li><li>P2.竞价机制</li><li>P3.数据运营</li><li>P4.标签体系</li><li>P5.程序化交易</li><li>P6.原生广告</li></ul><p>需求方层级组织</p><ul><li>广告主–&gt;广告计划–&gt;广告组–&gt;广告创意.</li><li>广告活动（Campaign）概念上对应于广告主的一次投放合同，其中包括了预算、时间范围等基本信息。</li><li>广告组（Ad Group）对于于一个具体的广告投放策略，主要是设定受众定向条件和出价。</li><li>广告创意（Creative）则是最终展示出来的素材，可能在同一个组策略下有不同尺寸的创意存在。</li></ul><h2 id="商业化产品系统框架六大系统技术"><a class="markdownIt-Anchor" href="#商业化产品系统框架六大系统技术"></a> 商业化产品系统框架：六大系统技术</h2><p>个性化系统一般框架: 主要组成模块</p><ul><li>【受众定向平台】分布式计算平台：灵活的海量数据挖掘平台，机器学习算法的分布式架构</li><li>【高并发投送系统】在线投放引擎：十毫秒级别的实时决策，百亿次/天的投放系统</li><li>【流式计算平台】流计算平台：日志的准实时挖掘和反馈</li><li>【数据高速公路】数据高速公路：内部及外部TB级数据实时收集</li></ul><p>Web-scale技术问题比较</p><table align="center">  <tr><td></td><td>搜索</td><td>搜索广告</td><td>显示广告</td><td>个性化推荐</td></tr>  <tr><td>主要准则</td><td>相关性</td><td colspan=2>利润</td><td>用户兴趣</td></tr>  <tr><td>其他目标</td><td>垂直领域决定</td><td colspan=2>质量、安全性</td><td>多样性、新鲜度</td></tr>  <tr><td>索引规模</td><td>十亿级</td><td>百万/千万级</td><td>千万级</td><td>百万级 亿级</td></tr>  <tr><td>个性化</td><td colspan=2>较少的个性化需求</td><td colspan=2>亿级规模用户上的个性化</td></tr>  <tr><td>检索信号</td><td colspan=2>较明确</td><td colspan=2>较分散</td></tr>  <tr><td>DownStream优化</td><td colspan=3>不适用</td><td>适用</td></tr></table><p>广告系统有什么特点？</p><ul><li>高并发、低延迟的要求 –  同时关注QPS和Latency</li><li>数据处理的规模很大 – （用户、环境、信息）三元组上的数据建模</li><li>数据处理的速度优于精度</li><li>主流程的一致性要求不高</li></ul><p>广告系统有什么设计原则？</p><ul><li>建立弱一致性系统的设计思维方式。 – 例：Near-line page fetcher</li><li>大量数据尽量环形单向流动。-- 避免集中读写形成的单点性能瓶颈</li><li>在线时不要发生与关系行数据库的交互 – 增删改查的传统需求实际上不存在</li><li>充分利用开源社区的成熟技术</li></ul><p>开源软件的优势与顾虑</p><ul><li>优势 - 1.大量细分使用场景都有开源方案. 2.大型互联网公司的开源产品经过充分测试.</li><li>顾虑 - 1.需要仔细甄别好的和不太好的开源项目. 2.在遇到深层次bug时无能为力.</li><li>核心业务逻辑不应该是选择开源.</li></ul><p>商业化产品六大系统技术</p><ul><li>S1.流量接入：代码和SDK</li><li>S2.投放引擎：高并发服务</li><li>S3.侯选查询：实施索引</li><li>S4.特征存储：No-sql数据库</li><li>S5.离线学习：分布式计算</li><li>S6.在线学习：流式计算</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;认识商业化体系&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#认识商业化体系&quot;&gt;&lt;/a&gt; 认识商业化体系&lt;/h1&gt;
&lt;h2 id=&quot;计算广告逻辑与挑战六大算法问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算广告逻辑与挑战六大算法问题&quot;&gt;&lt;/a&gt; 计算广告逻辑与挑战：六大算法问题&lt;/h2&gt;
&lt;h3 id=&quot;商业化体系大闭环&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#商业化体系大闭环&quot;&gt;&lt;/a&gt; 商业化体系大闭环&lt;/h3&gt;
&lt;p&gt;广告点击以后，就从媒体网站到了广告主的网站上。&lt;br /&gt;
&lt;img src=&quot;https://imzhanghao.oss-cn-qingdao.aliyuncs.com/img/%E5%95%86%E4%B8%9A%E5%8C%96%E4%BD%93%E7%B3%BB%E5%A4%A7%E9%97%AD%E7%8E%AF.png&quot; alt=&quot;商业化体系大闭环&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;计算广告的核心挑战&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算广告的核心挑战&quot;&gt;&lt;/a&gt; 计算广告的核心挑战&lt;/h3&gt;
&lt;p&gt;计算广告的核心问题，是为一系列用户与环境的组合，找到最合适的广告投放策略以优化整体广告活动的利润。&lt;/p&gt;
&lt;p&gt;优化问题描述：&lt;/p&gt;
&lt;p class=&#39;katex-block&#39;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mtable rowspacing=&quot;0.24999999999999992em&quot; columnalign=&quot;right&quot; columnspacing=&quot;&quot;&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;true&quot;&gt;&lt;mrow&gt;&lt;munder&gt;&lt;mo&gt;&lt;mi&gt;max&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;/mo&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/mrow&gt;&lt;/munder&gt;&lt;munderover&gt;&lt;mo&gt;∑&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/munderover&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;q&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;true&quot;&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;.&lt;/mi&gt;&lt;munderover&gt;&lt;mo&gt;∑&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/munderover&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;⩽&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∀&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;/mtable&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\begin{aligned}
\max \limits_{a_{1},...,T}\sum_{i=1}^{T}{r(a_{i},u_{i},c_{i}) - q(a_{i},u_{i},c_{i})} \\
s.t.\sum_{i=1}^{T}d(a_{i},u_{i},c_{i},k) \leqslant D_{k},\forall k
\end{aligned}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:6.812010000000001em;vertical-align:-3.1560050000000004em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mtable&quot;&gt;&lt;span class=&quot;col-align-r&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:3.6560050000000004em;&quot;&gt;&lt;span style=&quot;top:-5.656005em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.828336em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mop op-limits&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.43055999999999994em;&quot;&gt;&lt;span style=&quot;top:-2.0556690000000004em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31731428571428577em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.143em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct mtight&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mpunct mtight&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.7em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;mop&quot;&gt;max&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.880439em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop op-limits&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.8283360000000002em;&quot;&gt;&lt;span style=&quot;top:-1.872331em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mrel mtight&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.050005em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;mop op-symbol large-op&quot;&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-4.3000050000000005em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.277669em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.25em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.828336em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop op-limits&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.8283360000000002em;&quot;&gt;&lt;span style=&quot;top:-1.872331em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mrel mtight&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.050005em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;mop op-symbol large-op&quot;&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-4.3000050000000005em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.277669em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel amsrm&quot;&gt;⩽&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.33610799999999996em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;∀&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:3.1560050000000004em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;决策对象：一组广告展示，a：广告，u：用户，c：上下文，r：收入(eCPM)，q：成本&lt;/li&gt;
&lt;li&gt;这个公式是一个普适性的公式，适合于广告主、媒体、ADX等等～&lt;/li&gt;
&lt;li&gt;优化的是一组广告的投放，后面预算的约束。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;广告业务的转化漏斗和目标&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#广告业务的转化漏斗和目标&quot;&gt;&lt;/a&gt; 广告业务的转化漏斗和目标&lt;/h3&gt;
&lt;p&gt;展示页–点击–&amp;gt;落地页–转化–&amp;gt;转化页&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从媒体网站到广告主网站&lt;/li&gt;
&lt;li&gt;广告排序的唯一指标：u代表点击率，v代表转化率&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#39;katex-block&#39;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;eCPM=r(a,u,c)=u(a,u,c)*v(a,u)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07153em;&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10903em;&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果标识一个用户？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PC Web/Mobile Web环境 – Cookie:存续行差，跨域时需要映射。&lt;/li&gt;
&lt;li&gt;iOS应用 – IDFA：存续性好于cookie，但iOS10有更严格的政策。&lt;/li&gt;
&lt;li&gt;Android应用 – Android ID：存续性好于IDFA；IMEI：在中国有部分使用。&lt;/li&gt;
&lt;li&gt;无以上ID场景 – FingerPrint（IP+User Agent）：存在http头中，可作缺省标识。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>计算广告|1.课程体系</title>
    <link href="https://imzhanghao.com/2020/06/10/computing-advertising-1-curriculum-structure/"/>
    <id>https://imzhanghao.com/2020/06/10/computing-advertising-1-curriculum-structure/</id>
    <published>2020-06-09T16:00:00.000Z</published>
    <updated>2020-06-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课程体系"><a class="markdownIt-Anchor" href="#课程体系"></a> 课程体系</h1><p>计算广告研究的是商业化产品，本质是数据变现，技能要靠机器学习。</p><h2 id="认识商业化体系"><a class="markdownIt-Anchor" href="#认识商业化体系"></a> 认识商业化体系</h2><h3 id="googlefacebook-以及bat在2015年广告收入占总收入的70"><a class="markdownIt-Anchor" href="#googlefacebook-以及bat在2015年广告收入占总收入的70"></a> Google／Facebook 以及BAT在2015年广告收入占总收入的70%+</h3><p>从2007年到2015年</p><ul><li>中国网络广告17亿–&gt;317亿 ，电视广告97亿-&gt;226亿</li><li>美国网络广告增长迅猛，电视广告基本持平，报纸广告在缩水</li><li>ps.电视广告的增长代表着市场经济的增长速度</li></ul><p><strong>与商业化相关的产品问题：商业模式探索、流量变现、数据变现、用户增长。</strong></p><h3 id="戏说互联网思维之三个不要"><a class="markdownIt-Anchor" href="#戏说互联网思维之三个不要"></a> 戏说互联网思维之“三个不要”</h3><ul><li>“不要命”：期权激励，996方式工作。</li><li>“不要脸”：无底线迎合用户的产品与营销方式。</li><li>“不要钱”：免费倾销加后向变现的商业模式。</li></ul><a id="more"></a><h3 id="什么是免费模式"><a class="markdownIt-Anchor" href="#什么是免费模式"></a> 什么是免费模式？</h3><ul><li>免费模式本质：能够个性化传播信息的产品，售价都能趋向其边际成本。<br></li><li>免费模式举例：网站、应用：边际成本约等于0。手机、电视：边际成本约等于量产成本（红米）。<br></li><li>免费模式目的：获得其他资产，通过后向渠道变现。<br></li></ul><h3 id="互联网三项可变现核心资产"><a class="markdownIt-Anchor" href="#互联网三项可变现核心资产"></a> 互联网三项可变现核心资产</h3><ul><li>品牌：根据用户熟悉的形象提高付费内容关注程度。（金字塔顶端）</li><li>数据：根据用户偏好提高付费内容投放效率。（实现个性化）</li><li>流量：在正常（Organic）内容里夹带付费内容（Sponsored Content）。（基石）</li><li>广点通变现的是流量和数据，自媒体的核心价值是品牌。</li></ul><h3 id="流量变现数据变现"><a class="markdownIt-Anchor" href="#流量变现数据变现"></a> 流量变现&amp;数据变现</h3><ul><li>以吉列广告为例<ul><li>流量变现（CPT）：100000个人看，ecpm为10块钱，媒体赚10000块<br></li><li>流量+数据变现（按人口属性售卖）：男性用户卖6000块，女性用户卖6000块，媒体赚12000块<br></li><li>流量价值（10000）+  数据价值（2000）= 12000<br></li></ul></li><li>吉列6000买男性用户，虽然总流量少了，但是有效流量没有少，这样子提高了流量利用的效率。<br></li></ul><h3 id="品牌属性变现"><a class="markdownIt-Anchor" href="#品牌属性变现"></a> 品牌属性变现</h3><ul><li>利用熟悉Logo进行再营销</li><li>利用品牌形象带来高关注度</li></ul><h3 id="总结关于商业化体系"><a class="markdownIt-Anchor" href="#总结关于商业化体系"></a> 总结，关于商业化体系</h3><ul><li>以广告为载体的商业化体系支撑了整个互联网行业的大半壁江山，不了解它，就不可能深入了解互联网。</li><li>互联网商业化体系是迄今为止，大数据领域唯一形成规模化营收的应用。</li><li>商业化是结合计算机技术、心理学、经济学、营销学等的综合应用。</li></ul><h2 id="理解大数据问题来源-问题与应用"><a class="markdownIt-Anchor" href="#理解大数据问题来源-问题与应用"></a> 理解大数据问题：来源、问题与应用</h2><p>是不是Big Data的应用需要满足三点：行为数据、自动化应用、全量加工。</p><h3 id="交易数据-vs-行为数据"><a class="markdownIt-Anchor" href="#交易数据-vs-行为数据"></a> 交易数据 vs 行为数据</h3><table><thead><tr><th>对比项目</th><th>交易数据</th><th>行为数据</th></tr></thead><tbody><tr><td>定义</td><td>业务流程中必须记录的数据</td><td>业务流程中非必须记的数据</td></tr><tr><td>举例</td><td>电信(通话记录、花费等)、银行（存取款、利息等）、医疗（病历）</td><td>互联网（所有服务后台日志）、电信（通话内容、上网记录）、医疗（日常健康指标）</td></tr><tr><td>特点</td><td>数据规模中等、一致性要求极高</td><td>数据规模巨大、一致性要求行对较低</td></tr></tbody></table><h3 id="洞察数据-vs-自动化应用"><a class="markdownIt-Anchor" href="#洞察数据-vs-自动化应用"></a> 洞察数据 vs 自动化应用</h3><table><thead><tr><th>对比项目</th><th>洞察数据</th><th>自动化应用</th></tr></thead><tbody><tr><td>定义</td><td>全局或局部性的统计信息获取</td><td>个体的行为和兴趣特征捕获</td></tr><tr><td>举例</td><td>企业财务报表、日常运营报表</td><td>定向广告、客户关系维护</td></tr><tr><td>特点</td><td>主要用于宏观决策支持、面向领导和运营人员</td><td>主要用于微观业务实施、面向机器和销售人员</td></tr></tbody></table><h3 id="采样分析-vs-全量加工"><a class="markdownIt-Anchor" href="#采样分析-vs-全量加工"></a> 采样分析 vs 全量加工</h3><table><thead><tr><th>对比项目</th><th>采样分析</th><th>全量加工</th></tr></thead><tbody><tr><td>定义</td><td>通过小部分数据即可当作准确地解决问题</td><td>必须分析全量数据才能解决问题</td></tr><tr><td>举例</td><td>用户教育程度分布、人口普查、百度迁移地图</td><td>个性化推荐、计算广告、个人征信</td></tr><tr><td>特点</td><td>实际上不需要大规模计算</td><td>大规模计算无法避免</td></tr></tbody></table><h3 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h3><ul><li>大数据保险行业（出险预估+个性化定价）</li><li>大数据医疗行业（个人健康建模+疾病的管理与预防)</li></ul><h2 id="直观认识在线广告目的与形式"><a class="markdownIt-Anchor" href="#直观认识在线广告目的与形式"></a> 直观认识在线广告：目的与形式</h2><h3 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h3><table><thead><tr><th>对比项目</th><th>品牌触达（Brand Awareness)</th><th>直接效果（Direct Response）</th></tr></thead><tbody><tr><td>诉求</td><td>创造独特良好的品牌形象，提升长时期内的<em>转化率</em>与<em>利润</em></td><td>有<em>短期内</em>明确用户<em>转化</em>行为诉求.（超市打折海报广告）</td></tr><tr><td>形式</td><td>视频广告（Video ad）、富媒体广告（rich-media ad）、开屏广告</td><td>条幅广告（Banner）、文字广告（Textual）、邮件营销（Email Direct Marketing，EDM）</td></tr></tbody></table><p>广告的根本目的是什么？</p><ul><li>传统视角：<ul><li>广告的根本目的是广告主通过媒体达到低成本的用户接触；</li><li>广告的投入产出比（Return on Inverstment，ROI）相比于销售人员的劝服活动应该较高</li></ul></li><li>互联网新视角：<ul><li>一切付费的信息、产品或服务的传播渠道，都是广告；</li><li>直接效果广告的ROI应该可衡量、可优化</li></ul></li></ul><h3 id="形式"><a class="markdownIt-Anchor" href="#形式"></a> 形式</h3><p>移动广告普通形式</p><ul><li>条幅（体验不好，会被淘汰，各方都受损）</li><li>开屏（只能做Branding，无法点击）</li><li>推荐墙（各种应用下载）</li><li>信息流广告（微博信息流、原生广告，在移动终端中最成功的形式）</li></ul><p>激励性广告</p><ul><li>用户带着目的去下载，执行完任务领取奖励以后，就会删除应用，效果不好</li><li>价格显著低于普通型广告，可以用于刷榜，游戏从0-1起量</li></ul><p>泛广告商业产品</p><ul><li>团购、网址导航、游戏联运</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;课程体系&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#课程体系&quot;&gt;&lt;/a&gt; 课程体系&lt;/h1&gt;
&lt;p&gt;计算广告研究的是商业化产品，本质是数据变现，技能要靠机器学习。&lt;/p&gt;
&lt;h2 id=&quot;认识商业化体系&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#认识商业化体系&quot;&gt;&lt;/a&gt; 认识商业化体系&lt;/h2&gt;
&lt;h3 id=&quot;googlefacebook-以及bat在2015年广告收入占总收入的70&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#googlefacebook-以及bat在2015年广告收入占总收入的70&quot;&gt;&lt;/a&gt; Google／Facebook 以及BAT在2015年广告收入占总收入的70%+&lt;/h3&gt;
&lt;p&gt;从2007年到2015年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中国网络广告17亿–&amp;gt;317亿 ，电视广告97亿-&amp;gt;226亿&lt;/li&gt;
&lt;li&gt;美国网络广告增长迅猛，电视广告基本持平，报纸广告在缩水&lt;/li&gt;
&lt;li&gt;ps.电视广告的增长代表着市场经济的增长速度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;与商业化相关的产品问题：商业模式探索、流量变现、数据变现、用户增长。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;戏说互联网思维之三个不要&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#戏说互联网思维之三个不要&quot;&gt;&lt;/a&gt; 戏说互联网思维之“三个不要”&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;“不要命”：期权激励，996方式工作。&lt;/li&gt;
&lt;li&gt;“不要脸”：无底线迎合用户的产品与营销方式。&lt;/li&gt;
&lt;li&gt;“不要钱”：免费倾销加后向变现的商业模式。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/categories/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    
      <category term="计算广告" scheme="https://imzhanghao.com/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|8.从0到1实战联盟营销</title>
    <link href="https://imzhanghao.com/2020/05/25/make-money-online-8-affiliate-marketing-zero-to-one/"/>
    <id>https://imzhanghao.com/2020/05/25/make-money-online-8-affiliate-marketing-zero-to-one/</id>
    <published>2020-05-24T16:00:00.000Z</published>
    <updated>2020-05-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>网站如何推广<br />网站的流量和收益情况<br />Amz520网站的基本情况</p><a id="more"></a><h1 id="amz520网站一个月的复盘成绩"><a class="markdownIt-Anchor" href="#amz520网站一个月的复盘成绩"></a> Amz520网站一个月的复盘成绩</h1><h2 id="缘起"><a class="markdownIt-Anchor" href="#缘起"></a> 缘起</h2><ul><li>需求<ul><li>来自于自己在做独立站运营过程中反复使用各种工具都需要自己打开，</li></ul></li><li>优势<ul><li>自己有博客、公众号、社群，在跨境电商领域有大量的读者。</li><li>软件破解需求</li></ul></li><li>变现<ul><li>流量住的服务，对工具进行联盟营销</li><li>广告</li><li>对接好的项目&amp;需求，反哺我的项目和团队</li></ul></li></ul><h2 id="网站如何推广"><a class="markdownIt-Anchor" href="#网站如何推广"></a> 网站如何推广</h2><ul><li>工具裂变<ul><li>破解keepas，免费使用</li><li>破解Merchantwords，免费使用</li></ul></li><li>文章推广<ul><li>公众号文章，利用已有的公众号</li></ul></li><li>社群推广<ul><li>社群，微信群&amp;QQ群</li><li>社群口令红包</li></ul></li><li>行业刷脸<ul><li>朋友圈刷脸海报</li></ul></li><li>seo外链推广<ul><li>知乎，红人，讲产品植入红人的回答中</li></ul></li></ul><h2 id="网站的流量和收益情况"><a class="markdownIt-Anchor" href="#网站的流量和收益情况"></a> 网站的流量和收益情况</h2><ul><li>1w+独立pv</li><li>10w+收入</li></ul><h2 id="amz520网站的基本情况"><a class="markdownIt-Anchor" href="#amz520网站的基本情况"></a> Amz520网站的基本情况</h2><ul><li>发布时间：2019.05.07</li><li>复盘时间：2020.05.06～2020.06.06</li><li>人员配置情况：前端、美工、后段、顾小北</li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第8课笔记。</p></blockquote><hr /><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><p>一个需要被满足的需求 + 推广 = 稳定的现金流</p><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第8课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网站如何推广&lt;br /&gt;
网站的流量和收益情况&lt;br /&gt;
Amz520网站的基本情况&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|7.如何获取流量</title>
    <link href="https://imzhanghao.com/2020/05/23/make-money-online-7-affiliate-marketing-get-traffic/"/>
    <id>https://imzhanghao.com/2020/05/23/make-money-online-7-affiliate-marketing-get-traffic/</id>
    <published>2020-05-22T16:00:00.000Z</published>
    <updated>2020-05-22T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>企业如何获取客户的思维模型？<br />如何取获取客户:Free/Paid</p><a id="more"></a><h1 id="如何获取流量"><a class="markdownIt-Anchor" href="#如何获取流量"></a> 如何获取流量</h1><h2 id="企业如何获取客户的思维模型"><a class="markdownIt-Anchor" href="#企业如何获取客户的思维模型"></a> 企业如何获取客户的思维模型？</h2><h3 id="转化漏斗-四要素"><a class="markdownIt-Anchor" href="#转化漏斗-四要素"></a> 转化漏斗- 四要素</h3><ul><li>拉新：干货内容、广告。冷流量～</li><li>留存：eg.留邮箱，优惠、折扣。</li><li>促活：EDM</li><li>转化</li></ul><blockquote><p>需要明确客户目前处于转化的哪个漏斗阶段，针对性的开展运营策略。</p></blockquote><h3 id="stages-of-the-customer-buying-cycle"><a class="markdownIt-Anchor" href="#stages-of-the-customer-buying-cycle"></a> Stages of the Customer Buying Cycle</h3><ul><li>awareness:让人知道你的产品</li><li>interest：让人们对你的产品或者服务感兴趣</li><li>consideration：客户考虑，产生购买意向</li><li>purchase：客户购买，成交</li><li>post-purchase：客户分享，晒朋友圈</li><li>re-purchase：复购</li></ul><h2 id="facebook-广告漏洞"><a class="markdownIt-Anchor" href="#facebook-广告漏洞"></a> Facebook 广告漏洞</h2><ul><li>品牌认知：对你的产品或者服务产生兴趣的目标，这个阶段是偏向于reach数量</li><li>购买意向：让人们开始知道你的业务(增加流量，安装APP，帖子互动)</li><li>行为转化：鼓励对你产品感兴趣的人，进行购买或者使用为目标</li></ul><h2 id="如何取获取客户"><a class="markdownIt-Anchor" href="#如何取获取客户"></a> 如何取获取客户</h2><h3 id="free"><a class="markdownIt-Anchor" href="#free"></a> Free</h3><ul><li>操作方法<ul><li>内容营销</li><li>SEO</li><li>社群营销</li></ul></li><li>优点<ul><li>获客相对来说比较精准</li></ul></li><li>缺点：<ul><li>失效太慢了，耗费的周期很长，时间成本很大</li></ul></li></ul><h3 id="paid"><a class="markdownIt-Anchor" href="#paid"></a> Paid</h3><ul><li>操作方法<ul><li>广告</li><li>红人营销</li></ul></li><li>优点<ul><li>速度快，见效快</li></ul></li><li>缺点：<ul><li>广告成本大</li><li>广告一停，流程下降很快</li></ul></li></ul><hr /><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><ul><li>要明确目前处于获客的什么阶段，然后明确使用什么策略</li><li>如果做免费流量，就需要思考国平老师说的：让内容在渠道之间流动。</li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第7课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;企业如何获取客户的思维模型？&lt;br /&gt;
如何取获取客户:Free/Paid&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|6.为什么你做的联盟营销会失败</title>
    <link href="https://imzhanghao.com/2020/05/22/make-money-online-6-affiliate-marketing-fail-reason/"/>
    <id>https://imzhanghao.com/2020/05/22/make-money-online-6-affiliate-marketing-fail-reason/</id>
    <published>2020-05-21T16:00:00.000Z</published>
    <updated>2020-05-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>产品选错了<br />关键词选错了<br />语言问题<br />持续性的问题<br />网站问题</p><a id="more"></a><h1 id="为什么你做的联盟营销会失败"><a class="markdownIt-Anchor" href="#为什么你做的联盟营销会失败"></a> 为什么你做的联盟营销会失败</h1><h2 id="产品选错了"><a class="markdownIt-Anchor" href="#产品选错了"></a> 产品选错了</h2><ul><li>选品要多花时间</li><li>这是联盟营销的第一步，一步错，步步错。</li></ul><h2 id="关键词选错了"><a class="markdownIt-Anchor" href="#关键词选错了"></a> 关键词选错了</h2><ul><li>竞争太高or太热，导致自己的内容一直排不到前面</li><li>关键词选错直接会导致拿不到流量。</li></ul><h2 id="语言问题"><a class="markdownIt-Anchor" href="#语言问题"></a> 语言问题</h2><ul><li>专八也不一定能搞定地道的英语。</li><li>自己去解决语言问题太难了，要借助外力。</li><li>外包是一个方案</li></ul><h2 id="持续性的问题"><a class="markdownIt-Anchor" href="#持续性的问题"></a> 持续性的问题</h2><ul><li>如果是免费的方法，是一个长期的事情，如果一直没有起色的话，会丧失信心。</li></ul><h2 id="网站问题"><a class="markdownIt-Anchor" href="#网站问题"></a> 网站问题</h2><ul><li>网站风格，如果你面向的外国人，就需要符合外国人的审美和风格。</li></ul><h2 id="着陆页"><a class="markdownIt-Anchor" href="#着陆页"></a> 着陆页</h2><ul><li>需要专门进行设计</li></ul><h2 id="考虑问题不够全面"><a class="markdownIt-Anchor" href="#考虑问题不够全面"></a> 考虑问题不够全面</h2><ul><li>思路要开阔</li><li>变现思路是多样化的</li></ul><blockquote><p>最重要的还是要学会搞流量</p></blockquote><hr /><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><ul><li>这是一个问题排查列表，当你已经运转起来的时候，发现并没有成功的时候，就需要按照上面罗列的东西一一排查。</li><li>再一次强调流量的重要性，这个是整个流程里面最核心的部分。</li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第6课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;产品选错了&lt;br /&gt;
关键词选错了&lt;br /&gt;
语言问题&lt;br /&gt;
持续性的问题&lt;br /&gt;
网站问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|5.如何有效推广产品</title>
    <link href="https://imzhanghao.com/2020/05/21/make-money-online-5-affiliate-marketing-how-to-promote-products/"/>
    <id>https://imzhanghao.com/2020/05/21/make-money-online-5-affiliate-marketing-how-to-promote-products/</id>
    <published>2020-05-20T16:00:00.000Z</published>
    <updated>2020-05-20T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>免费的方式:SEO/内容营销/社交/博客论坛<br />付费的方式:广告/红人/联盟</p><a id="more"></a><h1 id="如何有效推广产品"><a class="markdownIt-Anchor" href="#如何有效推广产品"></a> 如何有效推广产品</h1><blockquote><p>电商核心的点:产品/渠道/流量/供应链，今天来讲如何获得流量。</p></blockquote><h2 id="seo"><a class="markdownIt-Anchor" href="#seo"></a> SEO</h2><ul><li>需要配合高质量的内容来做</li><li>优质的外链<ul><li>和你推广的产品相关的行业</li><li>对方的网站需要有一定的权威度</li></ul></li></ul><h2 id="内容营销"><a class="markdownIt-Anchor" href="#内容营销"></a> 内容营销</h2><ul><li>SEO肯定是要配合内容来做的。</li></ul><h2 id="广告"><a class="markdownIt-Anchor" href="#广告"></a> 广告</h2><ul><li>经典的付费推广模式</li><li>花钱就能买进来流量，重点要关注ROI</li><li>广告投放停止后，立刻就没有流量了。</li></ul><h2 id="红人"><a class="markdownIt-Anchor" href="#红人"></a> 红人</h2><ul><li>KOL&amp;KOC的粉丝能够带来高质量的用户</li></ul><h2 id="社交"><a class="markdownIt-Anchor" href="#社交"></a> 社交</h2><ul><li>Facebook：广告+Group，涨粉已经没有用。</li><li>Instagram：用户参与度高。</li><li>Pinterest：中产女性的用户，女性的产品可以在上面入驻</li><li>Youtube：亚马逊的商家</li></ul><h2 id="联盟"><a class="markdownIt-Anchor" href="#联盟"></a> 联盟</h2><ul><li>在联盟中进行推广，通过Lead来获取流量。</li></ul><h2 id="博客论坛"><a class="markdownIt-Anchor" href="#博客论坛"></a> 博客论坛</h2><ul><li>Quora</li><li>Redit</li></ul><hr /><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><ul><li>流量获取的方式大体分两种：付费核免费的，各种利弊要自己权衡。</li><li>硬广是最容易被人反感的，需要把广告和内容结合，才会有持续不断的流量。</li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第5课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;免费的方式:SEO/内容营销/社交/博客论坛&lt;br /&gt;
付费的方式:广告/红人/联盟&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|4.如何开展赚取佣金之路</title>
    <link href="https://imzhanghao.com/2020/05/20/make-money-online-4-affiliate-marketing-earning-commissions-website/"/>
    <id>https://imzhanghao.com/2020/05/20/make-money-online-4-affiliate-marketing-earning-commissions-website/</id>
    <published>2020-05-19T16:00:00.000Z</published>
    <updated>2020-05-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.自己建一个网站<br />shein/Anker<br />2.依托于第三方渠道<br />亚马逊联盟amazon associate/ShareAsale/Clickbank/Commission Junction(CJ)<br />3.总结</p><a id="more"></a><h1 id="如何开启赚取佣金之路"><a class="markdownIt-Anchor" href="#如何开启赚取佣金之路"></a> 如何开启赚取佣金之路</h1><h2 id="自己建一个网站"><a class="markdownIt-Anchor" href="#自己建一个网站"></a> 自己建一个网站</h2><h3 id="shein"><a class="markdownIt-Anchor" href="#shein"></a> shein</h3><ul><li>有自己的Affiliate联盟渠道</li><li>也有入驻其他的第三方渠道平台</li></ul><h3 id="anker"><a class="markdownIt-Anchor" href="#anker"></a> Anker</h3><ul><li>从Anker的独立站进去，进入到amazon，购买，amazon要给anker佣金。</li><li>如果客户通过amazon搜索进入Anker的店铺进行购买，anker需要给平台佣金。</li><li>开通独立站帮助Anker省钱</li></ul><h2 id="依托于第三方渠道"><a class="markdownIt-Anchor" href="#依托于第三方渠道"></a> 依托于第三方渠道</h2><h3 id="亚马逊联盟amazon-associate"><a class="markdownIt-Anchor" href="#亚马逊联盟amazon-associate"></a> 亚马逊联盟amazon associate</h3><h3 id="shareasale"><a class="markdownIt-Anchor" href="#shareasale"></a> ShareAsale</h3><ul><li>4000多件商品入住到网站，1000多件是平台独一无二的产品。</li><li>审核非常严格</li><li>优点<ul><li>付款比较可靠</li><li>反欺诈功能比较强大</li><li>费用比较低</li><li>Trackiing system是实时而且可靠</li><li>支付方式：直接付款和支票</li><li>有推荐奖励</li></ul></li><li>缺点<ul><li>不好管理，不能约束别人怎么推广你的商品。</li><li>没有PayPal支付款项</li></ul></li></ul><h3 id="clickbank"><a class="markdownIt-Anchor" href="#clickbank"></a> Clickbank</h3><ul><li>虚拟产品比较多，电子书，减肥类，工具类，还有会员等等</li><li>佣金很高，70%+。一本万利的产品，边际成本极低。</li><li>优点<ul><li>任何人都可以注册affiliates</li><li>佣金比例高</li><li>产品范围极广</li></ul></li><li>缺点<ul><li>退款比例太高：60天无条件退款</li><li>产品的竞争激烈(不适合新手)</li><li>客服回复慢，有时要一周。</li></ul></li></ul><h3 id="commission-junctioncj"><a class="markdownIt-Anchor" href="#commission-junctioncj"></a> Commission Junction(CJ)</h3><ul><li>优点<ul><li>免费加入</li><li>信誉高，付款客户服务及时</li><li>产品佣金率较高，部分商品超过50%</li></ul></li><li>缺点<ul><li>追踪系统不是实时的</li><li>账户会进入休眠状态(6个月无销售的话)</li><li>客服对接比较麻烦。只能用邮箱</li></ul></li></ul><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ul><li>大家要选择自己最适合的渠道进入推广/入驻</li><li>对于推广的人来说，要选择那些佣金比较高，渠道比较好推广的产品</li><li>如果是商家，要多做一些减少推广人员的工作的事情，比如你给 他们准备些banner、文案。</li></ul><blockquote><p>只要你拥有流量，那么你的变现方式就是多样的，联盟营销只是你获利的其中一个途径而已。</p></blockquote><blockquote><p>流量是最重要的</p></blockquote><blockquote><p>联盟营销避免了库存、客服等环节，专注到营销推广上，可以让自己轻装上阵，关注做好一件事，同时也规避了风险。</p></blockquote><hr /><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><ul><li>这些平台都是需要仔细研究的，自己要注册账户，实操起来。</li><li>流量的重要性是最重要的，不论使用的是免费的SEO方法还是还是付费的Media Buy手段，都需要定位好受众，靠内容去进行营销。</li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第4课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.自己建一个网站&lt;br /&gt;
shein/Anker&lt;br /&gt;
2.依托于第三方渠道&lt;br /&gt;
亚马逊联盟amazon associate/ShareAsale/Clickbank/Commission Junction(CJ)&lt;br /&gt;
3.总结&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
      <category term="ShareAsale" scheme="https://imzhanghao.com/tags/ShareAsale/"/>
    
      <category term="Clickbank" scheme="https://imzhanghao.com/tags/Clickbank/"/>
    
      <category term="Commission Junction(CJ)" scheme="https://imzhanghao.com/tags/Commission-Junction-CJ/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|3.Niche市场挖掘的实用工具介绍</title>
    <link href="https://imzhanghao.com/2020/05/19/make-money-online-3-affiliate-marketing-practical-tools-for-niche-market-mining/"/>
    <id>https://imzhanghao.com/2020/05/19/make-money-online-3-affiliate-marketing-practical-tools-for-niche-market-mining/</id>
    <published>2020-05-18T16:00:00.000Z</published>
    <updated>2020-05-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.如何挖掘Niche市场？<br />2.创作内容的工具有那些？<br />3.关键词的调研工具有哪些？</p><a id="more"></a><h1 id="niche市场挖掘的实用工具介绍"><a class="markdownIt-Anchor" href="#niche市场挖掘的实用工具介绍"></a> Niche市场挖掘的实用工具介绍</h1><h2 id="如何挖掘niche市场"><a class="markdownIt-Anchor" href="#如何挖掘niche市场"></a> 如何挖掘Niche市场？</h2><ul><li>产品挖掘的方法和工具很多，渠道很多。</li><li>选一个走上升趋势的产品</li><li>工具<ul><li>Google Trends</li><li>JungleScout：简称JS，对口亚马逊</li><li>Ecomhunt：产品的利润，Facebook广告，定位，受众</li><li>Findinche：免费，分析速卖通，对口Shopify。(每天的用量有限制)</li><li>Cool Hunt：记者&amp;时尚博主&amp;KOC，专业人士的推荐。</li><li>thisiswhyimbroke：ttps://www.thisiswhyimbroke.com/， 好玩有趣的网站</li></ul></li></ul><blockquote><p>产品挖掘好以后，需要靠内容和关键词来吸引流量。</p></blockquote><h2 id="创作内容的工具有那些"><a class="markdownIt-Anchor" href="#创作内容的工具有那些"></a> 创作内容的工具有那些？</h2><ul><li>有内容才能吸引用户，内容创作需要紧跟潮流。</li><li>工具<ul><li>Keyword Tool：<a href="https://keywordtool.io/">https://keywordtool.io/</a></li><li>AnswerThePublic： <a href="https://answerthepublic.com/">https://answerthepublic.com/</a></li><li>BuzzSumo：<a href="https://buzzsumo.com/">https://buzzsumo.com/</a> 社交内容抓去</li><li>portent： <a href="https://www.portent.com/tools/title-maker">https://www.portent.com/tools/title-maker</a></li></ul></li></ul><h2 id="关键词的调研工具有哪些"><a class="markdownIt-Anchor" href="#关键词的调研工具有哪些"></a> 关键词的调研工具有哪些？</h2><ul><li><a href="http://amz520.com">amz520.com</a> 上面提供的关键词工具</li><li>两个非常专业的关键词挖掘工具<ul><li>Ahrefs</li><li>Semrush</li></ul></li></ul><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><ul><li>这一节的内容开始到了实操的部分。</li><li>我们能够接触到的人和事其实都是很局限的，要能找到一般人找不到的市场和机会，就需要依靠工具，帮助我们开拓思路，并且去验证我们的想法，所以工具是必须要用的。好工具更是能够大大提升效率。</li><li>打Niche市场关键点就两个：<ul><li>1.选择一个上升趋势的产品。-- 需要使用第一小节的选品工具</li><li>2.吸引精准流量进行营销。--  用户永远都是因为内容才会来到你这里，所以什么样内容就能引来什么样的流量。需要实用二三小节的工具，进行内容创作。</li></ul></li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第3课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.如何挖掘Niche市场？&lt;br /&gt;
2.创作内容的工具有那些？&lt;br /&gt;
3.关键词的调研工具有哪些？&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
      <category term="Niche" scheme="https://imzhanghao.com/tags/Niche/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|2.如何挖掘到有竞争力的Niche市场</title>
    <link href="https://imzhanghao.com/2020/05/18/make-money-online-2-affiliate-marketing-how-to-choose-a-niche/"/>
    <id>https://imzhanghao.com/2020/05/18/make-money-online-2-affiliate-marketing-how-to-choose-a-niche/</id>
    <published>2020-05-17T16:00:00.000Z</published>
    <updated>2020-05-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>如何挖掘到有竞争力的Niche市场？<br />1.什么是Niche市场？<br />2.Niche市场要怎么选？<br />3.做Niche市场要考虑的点有那些？<br />4.选一个Niche市场要注意的原则有哪些？</p><a id="more"></a><h1 id="如何挖掘到有竞争力的niche市场"><a class="markdownIt-Anchor" href="#如何挖掘到有竞争力的niche市场"></a> 如何挖掘到有竞争力的Niche市场？</h1><h2 id="什么是niche市场"><a class="markdownIt-Anchor" href="#什么是niche市场"></a> 什么是Niche市场？</h2><ul><li>Niche中文是利基，Niche来源于法语，法国人信奉天主教，在建造房屋时，常常在外墙上凿出一个不大的神龛，以供放圣母玛利亚。它虽然小，但边界清晰，洞里乾坤，因而后来被引来形容大市场中的缝隙市场。<ul><li>niche利基就是市场方向， 一个细分化的市场</li><li>niche利基是一类人群，要购买特定产品的人群</li><li>niche就是解决问题的方法</li><li>Niche就是你的兴趣爱好或特长</li><li>Niche利基是一组和你推广产品相关的关键词</li></ul></li></ul><h2 id="niche市场要怎么选"><a class="markdownIt-Anchor" href="#niche市场要怎么选"></a> Niche市场要怎么选？</h2><ul><li>理想的利基市场具有的特征<ul><li>狭小的产品市场，宽广的地域市场。</li><li>具有持续发展的潜力。</li><li>市场过小、差异性较大，以至于强大的竞争者对该市场不屑一顾。</li><li>企业所具备的能力和资源与对这个市场提供优质的产品或服务相称。</li><li>企业已在客户中建立了良好的品牌声誉，能够以此抵挡强大竞争者的入侵。</li><li>这个行业最好还没有统治者。</li></ul></li><li>不断细分市场<ul><li>服装 --&gt; 韩版服装 --&gt; 韩版夏日服装 --&gt; 韩版夏日5～6岁服装</li><li>瑜伽服 --&gt; 孕妇瑜伽服 --&gt; 孕妇塑形瑜伽服 --&gt; 孕妇塑形速干瑜伽服</li></ul></li></ul><h2 id="做niche市场要考虑的点有那些"><a class="markdownIt-Anchor" href="#做niche市场要考虑的点有那些"></a> 做Niche市场要考虑的点有那些？</h2><ul><li>兴趣：没有兴趣是没法坚持下去的。</li><li>优势：区别于竞争对手，你的优势是什么？如果没有思考这块，你赢不了市场上已有的玩家。</li><li>受众：你的目标人群，这个是首先要考虑的。</li><li>话题：源源不断的能够产出内容的话题。</li></ul><h2 id="选一个niche市场要注意的原则有哪些"><a class="markdownIt-Anchor" href="#选一个niche市场要注意的原则有哪些"></a> 选一个Niche市场要注意的原则有哪些？</h2><ul><li>选择那些客单价比较高的产品</li><li>选择那些不需要做培育用户的产品</li><li>尽量选择标品</li><li>尽量选择刚需产品</li><li>尽量选择那些受季节性影响较小的产品</li><li>可持续的产品</li><li>一定市场的讨论，比如论坛，群</li><li>比较容易能再线上找到客户</li><li>产品有系列可以做延伸的</li></ul><hr /><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><ul><li>1.niche是在细分市场占山为王的机会。</li><li>2.寻找合适的Niche站，基本决定了成功的一半，前期的调研必须认真去做。</li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第2课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何挖掘到有竞争力的Niche市场？&lt;br /&gt;
1.什么是Niche市场？&lt;br /&gt;
2.Niche市场要怎么选？&lt;br /&gt;
3.做Niche市场要考虑的点有那些？&lt;br /&gt;
4.选一个Niche市场要注意的原则有哪些？&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
      <category term="Niche" scheme="https://imzhanghao.com/tags/Niche/"/>
    
  </entry>
  
  <entry>
    <title>联盟营销|1.联盟营销的工作原理</title>
    <link href="https://imzhanghao.com/2020/05/17/make-money-online-1-affiliate-marketing-process-and-working-principle/"/>
    <id>https://imzhanghao.com/2020/05/17/make-money-online-1-affiliate-marketing-process-and-working-principle/</id>
    <published>2020-05-16T16:00:00.000Z</published>
    <updated>2020-05-16T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>联盟营销的工作原理<br />1.什么是联盟营销<br />2.为什么选择联盟营销来赚钱<br />3.联盟营销的运作流程<br />4.联盟营销赚钱的案例</p><a id="more"></a><h1 id="联盟营销的工作原理"><a class="markdownIt-Anchor" href="#联盟营销的工作原理"></a> 联盟营销的工作原理</h1><h2 id="什么是联盟营销"><a class="markdownIt-Anchor" href="#什么是联盟营销"></a> 什么是联盟营销</h2><ul><li>Affiliate Marketing:通常是指网络联盟营销，其实是一种按营销效果付费的新型网络营销方式。</li></ul><blockquote><p>Affiliate marketing is a type of performance-based marketing in which a business rewards one or more affiliates for each visitor or customer brought by the affiliate’s own marketing efforts. The industry has four core players: the merchant (also known as ‘retailer’ or ‘brand’), the network (that contains offers for the affiliate to choose from and also takes care of the payments), the publisher (also known as ‘the affiliate’), and the customer.</p></blockquote><ul><li><p>商家利用网站联盟服务，扩展其线上及线下业务扩大销售空间和销售渠道，按照营销世纪效果支付费用。</p></li><li><p>affiliate marketing这种网络联盟营销模式大致有四个要素：</p><ul><li>Merchant:产品的广告商，有的也称之为advertiser</li><li>Publisher:发布商，也就是通常我们所说的网络加盟经销商。通常意义上讲，这个角色就是想要通过联盟营销赚钱的你。</li><li>Customer:顾客，这个不用解释了</li><li>Affiliate Network:联盟平台，通过这个将以上三者联系在一起</li></ul></li></ul><blockquote><p>简单来讲：商家给你一件商品，如果你把这个产品推广出去，并且有人下单付费了，那么你就可以赚到佣金。</p></blockquote><h2 id="为什么选择联盟营销来赚钱"><a class="markdownIt-Anchor" href="#为什么选择联盟营销来赚钱"></a> 为什么选择联盟营销来赚钱</h2><ul><li>起步门槛底，没有任何风险</li><li>没有库存，没有资金压力</li><li>不需要客服，维护起来方便</li><li>办公地点不限制</li><li>收益是可持续的。</li><li>潜力无限大</li></ul><blockquote><p>中国生产的货品，老外通过包装可以获得很大的溢价空间，我们其实可以取赚这部分钱。</p></blockquote><h2 id="联盟营销的运作流程"><a class="markdownIt-Anchor" href="#联盟营销的运作流程"></a> 联盟营销的运作流程</h2><ul><li>选取产品-&gt;进行推广-&gt;客户购买-&gt;获取佣金</li><li>基本过程：<ul><li>1.建好网站（利用网站推广联盟及其产品这是最常规的方法），然后至少加入1-3个联盟项目（对于新手，建议初期先加入一个，先熟悉一下），然后获得对方批准。</li><li>2.写几篇文章来介绍产品，就是product review</li><li>3.把得到批准的联盟链接加到产品上（这是一个很特殊的链接，包含你的ID，商家用来识别加盟商的）</li><li>4.吸引目标客户流量到你的网站上，使你的网站在google或主要搜索引擎中排名前列（在某些特定的关键词下）</li><li>5.客户在搜索引擎输入产品关键词，访问你的产品介绍页面</li><li>6.从你的联盟链接中购买产品</li><li>7.挣到佣金</li></ul></li></ul><h2 id="4联盟营销赚钱的案例"><a class="markdownIt-Anchor" href="#4联盟营销赚钱的案例"></a> 4.联盟营销赚钱的案例</h2><ul><li>网站类（博客,独立站）<ul><li>通过SEO倒流</li></ul></li><li>商城类(Shein， 北美省钱快报…)</li><li>工具类</li></ul><hr /><h2 id="我的理解"><a class="markdownIt-Anchor" href="#我的理解"></a> 我的理解</h2><ul><li>1.这是一门赚钱的生意<ul><li>联盟营销起源于亚马逊，他提高了营销的效率，在整个营销过程中的参与者都能够获得利润。</li></ul></li><li>2.这是一件有趣的事情<ul><li>中间有很多的套路，需要对于规则和人性有很深入的理解才能赚到钱，一旦掌握了这门技术，可以在多个领域里面应用。</li></ul></li></ul><blockquote><p>本文系顾小北老师《联盟营销网络赚钱系列》的第1课笔记。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;联盟营销的工作原理&lt;br /&gt;
1.什么是联盟营销&lt;br /&gt;
2.为什么选择联盟营销来赚钱&lt;br /&gt;
3.联盟营销的运作流程&lt;br /&gt;
4.联盟营销赚钱的案例&lt;/p&gt;
    
    </summary>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/categories/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
    
      <category term="联盟营销" scheme="https://imzhanghao.com/tags/%E8%81%94%E7%9B%9F%E8%90%A5%E9%94%80/"/>
    
  </entry>
  
  <entry>
    <title>五大经典算法|5.回溯法&amp;分支界定法</title>
    <link href="https://imzhanghao.com/2020/05/10/5-classic-algorithms-5-backtracking-branch-and-bound/"/>
    <id>https://imzhanghao.com/2020/05/10/5-classic-algorithms-5-backtracking-branch-and-bound/</id>
    <published>2020-05-09T16:00:00.000Z</published>
    <updated>2020-05-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个部分在我们的课程中主要是在树及图的深度广度搜索部分有涉及，另外迷宫问题求解也有涉及。</p><p>经典例题: 迷宫问题(maze problem),01背包问题,八皇后问题,幂集,子集和问题</p><a id="more"></a><h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2><p>回溯法</p><ul><li>回溯算法实际上一个类似枚举的搜索尝试过程，主要是在搜索尝试过程中寻找问题的解，当发现已不满足求解条件时，就“回溯”返回，尝试别的路径。</li><li>回溯法是一种选优搜索法，按选优条件向前搜索，以达到目标。但当探索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯法，而满足回溯条件的某个状态的点称为“回溯点”。</li><li>许多复杂的，规模较大的问题都可以使用回溯法，有“通用解题方法”的美称。</li></ul><p>分支界定法</p><ul><li>类似于回溯法，也是一种在问题的解空间树T上搜索问题解的算法。但在一般情况下，分支限界法与回溯法的求解目标不同。回溯法的求解目标是找出T中满足约束条件的所有解，而分支限界法的求解目标则是找出满足约束条件的一个解，或是在满足约束条件的解中找出使某一目标函数值达到极大或极小的解，即在某种意义下的最优解。</li></ul><h2 id="思想"><a class="markdownIt-Anchor" href="#思想"></a> 思想</h2><p>回溯法</p><ul><li>在包含问题的所有解的解空间树中，按照深度优先搜索的策略，从根结点出发深度探索解空间树。当探索到某一结点时，要先判断该结点是否包含问题的解，如果包含，就从该结点出发继续探索下去，如果该结点不包含问题的解，则逐层向其祖先结点回溯。(其实回溯法就是对隐式图的深度优先搜索算法)。</li><li>若用回溯法求问题的所有解时，要回溯到根，且根结点的所有可行的子树都要已被搜索遍才结束。</li><li>而若使用回溯法求任一个解时，只要搜索到问题的一个解就可以结束。</li></ul><p>分支界定法</p><p>分支搜索算法, 所谓“分支”就是采用广度优先的策略，依次搜索E-结点的所有分支，也就是所有相邻结点，抛弃不满足约束条件的结点，其余结点加入活结点表。然后从表中选择一个结点作为下一个E-结点，继续搜索。选择下一个E-结点的方式不同，则会有几种不同的分支搜索方式。</p><ul><li>FIFO搜索</li><li>LIFO搜索</li><li>优先队列式搜索</li></ul><h2 id="经典例题"><a class="markdownIt-Anchor" href="#经典例题"></a> 经典例题</h2><h3 id="迷宫问题maze-problem"><a class="markdownIt-Anchor" href="#迷宫问题maze-problem"></a> 迷宫问题(maze problem)</h3><p>给定一个迷宫，指明起点和终点，找出从起点出发到终点的有效可行路径，就是迷宫问题(maze problem)</p><p>迷宫可以以二维数组来存储表示。0表示通路，1表示障碍。注意这里规定移动可以从上、下、左、右四方方向移动。坐标以行和列表示，均从0开始，给定起点(0,0)和终点(4,4)，迷宫表示如下：</p><p>int maze[5][5]={</p><pre><code> &#123;0,0,0,0,0&#125;, &#123;0,1,0,1,0&#125;, &#123;0,1,1,0,0&#125;, &#123;0,1,1,0,1&#125;, &#123;0,0,0,0,0&#125;</code></pre><p>};</p><p>那么下面的迷宫就有两条可行的路径，分别为：</p><p>(1) (0,0) (0,1) (0,2) (0,3) (0,4) (1,4) (2,4) (2,3) (3,3) (4,3) (4,4)；</p><p>(2) (0,0) (1,0) (2,0) (3,0) (4,0) (4,1) (4,2) (4,3) (4,4) ；</p><p>可见，迷宫可行路径有可能是多条，且路径长度可能不一。</p><p>迷宫问题的求解可以抽象为连通图的遍历，因此主要有两种方法。</p><ul><li><p>第一种方法是：深度优先搜索(DFS)加回溯。</p><ul><li>优点：无需像广度优先搜索那样(BFS)记录前驱结点。</li><li>缺点：找到的第一条可行路径不一定是最短路径，如果需要找到最短路径，那么需要找出所有可行路径后，再逐一比较，求出最短路径。</li></ul></li><li><p>第二种方法是：广度优先搜索(BFS)。</p><ul><li>优点：找出的第一条路径就是最短路径。</li><li>缺点：需要记录结点的前驱结点，来形成路径。</li></ul></li></ul><details>  <summary>方法一：深度优先搜索(DFS)加回溯求解第一条可行路径</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">实现步骤</span><br><span class="line">(<span class="number">1</span>)给定起点和终点，判断二者的合法性，如果不合法，返回；</span><br><span class="line">(<span class="number">2</span>)如果起点和终点合法，将起点入栈；</span><br><span class="line">(<span class="number">3</span>)取栈顶元素，求其邻接的未被访问的无障碍结点。求如果有，记其为已访问，并入栈。</span><br><span class="line">   如果没有则回溯上一结点，具体做法是将当前栈顶元素出栈。</span><br><span class="line">   其中，求邻接无障碍结点的顺序可任意，本文实现是以上、右、下、左的顺序求解。</span><br><span class="line">(<span class="number">4</span>)重复步骤(<span class="number">3</span>)，直到栈空(没有找到可行路径)或者栈顶元素等于终点(找到第一条可行路径)</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="comment">//行与列</span></span><br><span class="line">    <span class="keyword">int</span> row;</span><br><span class="line">    <span class="keyword">int</span> col;</span><br><span class="line">    Point(<span class="keyword">int</span> x,<span class="keyword">int</span> y)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;row=x;</span><br><span class="line">        <span class="keyword">this</span>-&gt;col=y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> Point&amp; rhs)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;row!=rhs.row||<span class="keyword">this</span>-&gt;col!=rhs.col)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//func:获取相邻未被访问的节点</span></span><br><span class="line"><span class="comment">//para:mark:结点标记，point：结点，m：行，n：列</span></span><br><span class="line"><span class="comment">//ret:邻接未被访问的结点</span></span><br><span class="line"><span class="function">Point <span class="title">getAdjacentNotVisitedNode</span><span class="params">(<span class="keyword">bool</span>** mark,Point point,<span class="keyword">int</span> m,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">resP</span><span class="params">(<span class="number">-1</span>,<span class="number">-1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (point.row<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;mark[point.row<span class="number">-1</span>][point.col]==<span class="literal">false</span>)&#123;<span class="comment">//上节点满足条件</span></span><br><span class="line">        resP.row=point.row<span class="number">-1</span>;</span><br><span class="line">        resP.col=point.col;</span><br><span class="line">        <span class="keyword">return</span> resP;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (point.col+<span class="number">1</span>&lt;n&amp;&amp;mark[point.row][point.col+<span class="number">1</span>]==<span class="literal">false</span>)&#123;<span class="comment">//右节点满足条件</span></span><br><span class="line">        resP.row=point.row;</span><br><span class="line">        resP.col=point.col+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> resP;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (point.row+<span class="number">1</span>&lt;m&amp;&amp;mark[point.row+<span class="number">1</span>][point.col]==<span class="literal">false</span>)&#123;<span class="comment">//下节点满足条件</span></span><br><span class="line">        resP.row=point.row+<span class="number">1</span>;</span><br><span class="line">        resP.col=point.col;</span><br><span class="line">        <span class="keyword">return</span> resP;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (point.col<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;mark[point.row][point.col<span class="number">-1</span>]==<span class="literal">false</span>)&#123;<span class="comment">//左节点满足条件</span></span><br><span class="line">        resP.row=point.row;</span><br><span class="line">        resP.col=point.col<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> resP;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resP;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//func：给定二维迷宫，求可行路径</span></span><br><span class="line"><span class="comment">//para:maze：迷宫；m：行；n：列；startP：开始结点 endP：结束结点； pointStack：栈，存放路径结点</span></span><br><span class="line"><span class="comment">//ret:无</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mazePath</span><span class="params">(<span class="keyword">void</span>* maze,<span class="keyword">int</span> m,<span class="keyword">int</span> n,<span class="keyword">const</span> Point&amp; startP,Point endP,<span class="built_in">stack</span>&lt;Point&gt;&amp; pointStack)</span></span>&#123;</span><br><span class="line">    <span class="comment">//将给定的任意列数的二维数组还原为指针数组，以支持下标操作</span></span><br><span class="line">    <span class="keyword">int</span>** maze2d=<span class="keyword">new</span> <span class="keyword">int</span>*[m];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        maze2d[i]=(<span class="keyword">int</span>*)maze+i*n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (maze2d[startP.row][startP.col]==<span class="number">1</span>||maze2d[endP.row][endP.col]==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> ;                    <span class="comment">//输入错误</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//建立各个节点访问标记</span></span><br><span class="line">    <span class="keyword">bool</span>** mark=<span class="keyword">new</span> <span class="keyword">bool</span>*[m];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        mark[i]=<span class="keyword">new</span> <span class="keyword">bool</span>[n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;++j)&#123;</span><br><span class="line">            mark[i][j]=*((<span class="keyword">int</span>*)maze+i*n+j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将起点入栈</span></span><br><span class="line">    pointStack.push(startP);</span><br><span class="line">    mark[startP.row][startP.col]=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//栈不空并且栈顶元素不为结束节点</span></span><br><span class="line">    <span class="keyword">while</span>(pointStack.empty()==<span class="literal">false</span>&amp;&amp;pointStack.top()!=endP)&#123;</span><br><span class="line">        Point adjacentNotVisitedNode=getAdjacentNotVisitedNode(mark,pointStack.top(),m,n);</span><br><span class="line">        <span class="keyword">if</span> (adjacentNotVisitedNode.row==<span class="number">-1</span>)&#123; <span class="comment">//没有未被访问的相邻节点</span></span><br><span class="line">            pointStack.pop(); <span class="comment">//回溯到上一个节点</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//入栈并设置访问标志为true</span></span><br><span class="line">        mark[adjacentNotVisitedNode.row][adjacentNotVisitedNode.col]=<span class="literal">true</span>;</span><br><span class="line">        pointStack.push(adjacentNotVisitedNode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maze[<span class="number">5</span>][<span class="number">5</span>]=&#123;</span><br><span class="line">        &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function">Point <span class="title">startP</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">Point <span class="title">endP</span><span class="params">(<span class="number">4</span>,<span class="number">4</span>)</span></span>;</span><br><span class="line">    <span class="built_in">stack</span>&lt;Point&gt;  pointStack;</span><br><span class="line">    mazePath(maze,<span class="number">5</span>,<span class="number">5</span>,startP,endP,pointStack);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//没有找打可行解</span></span><br><span class="line">    <span class="keyword">if</span> (pointStack.empty()==<span class="literal">true</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;no right path&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">stack</span>&lt;Point&gt; tmpStack;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;path:&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>(pointStack.empty()==<span class="literal">false</span>)&#123;</span><br><span class="line">            tmpStack.push(pointStack.top());</span><br><span class="line">            pointStack.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (tmpStack.empty()==<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;(%d,%d) &quot;</span>,tmpStack.top().row,tmpStack.top().col);</span><br><span class="line">            tmpStack.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">程序输出：path:(<span class="number">0</span>,<span class="number">0</span>) (<span class="number">0</span>,<span class="number">1</span>) (<span class="number">0</span>,<span class="number">2</span>) (<span class="number">0</span>,<span class="number">3</span>) (<span class="number">0</span>,<span class="number">4</span>) (<span class="number">1</span>,<span class="number">4</span>) (<span class="number">2</span>,<span class="number">4</span>) (<span class="number">2</span>,<span class="number">3</span>) (<span class="number">3</span>,<span class="number">3</span>) (<span class="number">4</span>,<span class="number">3</span>) (<span class="number">4</span>,<span class="number">4</span>)。</span><br><span class="line"></span><br><span class="line">可见该条路径不是最短路径。因为程序中给定的迷宫还有一条更短路径为：(<span class="number">0</span>,<span class="number">0</span>) (<span class="number">1</span>,<span class="number">0</span>) (<span class="number">2</span>,<span class="number">0</span>) (<span class="number">3</span>,<span class="number">0</span>) (<span class="number">4</span>,<span class="number">0</span>) (<span class="number">4</span>,<span class="number">1</span>) (<span class="number">4</span>,<span class="number">2</span>) (<span class="number">4</span>,<span class="number">3</span>) (<span class="number">4</span>,<span class="number">4</span>) ；</span><br></pre></td></tr></table></figure></details><details>  <summary>方法二：改进深度优先搜索(DFS)加回溯求解最短路径</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">实现方法</span><br><span class="line">根据上面的方法我们可以在此基础之上进行改进，求出迷宫的最短的路径。具体做法如下：</span><br><span class="line">(<span class="number">1</span>)让已经访问过的结点可以再次被访问，具体做法是将mark标记改为当前结点到起点的距离，作为当前结点的权值。即从起点开始出发，向四个方向查找，每走一步，把走过的点的值+<span class="number">1</span>；</span><br><span class="line">(<span class="number">2</span>)寻找栈顶元素的下一个可访问的相邻结点，条件就是栈顶元素的权值加<span class="number">1</span>必须小于下一个节点的权值(墙不能走，未被访问的结点权值为<span class="number">0</span>)；</span><br><span class="line">(<span class="number">3</span>)如果访问到终点，记录当前最短的路径。如果不是，则继续寻找下一个结点；</span><br><span class="line">(<span class="number">4</span>)重复步骤(<span class="number">2</span>)和(<span class="number">3</span>)直到栈空(迷宫中所有符合条件的结点均被访问)。</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">    <span class="comment">//行与列</span></span><br><span class="line">    <span class="keyword">int</span> row;</span><br><span class="line">    <span class="keyword">int</span> col;</span><br><span class="line">    Point(<span class="keyword">int</span> x,<span class="keyword">int</span> y)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;row=x;</span><br><span class="line">        <span class="keyword">this</span>-&gt;col=y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> Point&amp; rhs)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;row!=rhs.row||<span class="keyword">this</span>-&gt;col!=rhs.col)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;row==rhs.row&amp;&amp;<span class="keyword">this</span>-&gt;col==rhs.col)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maze[<span class="number">5</span>][<span class="number">5</span>]=&#123;</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">-1</span>, <span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">-1</span>, <span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">-1</span>, <span class="number">0</span>,<span class="number">-1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//func:获取相邻未被访问的节点</span></span><br><span class="line"><span class="comment">//para:mark:结点标记；point：结点；m：行；n：列;endP:终点</span></span><br><span class="line"><span class="comment">//ret:邻接未被访问的结点</span></span><br><span class="line"><span class="function">Point <span class="title">getAdjacentNotVisitedNode</span><span class="params">(<span class="keyword">int</span>** mark,Point point,<span class="keyword">int</span> m,<span class="keyword">int</span> n,Point endP)</span></span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">resP</span><span class="params">(<span class="number">-1</span>,<span class="number">-1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (point.row<span class="number">-1</span>&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (mark[point.row<span class="number">-1</span>][point.col]==<span class="number">0</span>||mark[point.row][point.col]+<span class="number">1</span>&lt;mark[point.row<span class="number">-1</span>][point.col])&#123;<span class="comment">//上节点满足条件</span></span><br><span class="line">            resP.row=point.row<span class="number">-1</span>;</span><br><span class="line">            resP.col=point.col;</span><br><span class="line">            <span class="keyword">return</span> resP;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (point.col+<span class="number">1</span>&lt;n)&#123;</span><br><span class="line">        <span class="keyword">if</span> (mark[point.row][point.col+<span class="number">1</span>]==<span class="number">0</span>||mark[point.row][point.col]+<span class="number">1</span>&lt;mark[point.row][point.col+<span class="number">1</span>])&#123;<span class="comment">//右节点满足条件</span></span><br><span class="line">            resP.row=point.row;</span><br><span class="line">            resP.col=point.col+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> resP;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (point.row+<span class="number">1</span>&lt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span> (mark[point.row+<span class="number">1</span>][point.col]==<span class="number">0</span>||mark[point.row][point.col]+<span class="number">1</span>&lt;mark[point.row+<span class="number">1</span>][point.col])&#123;<span class="comment">//下节点满足条件</span></span><br><span class="line">            resP.row=point.row+<span class="number">1</span>;</span><br><span class="line">            resP.col=point.col;</span><br><span class="line">            <span class="keyword">return</span> resP;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (point.col<span class="number">-1</span>&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (mark[point.row][point.col<span class="number">-1</span>]==<span class="number">0</span>||mark[point.row][point.col]+<span class="number">1</span>&lt;mark[point.row][point.col<span class="number">-1</span>])&#123;<span class="comment">//左节点满足条件</span></span><br><span class="line">            resP.row=point.row;</span><br><span class="line">            resP.col=point.col<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">return</span> resP;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resP;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//func：给定二维迷宫，求可行路径</span></span><br><span class="line"><span class="comment">//para:maze：迷宫；m：行；n：列；startP：开始结点 endP：结束结点； pointStack：栈，存放路径结点;vecPath:存放最短路径</span></span><br><span class="line"><span class="comment">//ret:无</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mazePath</span><span class="params">(<span class="keyword">void</span>* maze,<span class="keyword">int</span> m,<span class="keyword">int</span> n, Point&amp; startP, Point endP,<span class="built_in">stack</span>&lt;Point&gt;&amp; pointStack,<span class="built_in">vector</span>&lt;Point&gt;&amp; vecPath)</span></span>&#123;</span><br><span class="line">    <span class="comment">//将给定的任意列数的二维数组还原为指针数组，以支持下标操作</span></span><br><span class="line">    <span class="keyword">int</span>** maze2d=<span class="keyword">new</span> <span class="keyword">int</span>*[m];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        maze2d[i]=(<span class="keyword">int</span>*)maze+i*n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (maze2d[startP.row][startP.col]==<span class="number">-1</span>||maze2d[endP.row][endP.col]==<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> ;                    <span class="comment">//输入错误</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//建立各个节点访问标记，表示结点到到起点的权值，也记录了起点到当前结点路径的长度</span></span><br><span class="line">    <span class="keyword">int</span>** mark=<span class="keyword">new</span> <span class="keyword">int</span>*[m];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        mark[i]=<span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;++j)&#123;</span><br><span class="line">            mark[i][j]=*((<span class="keyword">int</span>*)maze+i*n+j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (startP==endP)&#123;<span class="comment">//起点等于终点</span></span><br><span class="line">        vecPath.push_back(startP);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加一个终点的已被访问的前驱结点集</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; visitedEndPointPreNodeVec;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将起点入栈</span></span><br><span class="line">    pointStack.push(startP);</span><br><span class="line">    mark[startP.row][startP.col]=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//栈不空并且栈顶元素不为结束节点</span></span><br><span class="line">    <span class="keyword">while</span>(pointStack.empty()==<span class="literal">false</span>)&#123;</span><br><span class="line">        Point adjacentNotVisitedNode=getAdjacentNotVisitedNode(mark,pointStack.top(),m,n,endP);</span><br><span class="line">        <span class="keyword">if</span> (adjacentNotVisitedNode.row==<span class="number">-1</span>)&#123; <span class="comment">//没有符合条件的相邻节点</span></span><br><span class="line">            pointStack.pop(); <span class="comment">//回溯到上一个节点</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (adjacentNotVisitedNode==endP)&#123;<span class="comment">//以较短的路劲，找到了终点,</span></span><br><span class="line">            mark[adjacentNotVisitedNode.row][adjacentNotVisitedNode.col]=mark[pointStack.top().row][pointStack.top().col]+<span class="number">1</span>;</span><br><span class="line">            pointStack.push(endP);</span><br><span class="line">            <span class="built_in">stack</span>&lt;Point&gt; pointStackTemp=pointStack;</span><br><span class="line">            vecPath.clear();</span><br><span class="line">            <span class="keyword">while</span> (pointStackTemp.empty()==<span class="literal">false</span>)&#123;</span><br><span class="line">                vecPath.push_back(pointStackTemp.top());<span class="comment">//这里vecPath存放的是逆序路径</span></span><br><span class="line">                pointStackTemp.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            pointStack.pop(); <span class="comment">//将终点出栈</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//入栈并设置访问标志为true</span></span><br><span class="line">        mark[adjacentNotVisitedNode.row][adjacentNotVisitedNode.col]=mark[pointStack.top().row][pointStack.top().col]+<span class="number">1</span>;</span><br><span class="line">        pointStack.push(adjacentNotVisitedNode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">startP</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">Point <span class="title">endP</span><span class="params">(<span class="number">4</span>,<span class="number">4</span>)</span></span>;</span><br><span class="line">    <span class="built_in">stack</span>&lt;Point&gt;  pointStack;</span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; vecPath;</span><br><span class="line">    mazePath(maze,<span class="number">5</span>,<span class="number">5</span>,startP,endP,pointStack,vecPath);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (vecPath.empty()==<span class="literal">true</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;no right path&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;shortest path:&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i=vecPath.rbegin();i!=vecPath.rend();++i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;(%d,%d) &quot;</span>,i-&gt;row,i-&gt;col);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><details>  <summary>方法三: 广度优先搜索(BFS)求解迷宫的最短路径</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">广度优先搜索的优点是找出的第一条路径就是最短路径，所以经常用来搜索最短路径，思路和图的广度优先遍历一样，需要借助于队列。</span><br><span class="line">具体步骤：</span><br><span class="line">(<span class="number">1</span>)从入口元素开始，判断它上下左右的邻边元素是否满足条件，如果满足条件就入队列；</span><br><span class="line">(<span class="number">2</span>)取队首元素并出队列。寻找其相邻未被访问的元素，将其如队列并标记元素的前驱节点为队首元素。</span><br><span class="line">(<span class="number">3</span>)重复步骤(<span class="number">2</span>)，直到队列为空(没有找到可行路径)或者找到了终点。最后从终点开始，根据节点的前驱节点找出一条最短的可行路径。</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">    <span class="comment">//行与列</span></span><br><span class="line">    <span class="keyword">int</span> row;</span><br><span class="line">    <span class="keyword">int</span> col;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认构造函数</span></span><br><span class="line">    Point()&#123;</span><br><span class="line">        row=col=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Point(<span class="keyword">int</span> x,<span class="keyword">int</span> y)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;row=x;</span><br><span class="line">        <span class="keyword">this</span>-&gt;col=y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;row==rhs.row&amp;&amp;<span class="keyword">this</span>-&gt;col==rhs.col)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maze[<span class="number">5</span>][<span class="number">5</span>]=&#123;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mazePath</span><span class="params">(<span class="keyword">void</span>* maze,<span class="keyword">int</span> m,<span class="keyword">int</span> n, Point&amp; startP, Point endP,<span class="built_in">vector</span>&lt;Point&gt;&amp; shortestPath)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>** maze2d=<span class="keyword">new</span> <span class="keyword">int</span>*[m];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        maze2d[i]=(<span class="keyword">int</span>*)maze+i*n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (maze2d[startP.row][startP.col]==<span class="number">1</span>||maze2d[startP.row][startP.col]==<span class="number">1</span>) <span class="keyword">return</span> ; <span class="comment">//输入错误</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (startP==endP)&#123; <span class="comment">//起点即终点</span></span><br><span class="line">        shortestPath.push_back(startP);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mark标记每一个节点的前驱节点，如果没有则为(-1，-1)，如果有，则表示已经被访问</span></span><br><span class="line">    Point** mark=<span class="keyword">new</span> Point*[m];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        mark[i]=<span class="keyword">new</span> Point[n];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;Point&gt; queuePoint;</span><br><span class="line">    queuePoint.push(startP);</span><br><span class="line">    <span class="comment">//将起点的前驱节点设置为自己</span></span><br><span class="line">    mark[startP.row][startP.col]=startP;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(queuePoint.empty()==<span class="literal">false</span>)&#123;</span><br><span class="line">        Point pointFront=queuePoint.front();</span><br><span class="line">        queuePoint.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pointFront.row<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; maze2d[pointFront.row<span class="number">-1</span>][pointFront.col]==<span class="number">0</span>)&#123;<span class="comment">//上节点连通</span></span><br><span class="line">            <span class="keyword">if</span> (mark[pointFront.row<span class="number">-1</span>][pointFront.col]==Point())&#123;<span class="comment">//上节点未被访问，满足条件，如队列</span></span><br><span class="line">                mark[pointFront.row<span class="number">-1</span>][pointFront.col]=pointFront;</span><br><span class="line">                queuePoint.push(Point(pointFront.row<span class="number">-1</span>,pointFront.col)); <span class="comment">//入栈</span></span><br><span class="line">                <span class="keyword">if</span> (Point(pointFront.row<span class="number">-1</span>,pointFront.col)==endP)&#123; <span class="comment">//找到终点</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pointFront.col+<span class="number">1</span>&lt;n &amp;&amp; maze2d[pointFront.row][pointFront.col+<span class="number">1</span>]==<span class="number">0</span>)&#123;<span class="comment">//右节点连通</span></span><br><span class="line">            <span class="keyword">if</span> (mark[pointFront.row][pointFront.col+<span class="number">1</span>]==Point())&#123;<span class="comment">//右节点未被访问，满足条件，如队列</span></span><br><span class="line">                mark[pointFront.row][pointFront.col+<span class="number">1</span>]=pointFront;</span><br><span class="line">                queuePoint.push(Point(pointFront.row,pointFront.col+<span class="number">1</span>));    <span class="comment">//入栈</span></span><br><span class="line">                <span class="keyword">if</span> (Point(pointFront.row,pointFront.col+<span class="number">1</span>)==endP)&#123; <span class="comment">//找到终点</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pointFront.row+<span class="number">1</span>&lt;m &amp;&amp; maze2d[pointFront.row+<span class="number">1</span>][pointFront.col]==<span class="number">0</span>)&#123;<span class="comment">//下节点连通</span></span><br><span class="line">            <span class="keyword">if</span> (mark[pointFront.row+<span class="number">1</span>][pointFront.col]==Point())&#123;<span class="comment">//下节点未被访问，满足条件，如队列</span></span><br><span class="line">                mark[pointFront.row+<span class="number">1</span>][pointFront.col]=pointFront;</span><br><span class="line">                queuePoint.push(Point(pointFront.row+<span class="number">1</span>,pointFront.col));    <span class="comment">//入栈</span></span><br><span class="line">                <span class="keyword">if</span> (Point(pointFront.row+<span class="number">1</span>,pointFront.col)==endP)&#123; <span class="comment">//找到终点</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pointFront.col<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; maze2d[pointFront.row][pointFront.col<span class="number">-1</span>]==<span class="number">0</span>)&#123;<span class="comment">//左节点连通</span></span><br><span class="line">            <span class="keyword">if</span> (mark[pointFront.row][pointFront.col<span class="number">-1</span>]==Point())&#123;<span class="comment">//上节点未被访问，满足条件，如队列</span></span><br><span class="line">                mark[pointFront.row][pointFront.col<span class="number">-1</span>]=pointFront;</span><br><span class="line">                queuePoint.push(Point(pointFront.row,pointFront.col<span class="number">-1</span>));    <span class="comment">//入栈</span></span><br><span class="line">                <span class="keyword">if</span> (Point(pointFront.row,pointFront.col<span class="number">-1</span>)==endP)&#123; <span class="comment">//找到终点</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (queuePoint.empty()==<span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> row=endP.row;</span><br><span class="line">        <span class="keyword">int</span> col=endP.col;</span><br><span class="line">        shortestPath.push_back(endP);</span><br><span class="line">        <span class="keyword">while</span>(!(mark[row][col]==startP))&#123;</span><br><span class="line">            shortestPath.push_back(mark[row][col]);</span><br><span class="line">            row=mark[row][col].row;</span><br><span class="line">            col=mark[row][col].col;</span><br><span class="line">        &#125;</span><br><span class="line">        shortestPath.push_back(startP);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">startP</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">Point <span class="title">endP</span><span class="params">(<span class="number">4</span>,<span class="number">4</span>)</span></span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; vecPath;</span><br><span class="line">    mazePath(maze,<span class="number">5</span>,<span class="number">5</span>,startP,endP,vecPath);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (vecPath.empty()==<span class="literal">true</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;no right path&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;shortest path:&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i=vecPath.rbegin();i!=vecPath.rend();++i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;(%d,%d) &quot;</span>,i-&gt;row,i-&gt;col);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h3 id="01背包问题"><a class="markdownIt-Anchor" href="#01背包问题"></a> 01背包问题</h3><p>给定N中物品和一个背包。物品i的重量是Wi,其价值位Vi ，背包的容量为C。问应该如何选择装入背包的物品，使得转入背包的物品的总价值为最大？？</p><p>0-1背包是子集合选取问题,一般情况下0-1背包是个NP问题.</p><ul><li>第一步　确定解空间：装入哪几种物品.</li><li>第二步　确定易于搜索的解空间结构： 可以用数组p,w分别表示各个物品价值和重量。用数组x记录，是否选种物品.</li><li>第三步　以深度优先的方式搜索解空间，并在搜索的过程中剪枝</li></ul><p>我们同样可以使用子集合问题的框架来写我们的代码，和前面子集和数问题相差无几。</p><details>  <summary>动态规划解决01背包问题的C语言实现</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Knapsack</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Knapsack(<span class="keyword">double</span> *pp,<span class="keyword">double</span> *ww,<span class="keyword">int</span> nn,<span class="keyword">double</span> cc)&#123;</span><br><span class="line">       p = pp;</span><br><span class="line">       w = ww;</span><br><span class="line">       n = nn;</span><br><span class="line">       c = cc;</span><br><span class="line">       cw = <span class="number">0</span>;</span><br><span class="line">       cp = <span class="number">0</span>;</span><br><span class="line">       bestp = <span class="number">0</span>;</span><br><span class="line">       x = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">       cx = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">knapsack</span><span class="params">()</span></span>&#123;</span><br><span class="line">       backtrack(<span class="number">0</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;<span class="comment">//回溯法</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; n)&#123;</span><br><span class="line">            <span class="keyword">if</span> (cp &gt; bestp)&#123;</span><br><span class="line">               bestp = cp;</span><br><span class="line">               <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">             x[i] = cx[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cw + w[i] &lt;= c)&#123;<span class="comment">//搜索右子树</span></span><br><span class="line">          cw += w[i];</span><br><span class="line">          cp += p[i];</span><br><span class="line">          cx[i] = <span class="number">1</span>;</span><br><span class="line">          backtrack(i+<span class="number">1</span>);</span><br><span class="line">          cw -= w[i];</span><br><span class="line">          cp -= p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cx[i] = <span class="number">0</span>;</span><br><span class="line">        backtrack(i+<span class="number">1</span>);<span class="comment">//搜索左子树</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printResult</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;可以装入的最大价值为:&quot;</span> &lt;&lt; bestp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;装入的物品依次为:&quot;</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">         <span class="keyword">if</span> (x[i] == <span class="number">1</span>)</span><br><span class="line">             <span class="built_in">cout</span> &lt;&lt; i+<span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">   <span class="keyword">double</span> *p,*w;</span><br><span class="line">   <span class="keyword">int</span> n;</span><br><span class="line">   <span class="keyword">double</span> c;</span><br><span class="line">   <span class="keyword">double</span> bestp,cp,cw;<span class="comment">//最大价值，当前价值，当前重量</span></span><br><span class="line">   <span class="keyword">int</span> *x,*cx;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">　　<span class="keyword">double</span> p[<span class="number">4</span>] = &#123;<span class="number">9</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">4</span>&#125;,w[<span class="number">4</span>] = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    Knapsack ks = Knapsack(p,w,<span class="number">4</span>,<span class="number">7</span>);</span><br><span class="line">    ks.knapsack();</span><br><span class="line">　　ks.printResult();</span><br><span class="line">　　<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="八皇后问题"><a class="markdownIt-Anchor" href="#八皇后问题"></a> 八皇后问题</h3><p>八皇后问题是一个古老而著名的问题，是回溯算法的典型例题。该问题是十九世纪著名的数学家高斯1850年提出：在8X8格的国际象棋上摆放八个皇后，使其不能互相攻击，即任意两个皇后都不能处于同一行、同一列或同一斜线上.</p><ul><li>第一步 定义问题的解空间: 这个问题解空间就是8个皇后在棋盘中的位置.</li><li>第二步 定义解空间的结构: 可以使用8*8的数组，但由于任意两个皇后都不能在同行，我们可以用数组下标表示行，数组的值来表示皇后放的列，故可以简化为一个以维数组x[9]。</li><li>第三步 以深度优先的方式搜索解空间，并在搜索过程使用剪枝函数来剪枝</li></ul><details>  <summary>动态规划解决八皇后问题的C语言实现</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x[<span class="number">9</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">           <span class="built_in">cout</span> &lt;&lt; x[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">canPlace</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; k; i++)&#123;</span><br><span class="line">            <span class="comment">//判断处于同一列或同一斜线</span></span><br><span class="line">       <span class="keyword">if</span> (x[i] == x[k] || <span class="built_in">abs</span>(k-i) == <span class="built_in">abs</span>(x[k]-x[i]))</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queen</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">8</span>)&#123;</span><br><span class="line">        print();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">8</span>; j++)&#123;</span><br><span class="line">      x[i] = j;</span><br><span class="line">      <span class="keyword">if</span> (canPlace(i)) queen(i+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  queen(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="幂集"><a class="markdownIt-Anchor" href="#幂集"></a> 幂集</h3><p>幂集的每个元素是一个集合或者是一个空集。拿集合{A, B, C}来举例，这个集合的幂集为{ {A, B, C}, {A , B}, {A , C}, {B, C},{A}, {B}, {C}, {}}。可以看出分为3中状态:</p><ul><li>1.空集</li><li>2.是集合中的一个元素组成的集合</li><li>3.是集合中的任意两个元素组成的集合</li><li>4.是集合中的三个元素组成的集合，就是它本身</li></ul><p>算法思想，集合中每个元素有两种状态，在幂集元素的集合中，不在集合中。可以用一颗二叉树形象的表示回溯遍历的过程</p><details>  <summary>动态规划解决幂集问题的C语言实现</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">char *result;</span><br><span class="line">char *element;</span><br><span class="line">void OutputPowerSet(int len)&#123; &#x2F;&#x2F;输出幂集中的元素</span><br><span class="line">  cout&lt;&lt;&quot;&#123; &quot;;</span><br><span class="line">  int eln &#x3D; 0;</span><br><span class="line">  for (int i &#x3D; 0; i &lt; len; i++)&#123;</span><br><span class="line">    if (result[i] !&#x3D; 0)</span><br><span class="line">    &#123;</span><br><span class="line">      if (eln &gt; 0)</span><br><span class="line">        cout&lt;&lt;&quot;, &quot;&lt;&lt;result[i];</span><br><span class="line">      else</span><br><span class="line">        cout&lt;&lt;result[i];</span><br><span class="line">      eln++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;&quot; &#125;; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">void PowerSet(int k,int n)&#123;</span><br><span class="line">  if (k &gt; n)</span><br><span class="line">  &#123;</span><br><span class="line">    OutputPowerSet(n);</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    result[k-1] &#x3D; element[k-1]; &#x2F;&#x2F;元素在幂集元素集合中</span><br><span class="line">    PowerSet(k+1,n);</span><br><span class="line">    result[k-1] &#x3D; 0;&#x2F;&#x2F;元素不在幂集元素集合中</span><br><span class="line">    PowerSet(k+1,n);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">  int num;</span><br><span class="line">  cin&gt;&gt;num;    &#x2F;&#x2F;输出要求幂集的初始集合元素个数</span><br><span class="line">  element &#x3D; new char[num];</span><br><span class="line">  result &#x3D; new char[num];</span><br><span class="line">  int index &#x3D; 0;</span><br><span class="line">  while(index &lt; num)&#123;</span><br><span class="line">    cin&gt;&gt;element[index];  &#x2F;&#x2F;输入集合元素，这里用字符代替</span><br><span class="line">    index++;</span><br><span class="line">  &#125;</span><br><span class="line">  PowerSet(1,num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="子集和问题"><a class="markdownIt-Anchor" href="#子集和问题"></a> 子集和问题</h3><p>存在S={x1,x2,…xn}.是一个正整数的集合，c是一个正整数。子集合问题判定是否存在一个子集S1(S1为S的子集)，使得该子集的和为c.</p><p>例子：S={1,3,8,9},C=9,则解为:s1={1,8},s2={9}</p><p>可以看出此算法的解空间为子集树，所以利用前面讲的模板，可以得到哦以下程序</p><details>  <summary>动态规划解决子集和问题的C语言实现</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">bool next(int a[],int n, int i, int s, int r, int c, int bextx[], int x[])</span><br><span class="line">&#123;</span><br><span class="line">  int j;</span><br><span class="line">  if (i &gt;&#x3D; n) &#123;&#x2F;&#x2F;到达叶子结点</span><br><span class="line">    if (s &#x3D;&#x3D; c) &#123; &#x2F;&#x2F;找到一个子集</span><br><span class="line">      for (int k&#x3D;0;k&lt;n;k++) &#123;&#x2F;&#x2F;记录下子集</span><br><span class="line">        bextx[k] &#x3D; x[k];</span><br><span class="line">      &#125;</span><br><span class="line">      return true;</span><br><span class="line">    &#125; else &#123;&#x2F;&#x2F;没有找到符合的子集</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  if (s &gt;c || s+r &lt;c) &#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">  x[i] &#x3D; 1;</span><br><span class="line">  if (next(a, n, i+1, s+a[i], r-a[i], c, bextx, x)) &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line">  x[i] &#x3D; 0;</span><br><span class="line">  return next(a, n, i+1, s, r-a[i], c, bextx, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool solve(int a[],int n,int c,int bextx[]) &#123;</span><br><span class="line">  &#x2F;&#x2F;int *bextx &#x3D; new int[n];</span><br><span class="line">  int *x &#x3D; new int[n];</span><br><span class="line">  int r &#x3D; 0;</span><br><span class="line">  for (int i&#x3D;0; i&lt;n; i++) &#123;</span><br><span class="line">    r +&#x3D; a[i];</span><br><span class="line">  &#125;</span><br><span class="line">  return  next(a, n, 0, 0, r, c, bextx, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">  int a[]&#x3D;&#123;1,2,6,8&#125;;</span><br><span class="line">  int n&#x3D;4;</span><br><span class="line">  int c&#x3D;8;</span><br><span class="line">  int *bextx &#x3D; new int[n];</span><br><span class="line">  if (solve(a,n,c,bextx)) &#123;</span><br><span class="line">    printf(&quot;找到子集： \n\r&quot;);</span><br><span class="line">    for (int i&#x3D;0;i&lt;n;i++) &#123;</span><br><span class="line">      printf(&quot;%d &quot;,bextx[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    printf(&quot;没有子集&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个部分在我们的课程中主要是在树及图的深度广度搜索部分有涉及，另外迷宫问题求解也有涉及。&lt;/p&gt;
&lt;p&gt;经典例题: 迷宫问题(maze problem),01背包问题,八皇后问题,幂集,子集和问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="五大经典算法" scheme="https://imzhanghao.com/categories/%E4%BA%94%E5%A4%A7%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="回溯法" scheme="https://imzhanghao.com/tags/%E5%9B%9E%E6%BA%AF%E6%B3%95/"/>
    
      <category term="分支界定法" scheme="https://imzhanghao.com/tags/%E5%88%86%E6%94%AF%E7%95%8C%E5%AE%9A%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>五大经典算法|4.动态规划</title>
    <link href="https://imzhanghao.com/2020/04/25/5-classic-algorithms-4-dynamic-programming/"/>
    <id>https://imzhanghao.com/2020/04/25/5-classic-algorithms-4-dynamic-programming/</id>
    <published>2020-04-24T16:00:00.000Z</published>
    <updated>2020-04-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>动态规划是通过拆分问题，定义问题状态和状态之间的关系，使得问题能够以递推(或者说分治)的方式去解决。</p><p>经典例题: 最长公共子串LCS, 最长递增子序列LIS, 最大连续子序列之和, 01背包问题, 青蛙跳台阶问题, 收集苹果, 数塔取数问题, 免费馅饼问题</p><a id="more"></a><h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2><p>dynamic programming is a method for solving a complex problem by breaking it down into a collection of simpler subproblems.</p><p>动态规划是通过拆分问题，定义问题状态和状态之间的关系，使得问题能够以递推(或者说分治)的方式去解决。</p><h2 id="思想"><a class="markdownIt-Anchor" href="#思想"></a> 思想</h2><p>动态规划算法的有效性依赖于待求解问题本身具有的两个重要性质：最优子结构性质和子问题重叠性质。</p><ul><li>1.最优子结构性质。如果问题的最优解所包含的子问题的解也是最优的，我们就称该问题具有最优子结构性质(即满足最优化原理)。最优子结构性质为动态规划算法解决问题提供了重要线索。</li><li>2.子问题重叠性质。子问题重叠性质是指在用递归算法自顶向下对问题进行求解时，每次产生的子问题并不总是新问题，有些子问题会被重复计算多次。动态规划算法正是利用了这种子问题的重叠性质，对每一个子问题只计算一次，然后将其计算结果保存在一个表格中，当再次需要计算已经计算过的子问题时，只是在表格中简 单地查看一下结果，从而获得较高的解题效率。</li></ul><p>当我们已经确定待解决的问题需要用动态规划算法求解时，通常可以按照以下步骤设计动态规划算法：</p><ul><li>1.分析问题的最优解，找出最优解的性质，并刻画其结构特征；</li><li>2.递归地定义最优值；</li><li>3.采用自底向上的方式计算问题的最优值；</li><li>4.根据计算最优值时得到的信息，构造最优解。</li></ul><p>1 ～ 3 步是动态规划算法解决问题的基本步骤，在只需要计算最优值的问题中，完成这三个基本步骤就可以了。如果问题需要构造最优解，还要执行第 4 步； 此时，在第 3 步通常需要记录更多的信息，以便在步骤 4 中，有足够的信息快速地构造出最优解。</p><h2 id="经典例题"><a class="markdownIt-Anchor" href="#经典例题"></a> 经典例题</h2><h3 id="最长公共子串lcs"><a class="markdownIt-Anchor" href="#最长公共子串lcs"></a> 最长公共子串(LCS)</h3><p>一个序列 S,如果分别是两个或多个已知序列的子序列，且是所有符合此条件序列中最长的，则 S 称为已知序列的最长公共子序列。</p><p>转移方程：</p><p>dp[i,j] = 0                               IF:   i=0 || j=0</p><p>dp[i,j] = dp[i-1][j-1]+1                  IF:   i&gt;0,j&gt;0, a[i] = b[j]</p><p>dp[i,j] = max(dp[i-1][j],dp[i][j-1])      IF:   i&gt;0,j&gt;0, a[i] != b[j]</p><details>  <summary>动态规划解决最长公共子串问题的C语言实现代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 6</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printLSC</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j,<span class="keyword">char</span> *a, <span class="keyword">int</span> status[][N])</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (i == <span class="number">0</span> || j== <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">if</span> (status[i][j] == <span class="number">0</span>)&#123;</span><br><span class="line">    printLSC(i<span class="number">-1</span>,j<span class="number">-1</span>,a,status);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (status[i][j] == <span class="number">1</span>)</span><br><span class="line">      printLSC(i<span class="number">-1</span>,j,a,status);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      printLSC(i,j<span class="number">-1</span>,a,status);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">char</span> a[] = &#123;<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> b[] = &#123;<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;A&#x27;</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> status[M][N]; <span class="comment">//保存状态</span></span><br><span class="line">  <span class="keyword">int</span> dp[M][N];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; N; j++) &#123;</span><br><span class="line">      dp[i][j] = <span class="number">0</span>;</span><br><span class="line">      status[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; M; i++)</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt; N; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(a[i] == b[j])&#123;</span><br><span class="line">        dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">        status[i][j] = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(dp[i][j<span class="number">-1</span>] &gt;= dp[i<span class="number">-1</span>][j])&#123;</span><br><span class="line">        dp[i][j] = dp[i][j<span class="number">-1</span>];</span><br><span class="line">        status[i][j] = <span class="number">2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        dp[i][j] = dp[i<span class="number">-1</span>][j];</span><br><span class="line">        status[i][j] = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;最大长度：%d&quot;</span>,dp[M<span class="number">-1</span>][N<span class="number">-1</span>]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  printLSC(M<span class="number">-1</span>,N<span class="number">-1</span>,a,status);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="最长递增子序列lis"><a class="markdownIt-Anchor" href="#最长递增子序列lis"></a> 最长递增子序列(LIS)</h3><p>给定一个序列 An = a1 ,a2 ,  … , an,找出最长的子序列使得对所有 i &lt; j,ai &lt; aj 。</p><p>转移方程：b[k]=max(max(b[j]|a[j]&lt;a[k],j&lt;k)+1,1);</p><details>  <summary>动态规划解决最长递增子序列问题的C语言实现代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j,length,max=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> a[] = &#123;</span><br><span class="line">    <span class="number">1</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">-3</span>,<span class="number">4</span>,<span class="number">-5</span>,<span class="number">6</span>,<span class="number">-7</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">int</span> *b;</span><br><span class="line">  b = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(a));</span><br><span class="line">  length = <span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; length; i++)&#123;</span><br><span class="line">    b[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(a[i] &gt; a[j] &amp;&amp; b[i] &lt;= b[j])&#123;</span><br><span class="line">        b[i] = b[j] + <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">    <span class="keyword">if</span>(b[i] &gt; max)</span><br><span class="line">      max = b[i];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h3 id="最大连续子序列之和"><a class="markdownIt-Anchor" href="#最大连续子序列之和"></a> 最大连续子序列之和</h3><p>给定K个整数的序列{ N1, N2, …, NK }，其任意连续子序列可表示为{ Ni, Ni+1, …, Nj }，其中 1 &lt;= i &lt;= j &lt;= K。最大连续子序列是所有连续子序中元素和最大的一个， 例如给定序列{ -2, 11, -4, 13, -5, -2 }，其最大连续子序列为{ 11, -4, 13 }，最大和为20。</p><p>状态转移方程： sum[i]=max(sum[i-1]+a[i],a[i])</p><details>  <summary>动态规划解决最大连续子序列问题的C语言实现代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="keyword">int</span> i,sum = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> data[] = &#123;</span><br><span class="line">    <span class="number">1</span>,<span class="number">-2</span>,<span class="number">3</span>,<span class="number">-1</span>,<span class="number">7</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(data)/<span class="keyword">sizeof</span>(data[<span class="number">0</span>]); i++)&#123;</span><br><span class="line">    sum += data[i];</span><br><span class="line">    <span class="keyword">if</span>(sum &gt; max)</span><br><span class="line">      max = sum;</span><br><span class="line">    <span class="keyword">if</span>(sum &lt; <span class="number">0</span>)</span><br><span class="line">      sum = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h3 id="01背包问题"><a class="markdownIt-Anchor" href="#01背包问题"></a> 01背包问题</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。</p><p>转移方程：dp[i][j] = max(dp[i-1][j],dp[i-1][j-weight[i]] + value[i]</p><details>  <summary>动态规划解决01背包问题的C语言实现代码</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;stdio.h&quot;</span><br><span class="line">#define max(a,b) ((a)&gt;(b)?(a):(b))</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  int v &#x3D; 10 ;</span><br><span class="line">  int n &#x3D; 5 ;</span><br><span class="line"></span><br><span class="line">  int value[] &#x3D; &#123;0, 8 , 10 , 4 , 5 , 5&#125;;</span><br><span class="line">  int weight[] &#x3D; &#123;0, 6 , 4 , 2 , 4 , 3&#125;;</span><br><span class="line">  int i,j;</span><br><span class="line">  int dp[n+1][v+1];</span><br><span class="line">  for(i &#x3D; 0; i &lt; n+1; i++)</span><br><span class="line">    for(j &#x3D; 0; j &lt; v+1; j++)</span><br><span class="line">      dp[i][j] &#x3D; 0;</span><br><span class="line"></span><br><span class="line">  for (i &#x3D; 1; i &lt;&#x3D; n; i++)&#123;</span><br><span class="line">    for (j &#x3D; 1; j &lt;&#x3D; v; j++)&#123;</span><br><span class="line">      if (j &gt;&#x3D; weight[i])</span><br><span class="line">        dp[i][j] &#x3D; max(dp[i-1][j],dp[i-1][j-weight[i]] + value[i]);</span><br><span class="line">      else</span><br><span class="line">        dp[i][j] &#x3D; dp[i-1][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  printf(&quot;%d&quot;,dp[n][v]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="青蛙跳台阶问题"><a class="markdownIt-Anchor" href="#青蛙跳台阶问题"></a> 青蛙跳台阶问题</h3><p>一只青蛙可以一次跳一级台阶，也可以一次跳两级台阶，如果青蛙要跳上n级台阶，共有多少钟跳法？</p><p>当青蛙即将跳上n级台阶时，共有两种可能性，一种是从n-1级台阶跳一步到n级，另外一种是从n-2级台阶跳两步到n级，所以求到n级台阶的所有可能性f(n)就转变为了求到n-2级台阶的所有可能性f(n-2)和到n-1级台阶的所有可能性f(n-1)之和，以此类推至最后f(2)=f(0)+f(1)=1+1。递推公式就是f(n) = f(n - 1) + f(n - 2)</p><details>  <summary>动态规划解决青蛙跳台阶问题的C语言实现代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fibonacci</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">      <span class="comment">//递推公式f(n) = f(n - 1) + f(n -2)</span></span><br><span class="line">      dp[<span class="number">2</span>] = dp[<span class="number">0</span>] + dp[<span class="number">1</span>];</span><br><span class="line">      dp[<span class="number">0</span>] = dp[<span class="number">1</span>];</span><br><span class="line">      dp[<span class="number">1</span>] = dp[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[<span class="number">2</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Fibonacci fb = <span class="keyword">new</span> Fibonacci();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">      System.out.print(fb.fibonacci(i));</span><br><span class="line">      System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><blockquote><p>相关题目 – 青蛙变态跳台阶问题<br />一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法？</p></blockquote><h3 id="收集苹果"><a class="markdownIt-Anchor" href="#收集苹果"></a> 收集苹果</h3><p>平面上有N*M个格子，每个格子中放着一定数量的苹果。你从左上角的格子开始，每一步只能向下走或是向右走，每次走到一个格子上就把格子里的苹果收集起来，这样下去，你最多能收集到多少个苹果。</p><blockquote><p>输入: 第一行输入行数和列数, 然后逐行输入每个格子的中的苹果的数量</p></blockquote><blockquote><p>输出：最多能收到的苹果的个数。</p></blockquote><p>这是一个典型的二维数组DP问题</p><ul><li><p>基本状态：<br />当你到达第x行第y列的格子的时候，收集到的苹果的数量dp[x][y]。</p></li><li><p>转移方程：<br />由于你只能向右走或者向下走，所以当你到达第x行第y列的格子的时候，你可能是从第x-1行第y列或者第x行第y-1列到达该格子的，而我们最后只要收集苹果最多的那一种方案。所以：<br />dp[x][y] = max( if(x&gt;0) dp[x-1][y] , if(y&gt;0) dp[x][y-1])</p></li></ul><details>  <summary>动态规划解决收集苹果问题的C语言实现代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp_fun</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">  dp[x][y] = a[x][y];</span><br><span class="line">  <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(x &gt; <span class="number">0</span> &amp;&amp; max &lt; dp[x<span class="number">-1</span>][y]) &#123;</span><br><span class="line">    max = dp[x<span class="number">-1</span>][y];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(y &gt; <span class="number">0</span> &amp;&amp; max &lt; dp[x][y<span class="number">-1</span>]) &#123;</span><br><span class="line">    max = dp[x][y<span class="number">-1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  dp[x][y] += max;</span><br><span class="line">  <span class="keyword">if</span>(x&lt;m<span class="number">-1</span>) &#123;</span><br><span class="line">    dp_fun(x+<span class="number">1</span>,y);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(y&lt;n<span class="number">-1</span>) &#123;</span><br><span class="line">    dp_fun(x,y+<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">      <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  dp_fun(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;dp[i][j]&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h3 id="数塔取数问题"><a class="markdownIt-Anchor" href="#数塔取数问题"></a> 数塔取数问题</h3><p>一个高度为N的由正整数组成的三角形，从上走到下，求经过的数字和的最大值。每次只能走到下一层相邻的数上，例如从第3层的6向下走，只能走到第4层的2或9上。<br />5</p><p>8 4</p><p>3 6 9</p><p>7 2 9 5</p><p>例子中的最优方案是：5 + 8 + 6 + 9 = 28。</p><p>站在位置9，我们可以选择沿12方向移动，也可以选择沿着15方向移动，现在我们假设“已经求的”沿12方向的最大值x和沿15方向的最大值y，那么站在9的最大值必然是：Max(x,y) + 9。</p><p>因此不难得出，对于任意节点i,其状态转移方程为：m[i] = Max(a[i的左孩子] , a[i的右孩子]) + a[i]</p><p>首先什么是“数塔类型”？从某一点转向另一点或者说是从某一状态转向另一状态，有多种选择方式(比如这里的9-&gt;12 , 9-&gt;15)，从中选取一条能产生最优值的路径。</p><p>这类问题的思考方法：假设后续步骤的结果已知，比如这里假设已经知道沿12方向的最大值x和沿15方向的最大值y。</p><details>  <summary>动态规划解决数塔取数问题的C语言实现代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>    <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>        N    10000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>        Max(a,b)    ((a) &gt; (b) ? (a) : (b))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>     a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>        n , m , i , k , j;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(m-- &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        k = (<span class="number">1</span> + n) * n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span> ; i &lt;= k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        k = k - n;</span><br><span class="line">        <span class="keyword">for</span>(i = k , j = <span class="number">0</span> ; i &gt;= <span class="number">1</span> ; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] = a[i] + Max(a[i+n],a[i+n<span class="number">-1</span>]);</span><br><span class="line">            <span class="keyword">if</span>(++j == n <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                n--;</span><br><span class="line">                j = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>    <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="免费馅饼问题"><a class="markdownIt-Anchor" href="#免费馅饼问题"></a> 免费馅饼问题</h3><p>都说天上不会掉馅饼，但有一天gameboy正走在回家的小径上，忽然天上掉下大把大把的馅饼。说来gameboy的人品实在是太好了，这馅饼别处都不掉，就掉落在他身旁的10米范围内。馅饼如果掉在了地上当然就不能吃了，所以gameboy马上卸下身上的背包去接。但由于小径两侧都不能站人，所以他只能在小径上接。由于gameboy平时老呆在房间里玩游戏，虽然在游戏中是个身手敏捷的高手，但在现实中运动神经特别迟钝，每秒种只有在移动不超过一米的范围内接住坠落的馅饼。现在给这条小径如图标上坐标：</p><p>为了使问题简化，假设在接下来的一段时间里，馅饼都掉落在0-10这11个位置。开始时gameboy站在5这个位置，因此在第一秒，他只能接到4,5,6这三个位置中期中一个位置上的馅饼。问gameboy最多可能接到多少个馅饼？(假设他的背包可以容纳无穷多个馅饼)</p><blockquote><p>Input： 输入数据有多组。每组数据的第一行为以正整数n(0&lt;n&lt;100000)，表示有n个馅饼掉在这条小径上。在结下来的n行中，每行有两个整数x,T(0&lt;T&lt;100000),表示在第T秒有一个馅饼掉在x点上。同一秒钟在同一点上可能掉下多个馅饼。n=0时输入结束。</p></blockquote><blockquote><p>Output： 每一组输入数据对应一行输出。输出一个整数m，表示gameboy最多可能接到m个馅饼。</p></blockquote><blockquote><p>提示：本题的输入数据量比较大，建议用scanf读入，用cin可能会超时。</p></blockquote><blockquote><p>Sample Input： 6 5 1 4 1 6 1 7 2 7 2 8 3 0</p></blockquote><blockquote><p>Sample Output： 4</p></blockquote><p>类似于DP中的数塔，不过要倒过来算，从下往上算，最后输出初始位置的数即可， 为了便于判断边界，可以将数组宽度开大一些，让它从1~11计数，这样就不用单独计算边界了， 如果数塔不懂，可以看我之前发的经典数塔题。</p><details>  <summary>动态规划解决免费馅饼问题的C语言实现代码</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_ARRAY_SIZE 100000</span></span><br><span class="line"><span class="keyword">int</span> data[MAX_ARRAY_SIZE][<span class="number">11</span>];<span class="comment">//存放最初的数据</span></span><br><span class="line"><span class="keyword">int</span> cost[MAX_ARRAY_SIZE][<span class="number">11</span>];<span class="comment">//存放各个子问题的最优解</span></span><br><span class="line"><span class="keyword">int</span> mark[MAX_ARRAY_SIZE][<span class="number">11</span>];<span class="comment">//存放输出最优解方案标志</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n),n!=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">memset</span>(data,<span class="number">0</span>,<span class="keyword">sizeof</span>(data));</span><br><span class="line">    <span class="keyword">int</span> i,x,T,max_T=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化data</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;T);</span><br><span class="line">      <span class="keyword">if</span>(T&gt;max_T)</span><br><span class="line">        max_T=T;</span><br><span class="line">      data[T][x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//dp初始化</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">11</span>;i++)&#123;</span><br><span class="line">      cost[max_T][i]=data[max_T][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//dp过程</span></span><br><span class="line">    <span class="keyword">for</span>(i=max_T<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">      <span class="keyword">int</span> j;</span><br><span class="line">      <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">11</span>;j++)&#123;</span><br><span class="line">        <span class="keyword">int</span> lvalue,mvalue,rvalue,maxvalue;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line">          lvalue=<span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          lvalue=cost[i+<span class="number">1</span>][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        mvalue=data[i+<span class="number">1</span>][j];</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">10</span>)&#123;</span><br><span class="line">          rvalue=<span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          rvalue=cost[i+<span class="number">1</span>][j+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(lvalue&gt;mvalue)&#123;</span><br><span class="line">          maxvalue=lvalue;</span><br><span class="line">          mark[i][j]=<span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(mvalue&gt;rvalue)&#123;</span><br><span class="line">            maxvalue=mvalue;</span><br><span class="line">            mark[i][j]=<span class="number">0</span>;</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            maxvalue=rvalue;</span><br><span class="line">            mark[i][j]=<span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cost[i][j]=data[i][j]+maxvalue;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,cost[<span class="number">0</span>][<span class="number">5</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;动态规划是通过拆分问题，定义问题状态和状态之间的关系，使得问题能够以递推(或者说分治)的方式去解决。&lt;/p&gt;
&lt;p&gt;经典例题: 最长公共子串LCS, 最长递增子序列LIS, 最大连续子序列之和, 01背包问题, 青蛙跳台阶问题, 收集苹果, 数塔取数问题, 免费馅饼问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="五大经典算法" scheme="https://imzhanghao.com/categories/%E4%BA%94%E5%A4%A7%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="动态规划" scheme="https://imzhanghao.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
</feed>
